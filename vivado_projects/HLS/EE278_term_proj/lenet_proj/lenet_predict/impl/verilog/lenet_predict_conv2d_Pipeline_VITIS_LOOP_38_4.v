// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module lenet_predict_conv2d_Pipeline_VITIS_LOOP_38_4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        mul_ln32,
        filters,
        select_ln33_5,
        select_ln33,
        input_r,
        add_ln32_2,
        select_ln33_7,
        sum_out,
        sum_out_ap_vld,
        sum_29_4_out,
        sum_29_4_out_ap_vld,
        ap_return,
        grp_fu_843_p_din0,
        grp_fu_843_p_din1,
        grp_fu_843_p_opcode,
        grp_fu_843_p_dout0,
        grp_fu_843_p_ce,
        grp_fu_847_p_din0,
        grp_fu_847_p_din1,
        grp_fu_847_p_dout0,
        grp_fu_847_p_ce
);

parameter    ap_ST_fsm_state1 = 44'd1;
parameter    ap_ST_fsm_pp0_stage0 = 44'd2;
parameter    ap_ST_fsm_pp0_stage1 = 44'd4;
parameter    ap_ST_fsm_pp0_stage2 = 44'd8;
parameter    ap_ST_fsm_pp0_stage3 = 44'd16;
parameter    ap_ST_fsm_pp0_stage4 = 44'd32;
parameter    ap_ST_fsm_pp0_stage5 = 44'd64;
parameter    ap_ST_fsm_pp0_stage6 = 44'd128;
parameter    ap_ST_fsm_pp0_stage7 = 44'd256;
parameter    ap_ST_fsm_pp0_stage8 = 44'd512;
parameter    ap_ST_fsm_pp0_stage9 = 44'd1024;
parameter    ap_ST_fsm_pp0_stage10 = 44'd2048;
parameter    ap_ST_fsm_pp0_stage11 = 44'd4096;
parameter    ap_ST_fsm_pp0_stage12 = 44'd8192;
parameter    ap_ST_fsm_pp0_stage13 = 44'd16384;
parameter    ap_ST_fsm_pp0_stage14 = 44'd32768;
parameter    ap_ST_fsm_pp0_stage15 = 44'd65536;
parameter    ap_ST_fsm_pp0_stage16 = 44'd131072;
parameter    ap_ST_fsm_pp0_stage17 = 44'd262144;
parameter    ap_ST_fsm_pp0_stage18 = 44'd524288;
parameter    ap_ST_fsm_pp0_stage19 = 44'd1048576;
parameter    ap_ST_fsm_pp0_stage20 = 44'd2097152;
parameter    ap_ST_fsm_pp0_stage21 = 44'd4194304;
parameter    ap_ST_fsm_pp0_stage22 = 44'd8388608;
parameter    ap_ST_fsm_pp0_stage23 = 44'd16777216;
parameter    ap_ST_fsm_pp0_stage24 = 44'd33554432;
parameter    ap_ST_fsm_pp0_stage25 = 44'd67108864;
parameter    ap_ST_fsm_pp0_stage26 = 44'd134217728;
parameter    ap_ST_fsm_pp0_stage27 = 44'd268435456;
parameter    ap_ST_fsm_pp0_stage28 = 44'd536870912;
parameter    ap_ST_fsm_pp0_stage29 = 44'd1073741824;
parameter    ap_ST_fsm_pp0_stage30 = 44'd2147483648;
parameter    ap_ST_fsm_pp0_stage31 = 44'd4294967296;
parameter    ap_ST_fsm_pp0_stage32 = 44'd8589934592;
parameter    ap_ST_fsm_pp0_stage33 = 44'd17179869184;
parameter    ap_ST_fsm_pp0_stage34 = 44'd34359738368;
parameter    ap_ST_fsm_pp0_stage35 = 44'd68719476736;
parameter    ap_ST_fsm_pp0_stage36 = 44'd137438953472;
parameter    ap_ST_fsm_pp0_stage37 = 44'd274877906944;
parameter    ap_ST_fsm_pp0_stage38 = 44'd549755813888;
parameter    ap_ST_fsm_pp0_stage39 = 44'd1099511627776;
parameter    ap_ST_fsm_state56 = 44'd2199023255552;
parameter    ap_ST_fsm_state57 = 44'd4398046511104;
parameter    ap_ST_fsm_state58 = 44'd8796093022208;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [31:0] m_axi_gmem_WDATA;
output  [3:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [31:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [8:0] m_axi_gmem_RFIFONUM;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
input  [7:0] mul_ln32;
input  [63:0] filters;
input  [9:0] select_ln33_5;
input  [4:0] select_ln33;
input  [63:0] input_r;
input  [7:0] add_ln32_2;
input  [4:0] select_ln33_7;
output  [31:0] sum_out;
output   sum_out_ap_vld;
output  [31:0] sum_29_4_out;
output   sum_29_4_out_ap_vld;
output  [0:0] ap_return;
output  [31:0] grp_fu_843_p_din0;
output  [31:0] grp_fu_843_p_din1;
output  [0:0] grp_fu_843_p_opcode;
input  [31:0] grp_fu_843_p_dout0;
output   grp_fu_843_p_ce;
output  [31:0] grp_fu_847_p_din0;
output  [31:0] grp_fu_847_p_din1;
input  [31:0] grp_fu_847_p_dout0;
output   grp_fu_847_p_ce;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_gmem_ARVALID;
reg[63:0] m_axi_gmem_ARADDR;
reg m_axi_gmem_RREADY;
reg[31:0] sum_out;
reg sum_out_ap_vld;
reg sum_29_4_out_ap_vld;
reg[0:0] ap_return;

(* fsm_encoding = "none" *) reg   [43:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    gmem_blk_n_AR;
wire    ap_CS_fsm_pp0_stage11;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage11;
reg   [0:0] icmp_ln38_reg_1190;
reg   [0:0] icmp_ln38_2_reg_1205;
reg    gmem_blk_n_R;
wire    ap_CS_fsm_pp0_stage19;
wire    ap_block_pp0_stage19;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12;
wire    ap_CS_fsm_pp0_stage20;
wire    ap_block_pp0_stage20;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13;
wire    ap_CS_fsm_pp0_stage21;
wire    ap_block_pp0_stage21;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14;
wire    ap_CS_fsm_pp0_stage22;
wire    ap_block_pp0_stage22;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_pp0_stage15;
wire    ap_CS_fsm_pp0_stage23;
wire    ap_block_pp0_stage23;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_pp0_stage16;
wire    ap_CS_fsm_pp0_stage24;
wire    ap_block_pp0_stage24;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_pp0_stage17;
wire    ap_CS_fsm_pp0_stage25;
wire    ap_block_pp0_stage25;
wire    ap_CS_fsm_pp0_stage18;
wire    ap_block_pp0_stage18;
wire    ap_CS_fsm_pp0_stage26;
wire    ap_block_pp0_stage26;
wire    ap_CS_fsm_pp0_stage27;
wire    ap_block_pp0_stage27;
wire    ap_CS_fsm_pp0_stage28;
wire    ap_block_pp0_stage28;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
reg   [31:0] reg_454;
reg    ap_block_state15_pp0_stage13_iter0;
reg    ap_predicate_op247_readreq_state15;
reg    ap_block_state15_io;
wire    ap_block_state55_pp0_stage13_iter1;
reg    ap_block_pp0_stage13_11001;
reg    ap_block_state19_pp0_stage17_iter0;
reg    ap_predicate_op313_readreq_state19;
reg    ap_block_state19_io;
reg    ap_block_pp0_stage17_11001;
reg    ap_predicate_op401_read_state27;
reg    ap_block_state27_pp0_stage25_iter0;
reg    ap_block_pp0_stage25_11001;
reg   [31:0] reg_459;
reg    ap_block_state17_pp0_stage15_iter0;
reg    ap_predicate_op279_readreq_state17;
reg    ap_block_state17_io;
reg    ap_block_pp0_stage15_11001;
reg    ap_predicate_op361_read_state23;
reg    ap_block_state23_pp0_stage21_iter0;
reg    ap_block_pp0_stage21_11001;
reg   [31:0] reg_464;
wire    ap_CS_fsm_pp0_stage29;
wire    ap_block_state31_pp0_stage29_iter0;
wire    ap_block_pp0_stage29_11001;
wire    ap_CS_fsm_pp0_stage33;
wire    ap_block_state35_pp0_stage33_iter0;
wire    ap_block_pp0_stage33_11001;
wire    ap_CS_fsm_pp0_stage37;
wire    ap_block_state39_pp0_stage37_iter0;
wire    ap_block_pp0_stage37_11001;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state3_pp0_stage1_iter0;
reg    ap_block_state3_io;
wire    ap_block_state43_pp0_stage1_iter1;
reg    ap_block_pp0_stage1_11001;
wire    ap_block_state7_pp0_stage5_iter0;
reg    ap_block_state7_io;
wire    ap_block_state47_pp0_stage5_iter1;
reg    ap_block_pp0_stage5_11001;
reg    ap_block_state11_pp0_stage9_iter0;
reg    ap_block_state11_io;
wire    ap_block_state51_pp0_stage9_iter1;
reg    ap_block_pp0_stage9_11001;
reg   [31:0] reg_470;
reg    ap_predicate_op336_read_state21;
reg    ap_block_state21_pp0_stage19_iter0;
reg    ap_predicate_op344_readreq_state21;
reg    ap_block_state21_io;
reg    ap_block_pp0_stage19_11001;
wire   [10:0] select_ln33_5_cast_fu_475_p1;
reg   [10:0] select_ln33_5_cast_reg_1179;
reg   [1:0] indvar_load_reg_1184;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state42_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln38_fu_500_p2;
reg  signed [61:0] trunc_ln_reg_1194;
wire   [10:0] empty_50_fu_587_p2;
reg   [10:0] empty_50_reg_1200;
wire   [0:0] icmp_ln38_2_fu_599_p2;
reg  signed [61:0] trunc_ln40_4_reg_1209;
wire   [7:0] empty_48_fu_696_p2;
reg   [7:0] empty_48_reg_1221;
wire  signed [62:0] sext_ln40_7_fu_702_p1;
reg  signed [62:0] sext_ln40_7_reg_1226;
wire    ap_block_state4_pp0_stage2_iter0;
reg    ap_block_state4_io;
wire    ap_block_state44_pp0_stage2_iter1;
reg    ap_block_pp0_stage2_11001;
reg   [63:0] gmem_addr_1_reg_1239;
wire  signed [62:0] sext_ln41_fu_731_p1;
reg  signed [62:0] sext_ln41_reg_1245;
wire    ap_block_state5_pp0_stage3_iter0;
reg    ap_block_state5_io;
wire    ap_block_state45_pp0_stage3_iter1;
reg    ap_block_pp0_stage3_11001;
reg   [63:0] gmem_addr_7_reg_1252;
reg   [63:0] gmem_addr_2_reg_1258;
wire    ap_block_state6_pp0_stage4_iter0;
reg    ap_block_state6_io;
wire    ap_block_state46_pp0_stage4_iter1;
reg    ap_block_pp0_stage4_11001;
reg   [63:0] gmem_addr_8_reg_1264;
reg   [63:0] gmem_addr_3_reg_1270;
wire    ap_block_state8_pp0_stage6_iter0;
reg    ap_block_state8_io;
wire    ap_block_state48_pp0_stage6_iter1;
reg    ap_block_pp0_stage6_11001;
reg   [63:0] gmem_addr_4_reg_1276;
reg   [63:0] gmem_addr_9_reg_1282;
wire    ap_block_state9_pp0_stage7_iter0;
reg    ap_block_state9_io;
wire    ap_block_state49_pp0_stage7_iter1;
reg    ap_block_pp0_stage7_11001;
reg   [63:0] gmem_addr_10_reg_1288;
reg   [31:0] gmem_addr_read_reg_1294;
reg   [31:0] gmem_addr_6_read_reg_1299;
reg    ap_block_state12_pp0_stage10_iter0;
reg    ap_block_state12_io;
wire    ap_block_state52_pp0_stage10_iter1;
reg    ap_block_pp0_stage10_11001;
reg  signed [61:0] trunc_ln40_5_reg_1304;
wire   [31:0] bitcast_ln41_fu_866_p1;
reg    ap_block_state13_pp0_stage11_iter0;
reg    ap_predicate_op217_readreq_state13;
reg    ap_block_state13_io;
wire    ap_block_state53_pp0_stage11_iter1;
reg    ap_block_pp0_stage11_11001;
wire   [31:0] bitcast_ln42_fu_870_p1;
reg   [31:0] gmem_addr_1_read_reg_1320;
reg  signed [61:0] trunc_ln40_6_reg_1325;
reg   [31:0] gmem_addr_7_read_reg_1337;
reg    ap_block_state14_pp0_stage12_iter0;
reg    ap_predicate_op230_readreq_state14;
reg    ap_block_state14_io;
wire    ap_block_state54_pp0_stage12_iter1;
reg    ap_block_pp0_stage12_11001;
wire  signed [62:0] sext_ln40_8_fu_910_p1;
reg  signed [62:0] sext_ln40_8_reg_1342;
reg   [63:0] gmem_addr_13_reg_1355;
wire   [31:0] bitcast_ln41_1_fu_939_p1;
wire   [31:0] bitcast_ln42_1_fu_943_p1;
reg   [31:0] gmem_addr_2_read_reg_1371;
wire  signed [62:0] sext_ln41_14_fu_947_p1;
reg  signed [62:0] sext_ln41_14_reg_1376;
reg   [63:0] gmem_addr_14_reg_1383;
reg   [31:0] sum_load_reg_1389;
reg    ap_block_state16_pp0_stage14_iter0;
reg    ap_predicate_op262_readreq_state16;
reg    ap_block_state16_io;
reg    ap_block_pp0_stage14_11001;
reg   [31:0] gmem_addr_8_read_reg_1395;
reg   [63:0] gmem_addr_15_reg_1400;
wire   [31:0] bitcast_ln41_2_fu_981_p1;
wire   [31:0] bitcast_ln42_2_fu_985_p1;
reg   [31:0] gmem_addr_3_read_reg_1416;
reg   [63:0] gmem_addr_16_reg_1421;
reg   [31:0] gmem_addr_9_read_reg_1427;
reg    ap_block_state18_pp0_stage16_iter0;
reg    ap_predicate_op293_readreq_state18;
reg    ap_block_state18_io;
reg    ap_block_pp0_stage16_11001;
reg   [63:0] gmem_addr_17_reg_1432;
reg   [63:0] gmem_addr_19_reg_1438;
wire   [31:0] bitcast_ln41_3_fu_1034_p1;
wire   [31:0] bitcast_ln42_3_fu_1038_p1;
reg   [31:0] gmem_addr_4_read_reg_1454;
reg   [63:0] gmem_addr_18_reg_1459;
reg   [63:0] gmem_addr_20_reg_1465;
reg   [31:0] gmem_addr_10_read_reg_1471;
reg    ap_block_state20_pp0_stage18_iter0;
reg    ap_predicate_op330_readreq_state20;
reg    ap_block_state20_io;
reg    ap_block_pp0_stage18_11001;
wire   [31:0] bitcast_ln41_4_fu_1072_p1;
wire   [31:0] bitcast_ln42_10_fu_1076_p1;
reg   [31:0] gmem_addr_11_read_reg_1486;
reg   [31:0] gmem_addr_12_read_reg_1491;
reg    ap_predicate_op347_read_state22;
reg    ap_block_state22_pp0_stage20_iter0;
reg    ap_predicate_op355_readreq_state22;
reg    ap_block_state22_io;
reg    ap_block_pp0_stage20_11001;
wire   [31:0] bitcast_ln41_5_fu_1080_p1;
wire   [31:0] bitcast_ln42_11_fu_1084_p1;
reg   [31:0] gmem_addr_13_read_reg_1506;
reg   [31:0] gmem_addr_14_read_reg_1511;
reg    ap_predicate_op371_read_state24;
reg    ap_block_state24_pp0_stage22_iter0;
reg    ap_block_pp0_stage22_11001;
reg   [31:0] mul27_0_1_reg_1516;
reg    ap_predicate_op383_read_state25;
reg    ap_block_state25_pp0_stage23_iter0;
reg    ap_block_pp0_stage23_11001;
wire   [31:0] bitcast_ln41_6_fu_1088_p1;
wire   [31:0] bitcast_ln42_12_fu_1092_p1;
reg   [31:0] gmem_addr_15_read_reg_1531;
reg   [31:0] gmem_addr_16_read_reg_1536;
reg    ap_predicate_op391_read_state26;
reg    ap_block_state26_pp0_stage24_iter0;
reg    ap_block_pp0_stage24_11001;
wire   [31:0] bitcast_ln41_7_fu_1096_p1;
wire   [31:0] bitcast_ln42_13_fu_1100_p1;
reg   [31:0] gmem_addr_17_read_reg_1551;
reg   [31:0] gmem_addr_18_read_reg_1556;
reg    ap_predicate_op407_read_state28;
reg    ap_block_state28_pp0_stage26_iter0;
reg    ap_block_pp0_stage26_11001;
reg   [31:0] mul27_0_1_2_reg_1561;
reg    ap_predicate_op415_read_state29;
reg    ap_block_state29_pp0_stage27_iter0;
reg    ap_block_pp0_stage27_11001;
wire   [31:0] bitcast_ln41_8_fu_1104_p1;
wire   [31:0] bitcast_ln42_14_fu_1108_p1;
reg   [31:0] gmem_addr_19_read_reg_1576;
reg   [31:0] gmem_addr_20_read_reg_1581;
reg    ap_predicate_op419_read_state30;
reg    ap_block_state30_pp0_stage28_iter0;
reg    ap_block_pp0_stage28_11001;
wire   [31:0] bitcast_ln41_9_fu_1112_p1;
wire   [31:0] bitcast_ln42_15_fu_1116_p1;
reg   [31:0] mul27_0_1_4_reg_1596;
wire    ap_CS_fsm_pp0_stage31;
wire    ap_block_state33_pp0_stage31_iter0;
wire    ap_block_pp0_stage31_11001;
wire    ap_block_pp0_stage33_subdone;
reg    ap_predicate_tran35to56_state35;
reg    ap_condition_pp0_exit_iter0_state35;
wire    ap_block_state41_pp0_stage39_iter0;
wire    ap_block_pp0_stage39_subdone;
wire    ap_CS_fsm_pp0_stage39;
reg   [0:0] UnifiedRetVal_reg_428;
wire    ap_CS_fsm_state57;
wire    ap_CS_fsm_state56;
wire  signed [63:0] sext_ln40_fu_671_p1;
wire  signed [63:0] sext_ln40_4_fu_705_p1;
wire  signed [63:0] sext_ln41_10_fu_721_p1;
wire  signed [63:0] sext_ln42_fu_740_p1;
wire  signed [63:0] sext_ln41_11_fu_755_p1;
wire  signed [63:0] sext_ln42_1_fu_770_p1;
wire  signed [63:0] sext_ln41_12_fu_785_p1;
wire  signed [63:0] sext_ln41_13_fu_800_p1;
wire  signed [63:0] sext_ln42_2_fu_815_p1;
wire  signed [63:0] sext_ln42_3_fu_830_p1;
wire  signed [63:0] sext_ln40_5_fu_890_p1;
wire  signed [63:0] sext_ln40_6_fu_913_p1;
wire  signed [63:0] sext_ln41_15_fu_929_p1;
wire  signed [63:0] sext_ln42_4_fu_956_p1;
wire  signed [63:0] sext_ln41_16_fu_971_p1;
wire  signed [63:0] sext_ln42_5_fu_994_p1;
wire  signed [63:0] sext_ln41_17_fu_1009_p1;
wire  signed [63:0] sext_ln41_18_fu_1024_p1;
wire  signed [63:0] sext_ln42_6_fu_1047_p1;
wire  signed [63:0] sext_ln42_7_fu_1062_p1;
wire    ap_block_state10_pp0_stage8_iter0;
reg    ap_block_state10_io;
wire    ap_block_state50_pp0_stage8_iter1;
reg    ap_block_pp0_stage8_11001;
reg   [31:0] sum_fu_120;
reg   [2:0] fi_fu_124;
wire   [2:0] add_ln38_fu_605_p2;
wire    ap_block_pp0_stage0;
reg   [1:0] indvar_fu_128;
wire   [1:0] add_ln38_2_fu_506_p2;
reg   [31:0] grp_fu_441_p0;
reg   [31:0] grp_fu_441_p1;
wire    ap_CS_fsm_pp0_stage30;
wire    ap_block_pp0_stage30;
wire    ap_CS_fsm_pp0_stage34;
wire    ap_block_pp0_stage34;
wire    ap_CS_fsm_pp0_stage38;
wire    ap_block_pp0_stage38;
reg   [31:0] grp_fu_445_p0;
reg   [31:0] grp_fu_445_p1;
wire    ap_block_pp0_stage29;
wire   [7:0] tmp_7_fu_512_p3;
wire   [10:0] p_cast20_fu_520_p1;
wire   [10:0] tmp1_fu_524_p2;
wire   [5:0] tmp_s_fu_529_p4;
wire   [12:0] tmp_8_fu_539_p4;
wire   [63:0] p_cast38_fu_548_p1;
wire   [63:0] empty_47_fu_552_p2;
wire   [9:0] tmp3_fu_567_p3;
wire   [7:0] tmp411_fu_577_p2;
wire   [10:0] tmp411_cast_fu_583_p1;
wire   [10:0] tmp3_cast_fu_573_p1;
wire   [2:0] or_ln38_fu_593_p2;
wire   [4:0] p_shl2_fu_621_p3;
wire   [2:0] p_shl3_fu_632_p3;
wire   [7:0] p_shl3_cast_fu_639_p1;
wire   [7:0] tmp_fu_643_p2;
wire   [7:0] p_shl2_cast_fu_628_p1;
wire   [7:0] empty_fu_648_p2;
wire   [9:0] tmp_6_fu_654_p3;
wire   [63:0] p_cast37_fu_662_p1;
wire   [63:0] empty_46_fu_666_p2;
wire   [7:0] tmp2_fu_691_p2;
wire   [62:0] add_ln41_1_fu_715_p2;
wire   [62:0] add_ln42_fu_734_p2;
wire   [62:0] add_ln41_2_fu_750_p2;
wire   [62:0] add_ln42_1_fu_765_p2;
wire   [62:0] add_ln41_3_fu_780_p2;
wire   [62:0] add_ln41_4_fu_795_p2;
wire   [62:0] add_ln42_2_fu_810_p2;
wire   [62:0] add_ln42_3_fu_825_p2;
wire   [12:0] tmp_10_fu_840_p3;
wire   [63:0] p_cast42_fu_847_p1;
wire   [63:0] empty_51_fu_851_p2;
wire   [9:0] tmp_9_fu_874_p3;
wire   [63:0] p_cast41_fu_881_p1;
wire   [63:0] empty_49_fu_885_p2;
wire   [62:0] add_ln41_fu_923_p2;
wire   [62:0] add_ln42_4_fu_950_p2;
wire   [62:0] add_ln41_8_fu_966_p2;
wire   [62:0] add_ln42_5_fu_989_p2;
wire   [62:0] add_ln41_9_fu_1004_p2;
wire   [62:0] add_ln41_10_fu_1019_p2;
wire   [62:0] add_ln42_6_fu_1042_p2;
wire   [62:0] add_ln42_7_fu_1057_p2;
reg    ap_block_pp0_stage14_00001;
reg    ap_block_pp0_stage18_00001;
reg    ap_block_pp0_stage22_00001;
reg    ap_block_pp0_stage26_00001;
wire    ap_block_state32_pp0_stage30_iter0;
wire    ap_block_pp0_stage30_00001;
wire    ap_block_state36_pp0_stage34_iter0;
wire    ap_block_pp0_stage34_00001;
wire    ap_block_state40_pp0_stage38_iter0;
wire    ap_block_pp0_stage38_00001;
wire    ap_block_pp0_stage2_00001;
wire    ap_block_pp0_stage6_00001;
reg    ap_block_pp0_stage10_00001;
reg    grp_fu_441_ce;
wire    ap_block_pp0_stage30_11001;
wire    ap_block_state34_pp0_stage32_iter0;
wire    ap_block_pp0_stage32_11001;
wire    ap_CS_fsm_pp0_stage32;
wire    ap_block_pp0_stage34_11001;
wire    ap_block_state37_pp0_stage35_iter0;
wire    ap_block_pp0_stage35_11001;
wire    ap_CS_fsm_pp0_stage35;
wire    ap_block_state38_pp0_stage36_iter0;
wire    ap_block_pp0_stage36_11001;
wire    ap_CS_fsm_pp0_stage36;
wire    ap_block_pp0_stage38_11001;
wire    ap_block_pp0_stage39_11001;
reg    grp_fu_445_ce;
reg   [0:0] ap_return_preg;
wire    ap_CS_fsm_state58;
reg   [43:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state56_blk;
wire    ap_ST_fsm_state57_blk;
wire    ap_ST_fsm_state58_blk;
wire    ap_block_pp0_stage0_subdone;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
reg    ap_block_pp0_stage7_subdone;
reg    ap_block_pp0_stage8_subdone;
reg    ap_block_pp0_stage9_subdone;
reg    ap_block_pp0_stage10_subdone;
reg    ap_block_pp0_stage11_subdone;
reg    ap_block_pp0_stage12_subdone;
reg    ap_block_pp0_stage13_subdone;
reg    ap_block_pp0_stage14_subdone;
reg    ap_block_pp0_stage15_subdone;
reg    ap_block_pp0_stage16_subdone;
reg    ap_block_pp0_stage17_subdone;
reg    ap_block_pp0_stage18_subdone;
reg    ap_block_pp0_stage19_subdone;
reg    ap_block_pp0_stage20_subdone;
reg    ap_block_pp0_stage21_subdone;
reg    ap_block_pp0_stage22_subdone;
reg    ap_block_pp0_stage23_subdone;
reg    ap_block_pp0_stage24_subdone;
reg    ap_block_pp0_stage25_subdone;
reg    ap_block_pp0_stage26_subdone;
reg    ap_block_pp0_stage27_subdone;
reg    ap_block_pp0_stage28_subdone;
wire    ap_block_pp0_stage29_subdone;
wire    ap_block_pp0_stage30_subdone;
wire    ap_block_pp0_stage31_subdone;
wire    ap_block_pp0_stage32_subdone;
wire    ap_block_pp0_stage34_subdone;
wire    ap_block_pp0_stage35_subdone;
wire    ap_block_pp0_stage36_subdone;
wire    ap_block_pp0_stage37_subdone;
wire    ap_block_pp0_stage38_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_705;
reg    ap_condition_721;
reg    ap_condition_737;
reg    ap_condition_751;
reg    ap_condition_755;
reg    ap_condition_767;
reg    ap_condition_781;
reg    ap_condition_2128;
reg    ap_condition_787;
reg    ap_condition_800;
reg    ap_condition_2138;
reg    ap_condition_2142;
reg    ap_condition_2146;
reg    ap_condition_2150;
reg    ap_condition_2154;
reg    ap_condition_2158;
reg    ap_condition_2162;
reg    ap_condition_2166;
reg    ap_condition_2170;
reg    ap_condition_2174;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 44'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_return_preg = 1'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage33) & (1'b1 == ap_condition_pp0_exit_iter0_state35) & (1'b0 == ap_block_pp0_stage33_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp0_stage33) & (1'b0 == ap_block_pp0_stage33_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage39) & (1'b0 == ap_block_pp0_stage39_subdone)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state58)) begin
            ap_return_preg <= UnifiedRetVal_reg_428;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        UnifiedRetVal_reg_428 <= 1'd0;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        UnifiedRetVal_reg_428 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        fi_fu_124 <= 3'd0;
    end else if (((icmp_ln38_2_fu_599_p2 == 1'd1) & (icmp_ln38_fu_500_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        fi_fu_124 <= add_ln38_fu_605_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_fu_128 <= 2'd0;
    end else if (((icmp_ln38_2_fu_599_p2 == 1'd1) & (icmp_ln38_fu_500_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        indvar_fu_128 <= add_ln38_2_fu_506_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        sum_fu_120 <= 32'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001))) begin
        sum_fu_120 <= grp_fu_843_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        empty_48_reg_1221 <= empty_48_fu_696_p2;
        trunc_ln40_4_reg_1209 <= {{empty_46_fu_666_p2[63:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln38_fu_500_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_50_reg_1200 <= empty_50_fu_587_p2;
        icmp_ln38_2_reg_1205 <= icmp_ln38_2_fu_599_p2;
        trunc_ln_reg_1194 <= {{empty_47_fu_552_p2[63:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage18) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage18_11001))) begin
        gmem_addr_10_read_reg_1471 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        gmem_addr_10_reg_1288 <= sext_ln42_3_fu_830_p1;
        gmem_addr_9_reg_1282 <= sext_ln42_2_fu_815_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op336_read_state21 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001))) begin
        gmem_addr_11_read_reg_1486 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op347_read_state22 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001))) begin
        gmem_addr_12_read_reg_1491 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op361_read_state23 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21_11001))) begin
        gmem_addr_13_read_reg_1506 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage12) & (icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage12_11001))) begin
        gmem_addr_13_reg_1355 <= sext_ln41_15_fu_929_p1;
        sext_ln40_8_reg_1342 <= sext_ln40_8_fu_910_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op371_read_state24 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001))) begin
        gmem_addr_14_read_reg_1511 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage13) & (icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage13_11001))) begin
        gmem_addr_14_reg_1383 <= sext_ln42_4_fu_956_p1;
        sext_ln41_14_reg_1376 <= sext_ln41_14_fu_947_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op383_read_state25 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
        gmem_addr_15_read_reg_1531 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage14) & (icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage14_11001))) begin
        gmem_addr_15_reg_1400 <= sext_ln41_16_fu_971_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001) & (ap_predicate_op391_read_state26 == 1'b1))) begin
        gmem_addr_16_read_reg_1536 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage15) & (icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage15_11001))) begin
        gmem_addr_16_reg_1421 <= sext_ln42_5_fu_994_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op401_read_state27 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_11001))) begin
        gmem_addr_17_read_reg_1551 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage16) & (icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage16_11001))) begin
        gmem_addr_17_reg_1432 <= sext_ln41_17_fu_1009_p1;
        gmem_addr_19_reg_1438 <= sext_ln41_18_fu_1024_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage26) & (1'b0 == ap_block_pp0_stage26_11001) & (ap_predicate_op407_read_state28 == 1'b1))) begin
        gmem_addr_18_read_reg_1556 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage17) & (icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage17_11001))) begin
        gmem_addr_18_reg_1459 <= sext_ln42_6_fu_1047_p1;
        gmem_addr_20_reg_1465 <= sext_ln42_7_fu_1062_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage27) & (1'b0 == ap_block_pp0_stage27_11001) & (ap_predicate_op415_read_state29 == 1'b1))) begin
        gmem_addr_19_read_reg_1576 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage11) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage11_11001))) begin
        gmem_addr_1_read_reg_1320 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        gmem_addr_1_reg_1239 <= sext_ln41_10_fu_721_p1;
        sext_ln40_7_reg_1226 <= sext_ln40_7_fu_702_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage28) & (1'b0 == ap_block_pp0_stage28_11001) & (ap_predicate_op419_read_state30 == 1'b1))) begin
        gmem_addr_20_read_reg_1581 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage13) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage13_11001))) begin
        gmem_addr_2_read_reg_1371 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        gmem_addr_2_reg_1258 <= sext_ln41_11_fu_755_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage15) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage15_11001))) begin
        gmem_addr_3_read_reg_1416 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        gmem_addr_3_reg_1270 <= sext_ln41_12_fu_785_p1;
        gmem_addr_4_reg_1276 <= sext_ln41_13_fu_800_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage17) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage17_11001))) begin
        gmem_addr_4_read_reg_1454 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage10) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage10_11001))) begin
        gmem_addr_6_read_reg_1299 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage12) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage12_11001))) begin
        gmem_addr_7_read_reg_1337 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        gmem_addr_7_reg_1252 <= sext_ln42_fu_740_p1;
        sext_ln41_reg_1245 <= sext_ln41_fu_731_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage14) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage14_11001))) begin
        gmem_addr_8_read_reg_1395 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        gmem_addr_8_reg_1264 <= sext_ln42_1_fu_770_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage16) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage16_11001))) begin
        gmem_addr_9_read_reg_1427 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage9) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage9_11001))) begin
        gmem_addr_read_reg_1294 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln38_reg_1190 <= icmp_ln38_fu_500_p2;
        indvar_load_reg_1184 <= indvar_fu_128;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage27) & (icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage27_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        mul27_0_1_2_reg_1561 <= grp_fu_847_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage31) & (icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage31_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        mul27_0_1_4_reg_1596 <= grp_fu_847_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage23) & (icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage23_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        mul27_0_1_reg_1516 <= grp_fu_847_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage25) & (icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage25_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage17) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        reg_454 <= grp_fu_847_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage15) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage21) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage21_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        reg_459 <= grp_fu_847_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage37) & (icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage37_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage33) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage33_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage29) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage29_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage25) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage25_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage17) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage17_11001) 
    & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage21) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage21_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        reg_464 <= grp_fu_843_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage29) & (icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage29_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage19) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        reg_470 <= grp_fu_847_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        select_ln33_5_cast_reg_1179[9 : 0] <= select_ln33_5_cast_fu_475_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage14) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        sum_load_reg_1389 <= sum_fu_120;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage10) & (icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage10_11001))) begin
        trunc_ln40_5_reg_1304 <= {{empty_51_fu_851_p2[63:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage11) & (icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage11_11001))) begin
        trunc_ln40_6_reg_1325 <= {{empty_49_fu_885_p2[63:2]}};
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state56_blk = 1'b0;

assign ap_ST_fsm_state57_blk = 1'b0;

assign ap_ST_fsm_state58_blk = 1'b0;

always @ (*) begin
    if (((icmp_ln38_reg_1190 == 1'd0) | (ap_predicate_tran35to56_state35 == 1'b1))) begin
        ap_condition_pp0_exit_iter0_state35 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state35 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state58) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        ap_return = UnifiedRetVal_reg_428;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage8) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage2) 
    & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage18) & (icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage17) & (icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage16) & (icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (icmp_ln38_2_reg_1205 
    == 1'd1) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage20) & (icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage19) & (icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage10) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage28) & (icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage28) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage27) & (icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage27) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage26) & (icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage26) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage18) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage25) & (icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage25) 
    & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage17) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage24) & (icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage16) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage23) & (icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage22) & (icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 
    == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage21) & (icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage20) & (icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage19) & (icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage37) & (1'b0 == ap_block_pp0_stage37_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage33) & (1'b0 == ap_block_pp0_stage33_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage29) & (1'b0 == ap_block_pp0_stage29_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) 
    | ((1'b1 == ap_CS_fsm_pp0_stage28) & (1'b0 == ap_block_pp0_stage28_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage27) & (1'b0 == ap_block_pp0_stage27_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage26) & (1'b0 == ap_block_pp0_stage26_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001)) 
    | ((1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage36) & (1'b0 == ap_block_pp0_stage36_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage35) & (1'b0 == ap_block_pp0_stage35_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage32) & (1'b0 == ap_block_pp0_stage32_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage38) & (1'b0 == ap_block_pp0_stage38_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage34) & (1'b0 == ap_block_pp0_stage34_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage30) & (1'b0 == ap_block_pp0_stage30_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage39) & (1'b0 == ap_block_pp0_stage39_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage31) & (1'b0 == ap_block_pp0_stage31_11001)))) begin
        grp_fu_441_ce = 1'b1;
    end else begin
        grp_fu_441_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((1'b1 == ap_CS_fsm_pp0_stage26) & (1'b0 == ap_block_pp0_stage26) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage38) & (1'b0 == ap_block_pp0_stage38) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage34) & (1'b0 == ap_block_pp0_stage34) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage30) & (1'b0 == ap_block_pp0_stage30) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_441_p0 = reg_464;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_441_p0 = sum_fu_120;
    end else begin
        grp_fu_441_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10))) begin
        grp_fu_441_p1 = mul27_0_1_4_reg_1596;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_441_p1 = mul27_0_1_2_reg_1561;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage34) & (1'b0 == ap_block_pp0_stage34) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_441_p1 = mul27_0_1_reg_1516;
    end else if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((1'b1 == ap_CS_fsm_pp0_stage26) & (1'b0 == ap_block_pp0_stage26) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_441_p1 = reg_470;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage30) & (1'b0 == ap_block_pp0_stage30) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_441_p1 = reg_459;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage38) & (1'b0 == ap_block_pp0_stage38) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_441_p1 = reg_454;
    end else begin
        grp_fu_441_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage29) & (1'b0 == ap_block_pp0_stage29_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage28) & (1'b0 == ap_block_pp0_stage28_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage27) & (1'b0 == ap_block_pp0_stage27_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage26) & (1'b0 == ap_block_pp0_stage26_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21_11001)) 
    | ((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage30) & (1'b0 == ap_block_pp0_stage30_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage31) & (1'b0 == ap_block_pp0_stage31_11001)))) begin
        grp_fu_445_ce = 1'b1;
    end else begin
        grp_fu_445_ce = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage29) & (1'b0 == ap_block_pp0_stage29))) begin
            grp_fu_445_p0 = bitcast_ln41_9_fu_1112_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage27) & (1'b0 == ap_block_pp0_stage27))) begin
            grp_fu_445_p0 = bitcast_ln41_8_fu_1104_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25))) begin
            grp_fu_445_p0 = bitcast_ln41_7_fu_1096_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23))) begin
            grp_fu_445_p0 = bitcast_ln41_6_fu_1088_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21))) begin
            grp_fu_445_p0 = bitcast_ln41_5_fu_1080_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19))) begin
            grp_fu_445_p0 = bitcast_ln41_4_fu_1072_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17))) begin
            grp_fu_445_p0 = bitcast_ln41_3_fu_1034_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15))) begin
            grp_fu_445_p0 = bitcast_ln41_2_fu_981_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13))) begin
            grp_fu_445_p0 = bitcast_ln41_1_fu_939_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11))) begin
            grp_fu_445_p0 = bitcast_ln41_fu_866_p1;
        end else begin
            grp_fu_445_p0 = 'bx;
        end
    end else begin
        grp_fu_445_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage29) & (1'b0 == ap_block_pp0_stage29))) begin
            grp_fu_445_p1 = bitcast_ln42_15_fu_1116_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage27) & (1'b0 == ap_block_pp0_stage27))) begin
            grp_fu_445_p1 = bitcast_ln42_14_fu_1108_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25))) begin
            grp_fu_445_p1 = bitcast_ln42_13_fu_1100_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23))) begin
            grp_fu_445_p1 = bitcast_ln42_12_fu_1092_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21))) begin
            grp_fu_445_p1 = bitcast_ln42_11_fu_1084_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19))) begin
            grp_fu_445_p1 = bitcast_ln42_10_fu_1076_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17))) begin
            grp_fu_445_p1 = bitcast_ln42_3_fu_1038_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15))) begin
            grp_fu_445_p1 = bitcast_ln42_2_fu_985_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13))) begin
            grp_fu_445_p1 = bitcast_ln42_1_fu_943_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11))) begin
            grp_fu_445_p1 = bitcast_ln42_fu_870_p1;
        end else begin
            grp_fu_445_p1 = 'bx;
        end
    end else begin
        grp_fu_445_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if ((1'b1 == ap_condition_2174)) begin
            m_axi_gmem_ARADDR = gmem_addr_20_reg_1465;
        end else if ((1'b1 == ap_condition_2170)) begin
            m_axi_gmem_ARADDR = gmem_addr_19_reg_1438;
        end else if ((1'b1 == ap_condition_2166)) begin
            m_axi_gmem_ARADDR = gmem_addr_18_reg_1459;
        end else if ((1'b1 == ap_condition_2162)) begin
            m_axi_gmem_ARADDR = gmem_addr_17_reg_1432;
        end else if ((1'b1 == ap_condition_2158)) begin
            m_axi_gmem_ARADDR = gmem_addr_16_reg_1421;
        end else if ((1'b1 == ap_condition_2154)) begin
            m_axi_gmem_ARADDR = gmem_addr_15_reg_1400;
        end else if ((1'b1 == ap_condition_2150)) begin
            m_axi_gmem_ARADDR = gmem_addr_14_reg_1383;
        end else if ((1'b1 == ap_condition_2146)) begin
            m_axi_gmem_ARADDR = gmem_addr_13_reg_1355;
        end else if ((1'b1 == ap_condition_2142)) begin
            m_axi_gmem_ARADDR = sext_ln40_6_fu_913_p1;
        end else if ((1'b1 == ap_condition_2138)) begin
            m_axi_gmem_ARADDR = sext_ln40_5_fu_890_p1;
        end else if ((1'b1 == ap_condition_800)) begin
            m_axi_gmem_ARADDR = gmem_addr_10_reg_1288;
        end else if ((1'b1 == ap_condition_787)) begin
            m_axi_gmem_ARADDR = gmem_addr_4_reg_1276;
        end else if ((1'b1 == ap_condition_2128)) begin
            m_axi_gmem_ARADDR = gmem_addr_9_reg_1282;
        end else if ((1'b1 == ap_condition_781)) begin
            m_axi_gmem_ARADDR = gmem_addr_3_reg_1270;
        end else if ((1'b1 == ap_condition_767)) begin
            m_axi_gmem_ARADDR = gmem_addr_8_reg_1264;
        end else if ((1'b1 == ap_condition_755)) begin
            m_axi_gmem_ARADDR = gmem_addr_2_reg_1258;
        end else if ((1'b1 == ap_condition_751)) begin
            m_axi_gmem_ARADDR = gmem_addr_7_reg_1252;
        end else if ((1'b1 == ap_condition_737)) begin
            m_axi_gmem_ARADDR = gmem_addr_1_reg_1239;
        end else if ((1'b1 == ap_condition_721)) begin
            m_axi_gmem_ARADDR = sext_ln40_4_fu_705_p1;
        end else if ((1'b1 == ap_condition_705)) begin
            m_axi_gmem_ARADDR = sext_ln40_fu_671_p1;
        end else begin
            m_axi_gmem_ARADDR = 'bx;
        end
    end else begin
        m_axi_gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op355_readreq_state22 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_predicate_op330_readreq_state20 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_predicate_op293_readreq_state18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_predicate_op262_readreq_state16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_predicate_op230_readreq_state14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_predicate_op217_readreq_state13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_predicate_op344_readreq_state21 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) 
    & (1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_predicate_op279_readreq_state17 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_predicate_op313_readreq_state19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_predicate_op247_readreq_state15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln38_reg_1190 
    == 1'd1) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        m_axi_gmem_ARVALID = 1'b1;
    end else begin
        m_axi_gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op383_read_state25 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_predicate_op371_read_state24 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_predicate_op347_read_state22 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_predicate_op336_read_state21 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_predicate_op361_read_state23 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_predicate_op401_read_state27 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage10_11001) 
    & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage28) & (1'b0 == ap_block_pp0_stage28_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op419_read_state30 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage27) & (1'b0 == ap_block_pp0_stage27_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op415_read_state29 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage26) & (1'b0 == ap_block_pp0_stage26_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op407_read_state28 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage18) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage17) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001) & (ap_enable_reg_pp0_iter0 
    == 1'b1) & (ap_predicate_op391_read_state26 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage16) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        m_axi_gmem_RREADY = 1'b1;
    end else begin
        m_axi_gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        sum_29_4_out_ap_vld = 1'b1;
    end else begin
        sum_29_4_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        sum_out = sum_fu_120;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        sum_out = sum_load_reg_1389;
    end else begin
        sum_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state57))) begin
        sum_out_ap_vld = 1'b1;
    end else begin
        sum_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((1'b0 == ap_block_pp0_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((1'b0 == ap_block_pp0_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_pp0_stage21 : begin
            if ((1'b0 == ap_block_pp0_stage21_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end
        end
        ap_ST_fsm_pp0_stage22 : begin
            if ((1'b0 == ap_block_pp0_stage22_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end
        end
        ap_ST_fsm_pp0_stage23 : begin
            if ((1'b0 == ap_block_pp0_stage23_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end
        end
        ap_ST_fsm_pp0_stage24 : begin
            if ((1'b0 == ap_block_pp0_stage24_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end
        end
        ap_ST_fsm_pp0_stage25 : begin
            if ((1'b0 == ap_block_pp0_stage25_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end
        end
        ap_ST_fsm_pp0_stage26 : begin
            if ((1'b0 == ap_block_pp0_stage26_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end
        end
        ap_ST_fsm_pp0_stage27 : begin
            if ((1'b0 == ap_block_pp0_stage27_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end
        end
        ap_ST_fsm_pp0_stage28 : begin
            if ((1'b0 == ap_block_pp0_stage28_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end
        end
        ap_ST_fsm_pp0_stage29 : begin
            if ((1'b0 == ap_block_pp0_stage29_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end
        end
        ap_ST_fsm_pp0_stage30 : begin
            if ((1'b0 == ap_block_pp0_stage30_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end
        end
        ap_ST_fsm_pp0_stage31 : begin
            if ((1'b0 == ap_block_pp0_stage31_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end
        end
        ap_ST_fsm_pp0_stage32 : begin
            if ((1'b0 == ap_block_pp0_stage32_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage32;
            end
        end
        ap_ST_fsm_pp0_stage33 : begin
            if ((~(((icmp_ln38_reg_1190 == 1'd0) & (1'b0 == ap_block_pp0_stage33_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage33_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_tran35to56_state35 == 1'b1))) & (1'b0 == ap_block_pp0_stage33_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage34;
            end else if (((icmp_ln38_reg_1190 == 1'd0) & (1'b0 == ap_block_pp0_stage33_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end else if (((1'b0 == ap_block_pp0_stage33_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_tran35to56_state35 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage33;
            end
        end
        ap_ST_fsm_pp0_stage34 : begin
            if ((1'b0 == ap_block_pp0_stage34_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage34;
            end
        end
        ap_ST_fsm_pp0_stage35 : begin
            if ((1'b0 == ap_block_pp0_stage35_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage35;
            end
        end
        ap_ST_fsm_pp0_stage36 : begin
            if ((1'b0 == ap_block_pp0_stage36_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage36;
            end
        end
        ap_ST_fsm_pp0_stage37 : begin
            if ((1'b0 == ap_block_pp0_stage37_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage37;
            end
        end
        ap_ST_fsm_pp0_stage38 : begin
            if ((1'b0 == ap_block_pp0_stage38_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage38;
            end
        end
        ap_ST_fsm_pp0_stage39 : begin
            if ((1'b0 == ap_block_pp0_stage39_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage39;
            end
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln38_2_fu_506_p2 = (indvar_fu_128 + 2'd1);

assign add_ln38_fu_605_p2 = (fi_fu_124 + 3'd2);

assign add_ln41_10_fu_1019_p2 = ($signed(sext_ln40_8_reg_1342) + $signed(63'd4));

assign add_ln41_1_fu_715_p2 = ($signed(sext_ln40_7_fu_702_p1) + $signed(63'd1));

assign add_ln41_2_fu_750_p2 = ($signed(sext_ln40_7_reg_1226) + $signed(63'd2));

assign add_ln41_3_fu_780_p2 = ($signed(sext_ln40_7_reg_1226) + $signed(63'd3));

assign add_ln41_4_fu_795_p2 = ($signed(sext_ln40_7_reg_1226) + $signed(63'd4));

assign add_ln41_8_fu_966_p2 = ($signed(sext_ln40_8_reg_1342) + $signed(63'd2));

assign add_ln41_9_fu_1004_p2 = ($signed(sext_ln40_8_reg_1342) + $signed(63'd3));

assign add_ln41_fu_923_p2 = ($signed(sext_ln40_8_fu_910_p1) + $signed(63'd1));

assign add_ln42_1_fu_765_p2 = ($signed(sext_ln41_reg_1245) + $signed(63'd2));

assign add_ln42_2_fu_810_p2 = ($signed(sext_ln41_reg_1245) + $signed(63'd3));

assign add_ln42_3_fu_825_p2 = ($signed(sext_ln41_reg_1245) + $signed(63'd4));

assign add_ln42_4_fu_950_p2 = ($signed(sext_ln41_14_fu_947_p1) + $signed(63'd1));

assign add_ln42_5_fu_989_p2 = ($signed(sext_ln41_14_reg_1376) + $signed(63'd2));

assign add_ln42_6_fu_1042_p2 = ($signed(sext_ln41_14_reg_1376) + $signed(63'd3));

assign add_ln42_7_fu_1057_p2 = ($signed(sext_ln41_14_reg_1376) + $signed(63'd4));

assign add_ln42_fu_734_p2 = ($signed(sext_ln41_fu_731_p1) + $signed(63'd1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage20 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp0_stage21 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp0_stage22 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp0_stage23 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp0_stage24 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp0_stage25 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_pp0_stage26 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp0_stage27 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_pp0_stage28 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_pp0_stage29 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage30 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_pp0_stage31 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_pp0_stage32 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_pp0_stage33 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_pp0_stage34 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_pp0_stage35 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_pp0_stage36 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_pp0_stage37 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_pp0_stage38 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_pp0_stage39 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd43];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_00001 = ((icmp_ln38_reg_1190 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage10_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state12_io) | ((icmp_ln38_reg_1190 == 1'd1) & (m_axi_gmem_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage10_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state12_io) | ((icmp_ln38_reg_1190 == 1'd1) & (m_axi_gmem_RVALID == 1'b0))));
end

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state13_io) | ((icmp_ln38_reg_1190 == 1'd1) & (m_axi_gmem_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage11_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state13_io) | ((icmp_ln38_reg_1190 == 1'd1) & (m_axi_gmem_RVALID == 1'b0))));
end

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage12_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state14_io) | ((icmp_ln38_reg_1190 == 1'd1) & (m_axi_gmem_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage12_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state14_io) | ((icmp_ln38_reg_1190 == 1'd1) & (m_axi_gmem_RVALID == 1'b0))));
end

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage13_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state15_io) | ((icmp_ln38_reg_1190 == 1'd1) & (m_axi_gmem_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage13_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state15_io) | ((icmp_ln38_reg_1190 == 1'd1) & (m_axi_gmem_RVALID == 1'b0))));
end

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage14_00001 = ((icmp_ln38_reg_1190 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage14_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state16_io) | ((icmp_ln38_reg_1190 == 1'd1) & (m_axi_gmem_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage14_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state16_io) | ((icmp_ln38_reg_1190 == 1'd1) & (m_axi_gmem_RVALID == 1'b0))));
end

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage15_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state17_io) | ((icmp_ln38_reg_1190 == 1'd1) & (m_axi_gmem_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage15_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state17_io) | ((icmp_ln38_reg_1190 == 1'd1) & (m_axi_gmem_RVALID == 1'b0))));
end

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage16_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state18_io) | ((icmp_ln38_reg_1190 == 1'd1) & (m_axi_gmem_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage16_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state18_io) | ((icmp_ln38_reg_1190 == 1'd1) & (m_axi_gmem_RVALID == 1'b0))));
end

assign ap_block_pp0_stage17 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage17_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state19_io) | ((icmp_ln38_reg_1190 == 1'd1) & (m_axi_gmem_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage17_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state19_io) | ((icmp_ln38_reg_1190 == 1'd1) & (m_axi_gmem_RVALID == 1'b0))));
end

assign ap_block_pp0_stage18 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage18_00001 = ((icmp_ln38_reg_1190 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage18_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state20_io) | ((icmp_ln38_reg_1190 == 1'd1) & (m_axi_gmem_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage18_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state20_io) | ((icmp_ln38_reg_1190 == 1'd1) & (m_axi_gmem_RVALID == 1'b0))));
end

assign ap_block_pp0_stage19 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage19_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state21_io) | ((ap_predicate_op336_read_state21 == 1'b1) & (m_axi_gmem_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage19_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state21_io) | ((ap_predicate_op336_read_state21 == 1'b1) & (m_axi_gmem_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((1'b1 == ap_block_state3_io) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((1'b1 == ap_block_state3_io) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage20_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state22_io) | ((ap_predicate_op347_read_state22 == 1'b1) & (m_axi_gmem_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage20_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state22_io) | ((ap_predicate_op347_read_state22 == 1'b1) & (m_axi_gmem_RVALID == 1'b0))));
end

assign ap_block_pp0_stage21 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage21_11001 = ((ap_predicate_op361_read_state23 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage21_subdone = ((ap_predicate_op361_read_state23 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (m_axi_gmem_RVALID == 1'b0));
end

assign ap_block_pp0_stage22 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage22_00001 = ((ap_predicate_op371_read_state24 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage22_11001 = ((ap_predicate_op371_read_state24 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage22_subdone = ((ap_predicate_op371_read_state24 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (m_axi_gmem_RVALID == 1'b0));
end

assign ap_block_pp0_stage23 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage23_11001 = ((ap_predicate_op383_read_state25 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage23_subdone = ((ap_predicate_op383_read_state25 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (m_axi_gmem_RVALID == 1'b0));
end

assign ap_block_pp0_stage24 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage24_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op391_read_state26 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage24_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op391_read_state26 == 1'b1));
end

assign ap_block_pp0_stage25 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage25_11001 = ((ap_predicate_op401_read_state27 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage25_subdone = ((ap_predicate_op401_read_state27 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (m_axi_gmem_RVALID == 1'b0));
end

assign ap_block_pp0_stage26 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage26_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op407_read_state28 == 1'b1) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage26_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op407_read_state28 == 1'b1) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage26_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op407_read_state28 == 1'b1) & (m_axi_gmem_RVALID == 1'b0));
end

assign ap_block_pp0_stage27 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage27_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op415_read_state29 == 1'b1) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage27_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op415_read_state29 == 1'b1) & (m_axi_gmem_RVALID == 1'b0));
end

assign ap_block_pp0_stage28 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage28_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op419_read_state30 == 1'b1) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage28_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op419_read_state30 == 1'b1) & (m_axi_gmem_RVALID == 1'b0));
end

assign ap_block_pp0_stage29 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage29_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage29_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((1'b1 == ap_block_state4_io) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((1'b1 == ap_block_state4_io) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage32_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage32_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage33_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage33_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage34 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage34_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage34_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage34_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage35_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage35_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage36_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage36_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage37_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage37_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage38 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage38_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage38_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage38_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage39_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage39_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((1'b1 == ap_block_state5_io) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((1'b1 == ap_block_state5_io) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((1'b1 == ap_block_state6_io) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((1'b1 == ap_block_state6_io) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((1'b1 == ap_block_state7_io) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((1'b1 == ap_block_state7_io) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_00001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_11001 = ((1'b1 == ap_block_state8_io) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = ((1'b1 == ap_block_state8_io) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_11001 = ((1'b1 == ap_block_state9_io) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = ((1'b1 == ap_block_state9_io) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_11001 = ((1'b1 == ap_block_state10_io) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage8_subdone = ((1'b1 == ap_block_state10_io) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state11_io) | ((icmp_ln38_reg_1190 == 1'd1) & (m_axi_gmem_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage9_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state11_io) | ((icmp_ln38_reg_1190 == 1'd1) & (m_axi_gmem_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_state10_io = ((m_axi_gmem_ARREADY == 1'b0) & (icmp_ln38_reg_1190 == 1'd1));
end

assign ap_block_state10_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_io = ((m_axi_gmem_ARREADY == 1'b0) & (icmp_ln38_reg_1190 == 1'd1));
end

always @ (*) begin
    ap_block_state11_pp0_stage9_iter0 = ((icmp_ln38_reg_1190 == 1'd1) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state12_io = ((m_axi_gmem_ARREADY == 1'b0) & (icmp_ln38_reg_1190 == 1'd1));
end

always @ (*) begin
    ap_block_state12_pp0_stage10_iter0 = ((icmp_ln38_reg_1190 == 1'd1) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state13_io = ((m_axi_gmem_ARREADY == 1'b0) & (ap_predicate_op217_readreq_state13 == 1'b1));
end

always @ (*) begin
    ap_block_state13_pp0_stage11_iter0 = ((icmp_ln38_reg_1190 == 1'd1) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state14_io = ((m_axi_gmem_ARREADY == 1'b0) & (ap_predicate_op230_readreq_state14 == 1'b1));
end

always @ (*) begin
    ap_block_state14_pp0_stage12_iter0 = ((icmp_ln38_reg_1190 == 1'd1) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state15_io = ((m_axi_gmem_ARREADY == 1'b0) & (ap_predicate_op247_readreq_state15 == 1'b1));
end

always @ (*) begin
    ap_block_state15_pp0_stage13_iter0 = ((icmp_ln38_reg_1190 == 1'd1) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state16_io = ((m_axi_gmem_ARREADY == 1'b0) & (ap_predicate_op262_readreq_state16 == 1'b1));
end

always @ (*) begin
    ap_block_state16_pp0_stage14_iter0 = ((icmp_ln38_reg_1190 == 1'd1) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state17_io = ((m_axi_gmem_ARREADY == 1'b0) & (ap_predicate_op279_readreq_state17 == 1'b1));
end

always @ (*) begin
    ap_block_state17_pp0_stage15_iter0 = ((icmp_ln38_reg_1190 == 1'd1) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state18_io = ((ap_predicate_op293_readreq_state18 == 1'b1) & (m_axi_gmem_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state18_pp0_stage16_iter0 = ((icmp_ln38_reg_1190 == 1'd1) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state19_io = ((m_axi_gmem_ARREADY == 1'b0) & (ap_predicate_op313_readreq_state19 == 1'b1));
end

always @ (*) begin
    ap_block_state19_pp0_stage17_iter0 = ((icmp_ln38_reg_1190 == 1'd1) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state20_io = ((ap_predicate_op330_readreq_state20 == 1'b1) & (m_axi_gmem_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state20_pp0_stage18_iter0 = ((icmp_ln38_reg_1190 == 1'd1) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state21_io = ((m_axi_gmem_ARREADY == 1'b0) & (ap_predicate_op344_readreq_state21 == 1'b1));
end

always @ (*) begin
    ap_block_state21_pp0_stage19_iter0 = ((ap_predicate_op336_read_state21 == 1'b1) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state22_io = ((ap_predicate_op355_readreq_state22 == 1'b1) & (m_axi_gmem_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state22_pp0_stage20_iter0 = ((ap_predicate_op347_read_state22 == 1'b1) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state23_pp0_stage21_iter0 = ((ap_predicate_op361_read_state23 == 1'b1) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state24_pp0_stage22_iter0 = ((ap_predicate_op371_read_state24 == 1'b1) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state25_pp0_stage23_iter0 = ((ap_predicate_op383_read_state25 == 1'b1) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state26_pp0_stage24_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op391_read_state26 == 1'b1));
end

always @ (*) begin
    ap_block_state27_pp0_stage25_iter0 = ((ap_predicate_op401_read_state27 == 1'b1) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state28_pp0_stage26_iter0 = ((ap_predicate_op407_read_state28 == 1'b1) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state29_pp0_stage27_iter0 = ((ap_predicate_op415_read_state29 == 1'b1) & (m_axi_gmem_RVALID == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state30_pp0_stage28_iter0 = ((ap_predicate_op419_read_state30 == 1'b1) & (m_axi_gmem_RVALID == 1'b0));
end

assign ap_block_state31_pp0_stage29_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage30_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage31_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage32_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage33_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage34_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage35_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage36_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage37_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_io = ((m_axi_gmem_ARREADY == 1'b0) & (icmp_ln38_reg_1190 == 1'd1));
end

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage38_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage39_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_io = ((m_axi_gmem_ARREADY == 1'b0) & (icmp_ln38_reg_1190 == 1'd1));
end

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage8_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage9_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage10_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage11_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage12_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage13_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_io = ((m_axi_gmem_ARREADY == 1'b0) & (icmp_ln38_reg_1190 == 1'd1));
end

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_io = ((m_axi_gmem_ARREADY == 1'b0) & (icmp_ln38_reg_1190 == 1'd1));
end

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_io = ((m_axi_gmem_ARREADY == 1'b0) & (icmp_ln38_reg_1190 == 1'd1));
end

assign ap_block_state7_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_io = ((m_axi_gmem_ARREADY == 1'b0) & (icmp_ln38_reg_1190 == 1'd1));
end

assign ap_block_state8_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_io = ((m_axi_gmem_ARREADY == 1'b0) & (icmp_ln38_reg_1190 == 1'd1));
end

assign ap_block_state9_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_2128 = ((1'b1 == ap_CS_fsm_pp0_stage8) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage8_11001));
end

always @ (*) begin
    ap_condition_2138 = ((ap_predicate_op217_readreq_state13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001));
end

always @ (*) begin
    ap_condition_2142 = ((ap_predicate_op230_readreq_state14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001));
end

always @ (*) begin
    ap_condition_2146 = ((ap_predicate_op247_readreq_state15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001));
end

always @ (*) begin
    ap_condition_2150 = ((ap_predicate_op262_readreq_state16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001));
end

always @ (*) begin
    ap_condition_2154 = ((ap_predicate_op279_readreq_state17 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001));
end

always @ (*) begin
    ap_condition_2158 = ((ap_predicate_op293_readreq_state18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001));
end

always @ (*) begin
    ap_condition_2162 = ((ap_predicate_op313_readreq_state19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001));
end

always @ (*) begin
    ap_condition_2166 = ((ap_predicate_op330_readreq_state20 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001));
end

always @ (*) begin
    ap_condition_2170 = ((ap_predicate_op344_readreq_state21 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001));
end

always @ (*) begin
    ap_condition_2174 = ((ap_predicate_op355_readreq_state22 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001));
end

always @ (*) begin
    ap_condition_705 = ((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001));
end

always @ (*) begin
    ap_condition_721 = ((1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001));
end

always @ (*) begin
    ap_condition_737 = ((1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001));
end

always @ (*) begin
    ap_condition_751 = ((1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage4_11001));
end

always @ (*) begin
    ap_condition_755 = ((1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage5_11001));
end

always @ (*) begin
    ap_condition_767 = ((1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage6_11001));
end

always @ (*) begin
    ap_condition_781 = ((1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage7_11001));
end

always @ (*) begin
    ap_condition_787 = ((1'b1 == ap_CS_fsm_pp0_stage9) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage9_11001));
end

always @ (*) begin
    ap_condition_800 = ((1'b1 == ap_CS_fsm_pp0_stage10) & (icmp_ln38_reg_1190 == 1'd1) & (1'b0 == ap_block_pp0_stage10_11001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_op217_readreq_state13 = ((icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1));
end

always @ (*) begin
    ap_predicate_op230_readreq_state14 = ((icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1));
end

always @ (*) begin
    ap_predicate_op247_readreq_state15 = ((icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1));
end

always @ (*) begin
    ap_predicate_op262_readreq_state16 = ((icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1));
end

always @ (*) begin
    ap_predicate_op279_readreq_state17 = ((icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1));
end

always @ (*) begin
    ap_predicate_op293_readreq_state18 = ((icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1));
end

always @ (*) begin
    ap_predicate_op313_readreq_state19 = ((icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1));
end

always @ (*) begin
    ap_predicate_op330_readreq_state20 = ((icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1));
end

always @ (*) begin
    ap_predicate_op336_read_state21 = ((icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1));
end

always @ (*) begin
    ap_predicate_op344_readreq_state21 = ((icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1));
end

always @ (*) begin
    ap_predicate_op347_read_state22 = ((icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1));
end

always @ (*) begin
    ap_predicate_op355_readreq_state22 = ((icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1));
end

always @ (*) begin
    ap_predicate_op361_read_state23 = ((icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1));
end

always @ (*) begin
    ap_predicate_op371_read_state24 = ((icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1));
end

always @ (*) begin
    ap_predicate_op383_read_state25 = ((icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1));
end

always @ (*) begin
    ap_predicate_op391_read_state26 = ((icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1));
end

always @ (*) begin
    ap_predicate_op401_read_state27 = ((icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1));
end

always @ (*) begin
    ap_predicate_op407_read_state28 = ((icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1));
end

always @ (*) begin
    ap_predicate_op415_read_state29 = ((icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1));
end

always @ (*) begin
    ap_predicate_op419_read_state30 = ((icmp_ln38_2_reg_1205 == 1'd1) & (icmp_ln38_reg_1190 == 1'd1));
end

always @ (*) begin
    ap_predicate_tran35to56_state35 = ((icmp_ln38_2_reg_1205 == 1'd0) & (icmp_ln38_reg_1190 == 1'd1));
end

assign bitcast_ln41_1_fu_939_p1 = gmem_addr_1_read_reg_1320;

assign bitcast_ln41_2_fu_981_p1 = gmem_addr_2_read_reg_1371;

assign bitcast_ln41_3_fu_1034_p1 = gmem_addr_3_read_reg_1416;

assign bitcast_ln41_4_fu_1072_p1 = gmem_addr_4_read_reg_1454;

assign bitcast_ln41_5_fu_1080_p1 = gmem_addr_11_read_reg_1486;

assign bitcast_ln41_6_fu_1088_p1 = gmem_addr_13_read_reg_1506;

assign bitcast_ln41_7_fu_1096_p1 = gmem_addr_15_read_reg_1531;

assign bitcast_ln41_8_fu_1104_p1 = gmem_addr_17_read_reg_1551;

assign bitcast_ln41_9_fu_1112_p1 = gmem_addr_19_read_reg_1576;

assign bitcast_ln41_fu_866_p1 = gmem_addr_read_reg_1294;

assign bitcast_ln42_10_fu_1076_p1 = gmem_addr_10_read_reg_1471;

assign bitcast_ln42_11_fu_1084_p1 = gmem_addr_12_read_reg_1491;

assign bitcast_ln42_12_fu_1092_p1 = gmem_addr_14_read_reg_1511;

assign bitcast_ln42_13_fu_1100_p1 = gmem_addr_16_read_reg_1536;

assign bitcast_ln42_14_fu_1108_p1 = gmem_addr_18_read_reg_1556;

assign bitcast_ln42_15_fu_1116_p1 = gmem_addr_20_read_reg_1581;

assign bitcast_ln42_1_fu_943_p1 = gmem_addr_7_read_reg_1337;

assign bitcast_ln42_2_fu_985_p1 = gmem_addr_8_read_reg_1395;

assign bitcast_ln42_3_fu_1038_p1 = gmem_addr_9_read_reg_1427;

assign bitcast_ln42_fu_870_p1 = gmem_addr_6_read_reg_1299;

assign empty_46_fu_666_p2 = (p_cast37_fu_662_p1 + filters);

assign empty_47_fu_552_p2 = (p_cast38_fu_548_p1 + input_r);

assign empty_48_fu_696_p2 = (tmp2_fu_691_p2 + p_shl2_cast_fu_628_p1);

assign empty_49_fu_885_p2 = (p_cast41_fu_881_p1 + filters);

assign empty_50_fu_587_p2 = (tmp411_cast_fu_583_p1 + tmp3_cast_fu_573_p1);

assign empty_51_fu_851_p2 = (p_cast42_fu_847_p1 + input_r);

assign empty_fu_648_p2 = (tmp_fu_643_p2 + p_shl2_cast_fu_628_p1);

assign grp_fu_843_p_ce = grp_fu_441_ce;

assign grp_fu_843_p_din0 = grp_fu_441_p0;

assign grp_fu_843_p_din1 = grp_fu_441_p1;

assign grp_fu_843_p_opcode = 2'd0;

assign grp_fu_847_p_ce = grp_fu_445_ce;

assign grp_fu_847_p_din0 = grp_fu_445_p0;

assign grp_fu_847_p_din1 = grp_fu_445_p1;

assign icmp_ln38_2_fu_599_p2 = ((or_ln38_fu_593_p2 < 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln38_fu_500_p2 = ((fi_fu_124 < 3'd5) ? 1'b1 : 1'b0);

assign m_axi_gmem_ARBURST = 2'd0;

assign m_axi_gmem_ARCACHE = 4'd0;

assign m_axi_gmem_ARID = 1'd0;

assign m_axi_gmem_ARLEN = 32'd1;

assign m_axi_gmem_ARLOCK = 2'd0;

assign m_axi_gmem_ARPROT = 3'd0;

assign m_axi_gmem_ARQOS = 4'd0;

assign m_axi_gmem_ARREGION = 4'd0;

assign m_axi_gmem_ARSIZE = 3'd0;

assign m_axi_gmem_ARUSER = 1'd0;

assign m_axi_gmem_AWADDR = 64'd0;

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLEN = 32'd0;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_AWVALID = 1'b0;

assign m_axi_gmem_BREADY = 1'b0;

assign m_axi_gmem_WDATA = 32'd0;

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WSTRB = 4'd0;

assign m_axi_gmem_WUSER = 1'd0;

assign m_axi_gmem_WVALID = 1'b0;

assign or_ln38_fu_593_p2 = (fi_fu_124 | 3'd1);

assign p_cast20_fu_520_p1 = tmp_7_fu_512_p3;

assign p_cast37_fu_662_p1 = tmp_6_fu_654_p3;

assign p_cast38_fu_548_p1 = tmp_8_fu_539_p4;

assign p_cast41_fu_881_p1 = tmp_9_fu_874_p3;

assign p_cast42_fu_847_p1 = tmp_10_fu_840_p3;

assign p_shl2_cast_fu_628_p1 = p_shl2_fu_621_p3;

assign p_shl2_fu_621_p3 = {{indvar_load_reg_1184}, {3'd0}};

assign p_shl3_cast_fu_639_p1 = p_shl3_fu_632_p3;

assign p_shl3_fu_632_p3 = {{indvar_load_reg_1184}, {1'd0}};

assign select_ln33_5_cast_fu_475_p1 = select_ln33_5;

assign sext_ln40_4_fu_705_p1 = trunc_ln40_4_reg_1209;

assign sext_ln40_5_fu_890_p1 = trunc_ln40_5_reg_1304;

assign sext_ln40_6_fu_913_p1 = trunc_ln40_6_reg_1325;

assign sext_ln40_7_fu_702_p1 = trunc_ln_reg_1194;

assign sext_ln40_8_fu_910_p1 = trunc_ln40_5_reg_1304;

assign sext_ln40_fu_671_p1 = trunc_ln_reg_1194;

assign sext_ln41_10_fu_721_p1 = $signed(add_ln41_1_fu_715_p2);

assign sext_ln41_11_fu_755_p1 = $signed(add_ln41_2_fu_750_p2);

assign sext_ln41_12_fu_785_p1 = $signed(add_ln41_3_fu_780_p2);

assign sext_ln41_13_fu_800_p1 = $signed(add_ln41_4_fu_795_p2);

assign sext_ln41_14_fu_947_p1 = trunc_ln40_6_reg_1325;

assign sext_ln41_15_fu_929_p1 = $signed(add_ln41_fu_923_p2);

assign sext_ln41_16_fu_971_p1 = $signed(add_ln41_8_fu_966_p2);

assign sext_ln41_17_fu_1009_p1 = $signed(add_ln41_9_fu_1004_p2);

assign sext_ln41_18_fu_1024_p1 = $signed(add_ln41_10_fu_1019_p2);

assign sext_ln41_fu_731_p1 = trunc_ln40_4_reg_1209;

assign sext_ln42_1_fu_770_p1 = $signed(add_ln42_1_fu_765_p2);

assign sext_ln42_2_fu_815_p1 = $signed(add_ln42_2_fu_810_p2);

assign sext_ln42_3_fu_830_p1 = $signed(add_ln42_3_fu_825_p2);

assign sext_ln42_4_fu_956_p1 = $signed(add_ln42_4_fu_950_p2);

assign sext_ln42_5_fu_994_p1 = $signed(add_ln42_5_fu_989_p2);

assign sext_ln42_6_fu_1047_p1 = $signed(add_ln42_6_fu_1042_p2);

assign sext_ln42_7_fu_1062_p1 = $signed(add_ln42_7_fu_1057_p2);

assign sext_ln42_fu_740_p1 = $signed(add_ln42_fu_734_p2);

assign sum_29_4_out = reg_464;

assign tmp1_fu_524_p2 = (select_ln33_5_cast_reg_1179 + p_cast20_fu_520_p1);

assign tmp2_fu_691_p2 = (p_shl3_cast_fu_639_p1 + add_ln32_2);

assign tmp3_cast_fu_573_p1 = tmp3_fu_567_p3;

assign tmp3_fu_567_p3 = {{select_ln33_7}, {select_ln33}};

assign tmp411_cast_fu_583_p1 = tmp411_fu_577_p2;

assign tmp411_fu_577_p2 = (tmp_7_fu_512_p3 | 8'd32);

assign tmp_10_fu_840_p3 = {{empty_50_reg_1200}, {2'd0}};

assign tmp_6_fu_654_p3 = {{empty_fu_648_p2}, {2'd0}};

assign tmp_7_fu_512_p3 = {{indvar_fu_128}, {6'd0}};

assign tmp_8_fu_539_p4 = {{{tmp_s_fu_529_p4}, {select_ln33}}, {2'd0}};

assign tmp_9_fu_874_p3 = {{empty_48_reg_1221}, {2'd0}};

assign tmp_fu_643_p2 = (p_shl3_cast_fu_639_p1 + mul_ln32);

assign tmp_s_fu_529_p4 = {{tmp1_fu_524_p2[10:5]}};

always @ (posedge ap_clk) begin
    select_ln33_5_cast_reg_1179[10] <= 1'b0;
end

endmodule //lenet_predict_conv2d_Pipeline_VITIS_LOOP_38_4
