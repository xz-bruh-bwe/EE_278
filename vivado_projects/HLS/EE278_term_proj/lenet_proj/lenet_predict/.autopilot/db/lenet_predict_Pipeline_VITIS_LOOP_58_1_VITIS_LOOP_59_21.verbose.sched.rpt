

================================================================
== Vitis HLS Report for 'lenet_predict_Pipeline_VITIS_LOOP_58_1_VITIS_LOOP_59_21'
================================================================
* Date:           Sat Dec  7 11:05:57 2024

* Version:        2023.1 (Build 3854077 on May  4 2023)
* Project:        lenet_proj
* Solution:       lenet_predict (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu7ev-ffvf1517-3-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  4.085 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      103|      103|  1.030 us|  1.030 us|  103|  103|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |             Loop Name             |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-----------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_58_1_VITIS_LOOP_59_2  |      101|      101|         3|          1|          1|   100|       yes|
        +-----------------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 1 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.43>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%j_1 = alloca i32 1"   --->   Operation 6 'alloca' 'j_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 7 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%indvar_flatten6 = alloca i32 1"   --->   Operation 8 'alloca' 'indvar_flatten6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.40ns)   --->   "%store_ln0 = store i7 0, i7 %indvar_flatten6"   --->   Operation 9 'store' 'store_ln0' <Predicate = true> <Delay = 0.40>
ST_1 : Operation 10 [1/1] (0.40ns)   --->   "%store_ln0 = store i4 0, i4 %i"   --->   Operation 10 'store' 'store_ln0' <Predicate = true> <Delay = 0.40>
ST_1 : Operation 11 [1/1] (0.40ns)   --->   "%store_ln0 = store i4 0, i4 %j_1"   --->   Operation 11 'store' 'store_ln0' <Predicate = true> <Delay = 0.40>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%br_ln0 = br void %VITIS_LOOP_63_4.i17"   --->   Operation 12 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%indvar_flatten6_load = load i7 %indvar_flatten6" [lenet_support.cpp:58->lenet_main.cpp:46]   --->   Operation 13 'load' 'indvar_flatten6_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 14 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.70ns)   --->   "%icmp_ln58 = icmp_eq  i7 %indvar_flatten6_load, i7 100" [lenet_support.cpp:58->lenet_main.cpp:46]   --->   Operation 15 'icmp' 'icmp_ln58' <Predicate = true> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 16 [1/1] (0.70ns)   --->   "%add_ln58 = add i7 %indvar_flatten6_load, i7 1" [lenet_support.cpp:58->lenet_main.cpp:46]   --->   Operation 16 'add' 'add_ln58' <Predicate = true> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%br_ln58 = br i1 %icmp_ln58, void %for.inc28.i20, void %_Z9maxpool2dPfS_ii.exit21.exitStub" [lenet_support.cpp:58->lenet_main.cpp:46]   --->   Operation 17 'br' 'br_ln58' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%j_1_load = load i4 %j_1" [lenet_support.cpp:59->lenet_main.cpp:46]   --->   Operation 18 'load' 'j_1_load' <Predicate = (!icmp_ln58)> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%i_load = load i4 %i" [lenet_support.cpp:58->lenet_main.cpp:46]   --->   Operation 19 'load' 'i_load' <Predicate = (!icmp_ln58)> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.72ns)   --->   "%icmp_ln59 = icmp_eq  i4 %j_1_load, i4 10" [lenet_support.cpp:59->lenet_main.cpp:46]   --->   Operation 20 'icmp' 'icmp_ln59' <Predicate = (!icmp_ln58)> <Delay = 0.72> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (0.18ns)   --->   "%select_ln58 = select i1 %icmp_ln59, i4 0, i4 %j_1_load" [lenet_support.cpp:58->lenet_main.cpp:46]   --->   Operation 21 'select' 'select_ln58' <Predicate = (!icmp_ln58)> <Delay = 0.18> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (0.72ns)   --->   "%add_ln58_1 = add i4 %i_load, i4 1" [lenet_support.cpp:58->lenet_main.cpp:46]   --->   Operation 22 'add' 'add_ln58_1' <Predicate = (!icmp_ln58)> <Delay = 0.72> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 23 [1/1] (0.18ns)   --->   "%select_ln58_1 = select i1 %icmp_ln59, i4 %add_ln58_1, i4 %i_load" [lenet_support.cpp:58->lenet_main.cpp:46]   --->   Operation 23 'select' 'select_ln58_1' <Predicate = (!icmp_ln58)> <Delay = 0.18> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%p_shl2_mid2 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %select_ln58_1, i3 0" [lenet_support.cpp:58->lenet_main.cpp:46]   --->   Operation 24 'bitconcatenate' 'p_shl2_mid2' <Predicate = (!icmp_ln58)> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%p_shl3_mid2 = bitconcatenate i5 @_ssdm_op_BitConcatenate.i5.i4.i1, i4 %select_ln58_1, i1 0" [lenet_support.cpp:58->lenet_main.cpp:46]   --->   Operation 25 'bitconcatenate' 'p_shl3_mid2' <Predicate = (!icmp_ln58)> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%j_1_cast = zext i4 %select_ln58" [lenet_support.cpp:58->lenet_main.cpp:46]   --->   Operation 26 'zext' 'j_1_cast' <Predicate = (!icmp_ln58)> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.71ns)   --->   "%add_ln64 = add i5 %p_shl3_mid2, i5 %j_1_cast" [lenet_support.cpp:64->lenet_main.cpp:46]   --->   Operation 27 'add' 'add_ln64' <Predicate = (!icmp_ln58)> <Delay = 0.71> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%zext_ln64 = zext i5 %add_ln64" [lenet_support.cpp:64->lenet_main.cpp:46]   --->   Operation 28 'zext' 'zext_ln64' <Predicate = (!icmp_ln58)> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.70ns)   --->   "%add_ln64_1 = add i7 %zext_ln64, i7 %p_shl2_mid2" [lenet_support.cpp:64->lenet_main.cpp:46]   --->   Operation 29 'add' 'add_ln64_1' <Predicate = (!icmp_ln58)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%zext_ln64_1 = zext i7 %add_ln64_1" [lenet_support.cpp:64->lenet_main.cpp:46]   --->   Operation 30 'zext' 'zext_ln64_1' <Predicate = (!icmp_ln58)> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%conv2_output_addr = getelementptr i32 %conv2_output, i64 0, i64 %zext_ln64_1" [lenet_support.cpp:64->lenet_main.cpp:46]   --->   Operation 31 'getelementptr' 'conv2_output_addr' <Predicate = (!icmp_ln58)> <Delay = 0.00>
ST_1 : Operation 32 [2/2] (1.09ns)   --->   "%value = load i11 %conv2_output_addr" [lenet_support.cpp:64->lenet_main.cpp:46]   --->   Operation 32 'load' 'value' <Predicate = (!icmp_ln58)> <Delay = 1.09> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1600> <RAM>
ST_1 : Operation 33 [1/1] (0.72ns)   --->   "%add_ln59 = add i4 %select_ln58, i4 1" [lenet_support.cpp:59->lenet_main.cpp:46]   --->   Operation 33 'add' 'add_ln59' <Predicate = (!icmp_ln58)> <Delay = 0.72> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 34 [1/1] (0.40ns)   --->   "%store_ln59 = store i7 %add_ln58, i7 %indvar_flatten6" [lenet_support.cpp:59->lenet_main.cpp:46]   --->   Operation 34 'store' 'store_ln59' <Predicate = (!icmp_ln58)> <Delay = 0.40>
ST_1 : Operation 35 [1/1] (0.40ns)   --->   "%store_ln59 = store i4 %select_ln58_1, i4 %i" [lenet_support.cpp:59->lenet_main.cpp:46]   --->   Operation 35 'store' 'store_ln59' <Predicate = (!icmp_ln58)> <Delay = 0.40>
ST_1 : Operation 36 [1/1] (0.40ns)   --->   "%store_ln59 = store i4 %add_ln59, i4 %j_1" [lenet_support.cpp:59->lenet_main.cpp:46]   --->   Operation 36 'store' 'store_ln59' <Predicate = (!icmp_ln58)> <Delay = 0.40>

State 2 <SV = 1> <Delay = 3.67>
ST_2 : Operation 37 [1/2] (1.09ns)   --->   "%value = load i11 %conv2_output_addr" [lenet_support.cpp:64->lenet_main.cpp:46]   --->   Operation 37 'load' 'value' <Predicate = true> <Delay = 1.09> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1600> <RAM>
ST_2 : [1/1] (0.71ns)   --->   Input mux for Operation 38 '%tmp_4 = fcmp_ogt  i32 %value, i32 -inf'
ST_2 : Operation 38 [2/2] (1.85ns)   --->   "%tmp_4 = fcmp_ogt  i32 %value, i32 -inf" [lenet_support.cpp:65->lenet_main.cpp:46]   --->   Operation 38 'fcmp' 'tmp_4' <Predicate = true> <Delay = 1.85> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.57> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 55 'ret' 'ret_ln0' <Predicate = (icmp_ln58)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 4.08>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @VITIS_LOOP_58_1_VITIS_LOOP_59_2_str"   --->   Operation 39 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 100, i64 100, i64 100"   --->   Operation 40 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 41 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "%specloopname_ln59 = specloopname void @_ssdm_op_SpecLoopName, void @empty_18" [lenet_support.cpp:59->lenet_main.cpp:46]   --->   Operation 42 'specloopname' 'specloopname_ln59' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 43 [1/1] (0.00ns)   --->   "%bitcast_ln65 = bitcast i32 %value" [lenet_support.cpp:65->lenet_main.cpp:46]   --->   Operation 43 'bitcast' 'bitcast_ln65' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "%tmp_3 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln65, i32 23, i32 30" [lenet_support.cpp:65->lenet_main.cpp:46]   --->   Operation 44 'partselect' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%trunc_ln65 = trunc i32 %bitcast_ln65" [lenet_support.cpp:65->lenet_main.cpp:46]   --->   Operation 45 'trunc' 'trunc_ln65' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 46 [1/1] (0.70ns)   --->   "%icmp_ln65 = icmp_ne  i8 %tmp_3, i8 255" [lenet_support.cpp:65->lenet_main.cpp:46]   --->   Operation 46 'icmp' 'icmp_ln65' <Predicate = true> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 47 [1/1] (0.88ns)   --->   "%icmp_ln65_1 = icmp_eq  i23 %trunc_ln65, i23 0" [lenet_support.cpp:65->lenet_main.cpp:46]   --->   Operation 47 'icmp' 'icmp_ln65_1' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 48 [1/1] (0.00ns) (grouped into LUT with out node max_1)   --->   "%or_ln65 = or i1 %icmp_ln65_1, i1 %icmp_ln65" [lenet_support.cpp:65->lenet_main.cpp:46]   --->   Operation 48 'or' 'or_ln65' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 49 [1/2] (2.57ns)   --->   "%tmp_4 = fcmp_ogt  i32 %value, i32 -inf" [lenet_support.cpp:65->lenet_main.cpp:46]   --->   Operation 49 'fcmp' 'tmp_4' <Predicate = true> <Delay = 2.57> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.57> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 50 [1/1] (0.00ns) (grouped into LUT with out node max_1)   --->   "%and_ln65 = and i1 %or_ln65, i1 %tmp_4" [lenet_support.cpp:65->lenet_main.cpp:46]   --->   Operation 50 'and' 'and_ln65' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 51 [1/1] (0.41ns) (out node of the LUT)   --->   "%max_1 = select i1 %and_ln65, i32 %value, i32 -inf" [lenet_support.cpp:65->lenet_main.cpp:46]   --->   Operation 51 'select' 'max_1' <Predicate = true> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 52 [1/1] (0.00ns)   --->   "%pool2_output_addr = getelementptr i32 %pool2_output, i64 0, i64 %zext_ln64_1" [lenet_support.cpp:68->lenet_main.cpp:46]   --->   Operation 52 'getelementptr' 'pool2_output_addr' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 53 [1/1] (1.09ns)   --->   "%store_ln68 = store i32 %max_1, i9 %pool2_output_addr" [lenet_support.cpp:68->lenet_main.cpp:46]   --->   Operation 53 'store' 'store_ln68' <Predicate = true> <Delay = 1.09> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 400> <RAM>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "%br_ln59 = br void %VITIS_LOOP_63_4.i17" [lenet_support.cpp:59->lenet_main.cpp:46]   --->   Operation 54 'br' 'br_ln59' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 3.434ns
The critical path consists of the following:
	'alloca' operation ('j') [3]  (0.000 ns)
	'load' operation ('j_1_load', lenet_support.cpp:59->lenet_main.cpp:46) on local variable 'j' [17]  (0.000 ns)
	'icmp' operation ('icmp_ln59', lenet_support.cpp:59->lenet_main.cpp:46) [21]  (0.723 ns)
	'select' operation ('select_ln58_1', lenet_support.cpp:58->lenet_main.cpp:46) [24]  (0.187 ns)
	'add' operation ('add_ln64', lenet_support.cpp:64->lenet_main.cpp:46) [30]  (0.718 ns)
	'add' operation ('add_ln64_1', lenet_support.cpp:64->lenet_main.cpp:46) [32]  (0.707 ns)
	'getelementptr' operation ('conv2_output_addr', lenet_support.cpp:64->lenet_main.cpp:46) [34]  (0.000 ns)
	'load' operation ('value', lenet_support.cpp:64->lenet_main.cpp:46) on array 'conv2_output' [35]  (1.099 ns)

 <State 2>: 3.673ns
The critical path consists of the following:
	'load' operation ('value', lenet_support.cpp:64->lenet_main.cpp:46) on array 'conv2_output' [35]  (1.099 ns)
	multiplexor before operation 'fcmp' with delay (0.718 ns)
'fcmp' operation ('tmp_4', lenet_support.cpp:65->lenet_main.cpp:46) [42]  (1.856 ns)

 <State 3>: 4.085ns
The critical path consists of the following:
	'fcmp' operation ('tmp_4', lenet_support.cpp:65->lenet_main.cpp:46) [42]  (2.574 ns)
	'and' operation ('and_ln65', lenet_support.cpp:65->lenet_main.cpp:46) [43]  (0.000 ns)
	'select' operation ('max', lenet_support.cpp:65->lenet_main.cpp:46) [44]  (0.412 ns)
	'store' operation ('store_ln68', lenet_support.cpp:68->lenet_main.cpp:46) of variable 'max', lenet_support.cpp:65->lenet_main.cpp:46 on array 'pool2_output' [46]  (1.099 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
