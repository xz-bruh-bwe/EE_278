

================================================================
== Vitis HLS Report for 'lenet_predict_Pipeline_VITIS_LOOP_51_1'
================================================================
* Date:           Fri Nov 22 20:01:01 2024

* Version:        2023.1 (Build 3854077 on May  4 2023)
* Project:        lenet_proj
* Solution:       lenet_predict (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu7ev-ffvf1517-3-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  3.644 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       12|       12|  0.120 us|  0.120 us|   12|   12|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_51_1  |       10|       10|         3|          1|          1|     9|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 1 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.12>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%max_prob_1 = alloca i32 1"   --->   Operation 6 'alloca' 'max_prob_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%i_023 = alloca i32 1"   --->   Operation 7 'alloca' 'i_023' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 8 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%max_prob_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %max_prob"   --->   Operation 9 'read' 'max_prob_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.40ns)   --->   "%store_ln0 = store i4 1, i4 %i"   --->   Operation 10 'store' 'store_ln0' <Predicate = true> <Delay = 0.40>
ST_1 : Operation 11 [1/1] (0.40ns)   --->   "%store_ln0 = store i32 0, i32 %i_023"   --->   Operation 11 'store' 'store_ln0' <Predicate = true> <Delay = 0.40>
ST_1 : Operation 12 [1/1] (0.40ns)   --->   "%store_ln0 = store i32 %max_prob_read, i32 %max_prob_1"   --->   Operation 12 'store' 'store_ln0' <Predicate = true> <Delay = 0.40>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body"   --->   Operation 13 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%i_3 = load i4 %i" [lenet_main.cpp:51]   --->   Operation 14 'load' 'i_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 15 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.72ns)   --->   "%icmp_ln51 = icmp_eq  i4 %i_3, i4 10" [lenet_main.cpp:51]   --->   Operation 16 'icmp' 'icmp_ln51' <Predicate = true> <Delay = 0.72> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%br_ln51 = br i1 %icmp_ln51, void %for.body.split, void %for.end.exitStub" [lenet_main.cpp:51]   --->   Operation 17 'br' 'br_ln51' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%trunc_ln52_cast = zext i4 %i_3" [lenet_main.cpp:51]   --->   Operation 18 'zext' 'trunc_ln52_cast' <Predicate = (!icmp_ln51)> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%fc3_output_addr = getelementptr i32 %fc3_output, i64 0, i64 %trunc_ln52_cast" [lenet_main.cpp:52]   --->   Operation 19 'getelementptr' 'fc3_output_addr' <Predicate = (!icmp_ln51)> <Delay = 0.00>
ST_1 : Operation 20 [2/2] (0.61ns)   --->   "%max_prob_2 = load i4 %fc3_output_addr" [lenet_main.cpp:52]   --->   Operation 20 'load' 'max_prob_2' <Predicate = (!icmp_ln51)> <Delay = 0.61> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.61> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_1 : Operation 21 [1/1] (0.72ns)   --->   "%add_ln51 = add i4 %i_3, i4 1" [lenet_main.cpp:51]   --->   Operation 21 'add' 'add_ln51' <Predicate = (!icmp_ln51)> <Delay = 0.72> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (0.40ns)   --->   "%store_ln51 = store i4 %add_ln51, i4 %i" [lenet_main.cpp:51]   --->   Operation 22 'store' 'store_ln51' <Predicate = (!icmp_ln51)> <Delay = 0.40>

State 2 <SV = 1> <Delay = 3.18>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%max_prob_1_load = load i32 %max_prob_1" [lenet_main.cpp:52]   --->   Operation 23 'load' 'max_prob_1_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/2] (0.61ns)   --->   "%max_prob_2 = load i4 %fc3_output_addr" [lenet_main.cpp:52]   --->   Operation 24 'load' 'max_prob_2' <Predicate = true> <Delay = 0.61> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.61> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_2 : [1/1] (0.71ns)   --->   Input mux for Operation 25 '%tmp_14 = fcmp_ogt  i32 %max_prob_2, i32 %max_prob_1_load'
ST_2 : Operation 25 [2/2] (1.85ns)   --->   "%tmp_14 = fcmp_ogt  i32 %max_prob_2, i32 %max_prob_1_load" [lenet_main.cpp:52]   --->   Operation 25 'fcmp' 'tmp_14' <Predicate = true> <Delay = 1.85> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.57> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%i_023_load = load i32 %i_023"   --->   Operation 50 'load' 'i_023_load' <Predicate = (icmp_ln51)> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %i_023_out, i32 %i_023_load"   --->   Operation 51 'write' 'write_ln0' <Predicate = (icmp_ln51)> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 52 'ret' 'ret_ln0' <Predicate = (icmp_ln51)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 3.64>
ST_3 : Operation 26 [1/1] (0.00ns)   --->   "%i_023_load_1 = load i32 %i_023" [lenet_main.cpp:52]   --->   Operation 26 'load' 'i_023_load_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 27 [1/1] (0.00ns)   --->   "%speclooptripcount_ln50 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 9, i64 9, i64 9" [lenet_main.cpp:50]   --->   Operation 27 'speclooptripcount' 'speclooptripcount_ln50' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 28 [1/1] (0.00ns)   --->   "%specloopname_ln51 = specloopname void @_ssdm_op_SpecLoopName, void @empty_10" [lenet_main.cpp:51]   --->   Operation 28 'specloopname' 'specloopname_ln51' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "%bitcast_ln52 = bitcast i32 %max_prob_2" [lenet_main.cpp:52]   --->   Operation 29 'bitcast' 'bitcast_ln52' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 30 [1/1] (0.00ns)   --->   "%tmp_s = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln52, i32 23, i32 30" [lenet_main.cpp:52]   --->   Operation 30 'partselect' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "%trunc_ln52 = trunc i32 %bitcast_ln52" [lenet_main.cpp:52]   --->   Operation 31 'trunc' 'trunc_ln52' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "%bitcast_ln52_1 = bitcast i32 %max_prob_1_load" [lenet_main.cpp:52]   --->   Operation 32 'bitcast' 'bitcast_ln52_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "%tmp_13 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln52_1, i32 23, i32 30" [lenet_main.cpp:52]   --->   Operation 33 'partselect' 'tmp_13' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%trunc_ln52_1 = trunc i32 %bitcast_ln52_1" [lenet_main.cpp:52]   --->   Operation 34 'trunc' 'trunc_ln52_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (0.70ns)   --->   "%icmp_ln52 = icmp_ne  i8 %tmp_s, i8 255" [lenet_main.cpp:52]   --->   Operation 35 'icmp' 'icmp_ln52' <Predicate = true> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 36 [1/1] (0.88ns)   --->   "%icmp_ln52_1 = icmp_eq  i23 %trunc_ln52, i23 0" [lenet_main.cpp:52]   --->   Operation 36 'icmp' 'icmp_ln52_1' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 37 [1/1] (0.00ns) (grouped into LUT with out node and_ln52_1)   --->   "%or_ln52 = or i1 %icmp_ln52_1, i1 %icmp_ln52" [lenet_main.cpp:52]   --->   Operation 37 'or' 'or_ln52' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 38 [1/1] (0.70ns)   --->   "%icmp_ln52_2 = icmp_ne  i8 %tmp_13, i8 255" [lenet_main.cpp:52]   --->   Operation 38 'icmp' 'icmp_ln52_2' <Predicate = true> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 39 [1/1] (0.88ns)   --->   "%icmp_ln52_3 = icmp_eq  i23 %trunc_ln52_1, i23 0" [lenet_main.cpp:52]   --->   Operation 39 'icmp' 'icmp_ln52_3' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 40 [1/1] (0.00ns) (grouped into LUT with out node and_ln52_1)   --->   "%or_ln52_1 = or i1 %icmp_ln52_3, i1 %icmp_ln52_2" [lenet_main.cpp:52]   --->   Operation 40 'or' 'or_ln52_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 41 [1/2] (2.57ns)   --->   "%tmp_14 = fcmp_ogt  i32 %max_prob_2, i32 %max_prob_1_load" [lenet_main.cpp:52]   --->   Operation 41 'fcmp' 'tmp_14' <Predicate = true> <Delay = 2.57> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.57> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 42 [1/1] (0.00ns) (grouped into LUT with out node and_ln52_1)   --->   "%and_ln52 = and i1 %tmp_14, i1 %or_ln52" [lenet_main.cpp:52]   --->   Operation 42 'and' 'and_ln52' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 43 [1/1] (0.25ns) (out node of the LUT)   --->   "%and_ln52_1 = and i1 %and_ln52, i1 %or_ln52_1" [lenet_main.cpp:52]   --->   Operation 43 'and' 'and_ln52_1' <Predicate = true> <Delay = 0.25> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "%zext_ln52 = zext i4 %i_3" [lenet_main.cpp:52]   --->   Operation 44 'zext' 'zext_ln52' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 45 [1/1] (0.41ns)   --->   "%select_ln52 = select i1 %and_ln52_1, i32 %zext_ln52, i32 %i_023_load_1" [lenet_main.cpp:52]   --->   Operation 45 'select' 'select_ln52' <Predicate = true> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 46 [1/1] (0.41ns)   --->   "%max_prob_3 = select i1 %and_ln52_1, i32 %max_prob_2, i32 %max_prob_1_load" [lenet_main.cpp:52]   --->   Operation 46 'select' 'max_prob_3' <Predicate = true> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 47 [1/1] (0.40ns)   --->   "%store_ln51 = store i32 %select_ln52, i32 %i_023" [lenet_main.cpp:51]   --->   Operation 47 'store' 'store_ln51' <Predicate = true> <Delay = 0.40>
ST_3 : Operation 48 [1/1] (0.40ns)   --->   "%store_ln51 = store i32 %max_prob_3, i32 %max_prob_1" [lenet_main.cpp:51]   --->   Operation 48 'store' 'store_ln51' <Predicate = true> <Delay = 0.40>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%br_ln51 = br void %for.body" [lenet_main.cpp:51]   --->   Operation 49 'br' 'br_ln51' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 1.125ns
The critical path consists of the following:
	'alloca' operation ('i') [6]  (0.000 ns)
	'load' operation ('i', lenet_main.cpp:51) on local variable 'i' [13]  (0.000 ns)
	'add' operation ('add_ln51', lenet_main.cpp:51) [43]  (0.723 ns)
	'store' operation ('store_ln51', lenet_main.cpp:51) of variable 'add_ln51', lenet_main.cpp:51 on local variable 'i' [44]  (0.402 ns)

 <State 2>: 3.188ns
The critical path consists of the following:
	'load' operation ('max_prob', lenet_main.cpp:52) on array 'fc3_output' [24]  (0.614 ns)
	multiplexor before operation 'fcmp' with delay (0.715 ns)
'fcmp' operation ('tmp_14', lenet_main.cpp:52) [37]  (1.859 ns)

 <State 3>: 3.644ns
The critical path consists of the following:
	'fcmp' operation ('tmp_14', lenet_main.cpp:52) [37]  (2.574 ns)
	'and' operation ('and_ln52', lenet_main.cpp:52) [38]  (0.000 ns)
	'and' operation ('and_ln52_1', lenet_main.cpp:52) [39]  (0.256 ns)
	'select' operation ('select_ln52', lenet_main.cpp:52) [41]  (0.412 ns)
	'store' operation ('store_ln51', lenet_main.cpp:51) of variable 'select_ln52', lenet_main.cpp:52 on local variable 'i_023' [45]  (0.402 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
