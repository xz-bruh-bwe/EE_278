

================================================================
== Vitis HLS Report for 'lenet_predict_Pipeline_VITIS_LOOP_17_2'
================================================================
* Date:           Sat Dec  7 11:06:05 2024

* Version:        2023.1 (Build 3854077 on May  4 2023)
* Project:        lenet_proj
* Solution:       lenet_predict (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu7ev-ffvf1517-3-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.181 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       43|       43|  0.430 us|  0.430 us|   43|   43|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_17_2  |       41|       41|        15|          3|          1|    10|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 3, depth = 15


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 15
* Pipeline : 1
  Pipeline-0 : II = 3, D = 15, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.12>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%sum = alloca i32 1"   --->   Operation 18 'alloca' 'sum' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 19 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%max_5_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %max_5_reload"   --->   Operation 20 'read' 'max_5_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.40ns)   --->   "%store_ln0 = store i4 0, i4 %i"   --->   Operation 21 'store' 'store_ln0' <Predicate = true> <Delay = 0.40>
ST_1 : Operation 22 [1/1] (0.40ns)   --->   "%store_ln0 = store i32 0, i32 %sum"   --->   Operation 22 'store' 'store_ln0' <Predicate = true> <Delay = 0.40>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc16.i"   --->   Operation 23 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%i_4 = load i4 %i" [lenet_support.cpp:17->lenet_main.cpp:52]   --->   Operation 24 'load' 'i_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 25 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.72ns)   --->   "%icmp_ln17 = icmp_eq  i4 %i_4, i4 10" [lenet_support.cpp:17->lenet_main.cpp:52]   --->   Operation 26 'icmp' 'icmp_ln17' <Predicate = true> <Delay = 0.72> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (0.72ns)   --->   "%add_ln17 = add i4 %i_4, i4 1" [lenet_support.cpp:17->lenet_main.cpp:52]   --->   Operation 27 'add' 'add_ln17' <Predicate = true> <Delay = 0.72> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%br_ln17 = br i1 %icmp_ln17, void %for.inc16.i.split, void %for.inc26.i.preheader.exitStub" [lenet_support.cpp:17->lenet_main.cpp:52]   --->   Operation 28 'br' 'br_ln17' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%i_6_cast = zext i4 %i_4" [lenet_support.cpp:17->lenet_main.cpp:52]   --->   Operation 29 'zext' 'i_6_cast' <Predicate = (!icmp_ln17)> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%fc3_output_addr = getelementptr i32 %fc3_output, i64 0, i64 %i_6_cast" [lenet_support.cpp:18->lenet_main.cpp:52]   --->   Operation 30 'getelementptr' 'fc3_output_addr' <Predicate = (!icmp_ln17)> <Delay = 0.00>
ST_1 : Operation 31 [2/2] (0.61ns)   --->   "%fc3_output_load = load i4 %fc3_output_addr" [lenet_support.cpp:18->lenet_main.cpp:52]   --->   Operation 31 'load' 'fc3_output_load' <Predicate = (!icmp_ln17)> <Delay = 0.61> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.61> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_1 : Operation 32 [1/1] (0.40ns)   --->   "%store_ln17 = store i4 %add_ln17, i4 %i" [lenet_support.cpp:17->lenet_main.cpp:52]   --->   Operation 32 'store' 'store_ln17' <Predicate = (!icmp_ln17)> <Delay = 0.40>

State 2 <SV = 1> <Delay = 6.32>
ST_2 : Operation 33 [1/2] (0.61ns)   --->   "%fc3_output_load = load i4 %fc3_output_addr" [lenet_support.cpp:18->lenet_main.cpp:52]   --->   Operation 33 'load' 'fc3_output_load' <Predicate = (!icmp_ln17)> <Delay = 0.61> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.61> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_2 : Operation 34 [4/4] (5.71ns)   --->   "%x_assign_3 = fsub i32 %fc3_output_load, i32 %max_5_reload_read" [lenet_support.cpp:18->lenet_main.cpp:52]   --->   Operation 34 'fsub' 'x_assign_3' <Predicate = (!icmp_ln17)> <Delay = 5.71> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 5.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 5.71>
ST_3 : Operation 35 [3/4] (5.71ns)   --->   "%x_assign_3 = fsub i32 %fc3_output_load, i32 %max_5_reload_read" [lenet_support.cpp:18->lenet_main.cpp:52]   --->   Operation 35 'fsub' 'x_assign_3' <Predicate = (!icmp_ln17)> <Delay = 5.71> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 5.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 5.71>
ST_4 : Operation 36 [2/4] (5.71ns)   --->   "%x_assign_3 = fsub i32 %fc3_output_load, i32 %max_5_reload_read" [lenet_support.cpp:18->lenet_main.cpp:52]   --->   Operation 36 'fsub' 'x_assign_3' <Predicate = true> <Delay = 5.71> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 5.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 5.71>
ST_5 : Operation 37 [1/4] (5.71ns)   --->   "%x_assign_3 = fsub i32 %fc3_output_load, i32 %max_5_reload_read" [lenet_support.cpp:18->lenet_main.cpp:52]   --->   Operation 37 'fsub' 'x_assign_3' <Predicate = true> <Delay = 5.71> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 5.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 7.18>
ST_6 : Operation 38 [6/6] (7.18ns)   --->   "%tmp = fexp i32 @llvm.exp.f32, i32 %x_assign_3" [C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib\hlsmath\src\common\hls_exp_float.cpp:17->C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib\hlsmath\src\c++\expfloat.cpp:22->lenet_support.cpp:18->lenet_main.cpp:52]   --->   Operation 38 'fexp' 'tmp' <Predicate = true> <Delay = 7.18> <CoreInst = "FExp_fulldsp">   --->   Core 23 'FExp_fulldsp' <Latency = 5> <II = 1> <Delay = 7.18> <FuncUnit> <Opcode : 'fexp'> <InPorts = 1> <OutPorts = 1>

State 7 <SV = 6> <Delay = 7.18>
ST_7 : Operation 39 [5/6] (7.18ns)   --->   "%tmp = fexp i32 @llvm.exp.f32, i32 %x_assign_3" [C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib\hlsmath\src\common\hls_exp_float.cpp:17->C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib\hlsmath\src\c++\expfloat.cpp:22->lenet_support.cpp:18->lenet_main.cpp:52]   --->   Operation 39 'fexp' 'tmp' <Predicate = true> <Delay = 7.18> <CoreInst = "FExp_fulldsp">   --->   Core 23 'FExp_fulldsp' <Latency = 5> <II = 1> <Delay = 7.18> <FuncUnit> <Opcode : 'fexp'> <InPorts = 1> <OutPorts = 1>

State 8 <SV = 7> <Delay = 7.18>
ST_8 : Operation 40 [4/6] (7.18ns)   --->   "%tmp = fexp i32 @llvm.exp.f32, i32 %x_assign_3" [C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib\hlsmath\src\common\hls_exp_float.cpp:17->C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib\hlsmath\src\c++\expfloat.cpp:22->lenet_support.cpp:18->lenet_main.cpp:52]   --->   Operation 40 'fexp' 'tmp' <Predicate = true> <Delay = 7.18> <CoreInst = "FExp_fulldsp">   --->   Core 23 'FExp_fulldsp' <Latency = 5> <II = 1> <Delay = 7.18> <FuncUnit> <Opcode : 'fexp'> <InPorts = 1> <OutPorts = 1>

State 9 <SV = 8> <Delay = 7.18>
ST_9 : Operation 41 [3/6] (7.18ns)   --->   "%tmp = fexp i32 @llvm.exp.f32, i32 %x_assign_3" [C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib\hlsmath\src\common\hls_exp_float.cpp:17->C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib\hlsmath\src\c++\expfloat.cpp:22->lenet_support.cpp:18->lenet_main.cpp:52]   --->   Operation 41 'fexp' 'tmp' <Predicate = true> <Delay = 7.18> <CoreInst = "FExp_fulldsp">   --->   Core 23 'FExp_fulldsp' <Latency = 5> <II = 1> <Delay = 7.18> <FuncUnit> <Opcode : 'fexp'> <InPorts = 1> <OutPorts = 1>

State 10 <SV = 9> <Delay = 7.18>
ST_10 : Operation 42 [2/6] (7.18ns)   --->   "%tmp = fexp i32 @llvm.exp.f32, i32 %x_assign_3" [C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib\hlsmath\src\common\hls_exp_float.cpp:17->C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib\hlsmath\src\c++\expfloat.cpp:22->lenet_support.cpp:18->lenet_main.cpp:52]   --->   Operation 42 'fexp' 'tmp' <Predicate = true> <Delay = 7.18> <CoreInst = "FExp_fulldsp">   --->   Core 23 'FExp_fulldsp' <Latency = 5> <II = 1> <Delay = 7.18> <FuncUnit> <Opcode : 'fexp'> <InPorts = 1> <OutPorts = 1>

State 11 <SV = 10> <Delay = 7.18>
ST_11 : Operation 43 [1/6] (7.18ns)   --->   "%tmp = fexp i32 @llvm.exp.f32, i32 %x_assign_3" [C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib\hlsmath\src\common\hls_exp_float.cpp:17->C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib\hlsmath\src\c++\expfloat.cpp:22->lenet_support.cpp:18->lenet_main.cpp:52]   --->   Operation 43 'fexp' 'tmp' <Predicate = true> <Delay = 7.18> <CoreInst = "FExp_fulldsp">   --->   Core 23 'FExp_fulldsp' <Latency = 5> <II = 1> <Delay = 7.18> <FuncUnit> <Opcode : 'fexp'> <InPorts = 1> <OutPorts = 1>

State 12 <SV = 11> <Delay = 5.71>
ST_12 : Operation 44 [1/1] (0.00ns)   --->   "%sum_load_4 = load i32 %sum" [lenet_support.cpp:19->lenet_main.cpp:52]   --->   Operation 44 'load' 'sum_load_4' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 45 [1/1] (0.61ns)   --->   "%store_ln18 = store i32 %tmp, i4 %fc3_output_addr" [lenet_support.cpp:18->lenet_main.cpp:52]   --->   Operation 45 'store' 'store_ln18' <Predicate = true> <Delay = 0.61> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.61> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_12 : [1/1] (0.79ns)   --->   Input mux for Operation 46 '%sum_5 = fadd i32 %sum_load_4, i32 %tmp'
ST_12 : Operation 46 [4/4] (4.91ns)   --->   "%sum_5 = fadd i32 %sum_load_4, i32 %tmp" [lenet_support.cpp:19->lenet_main.cpp:52]   --->   Operation 46 'fadd' 'sum_5' <Predicate = true> <Delay = 4.91> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 5.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 54 [1/1] (0.00ns)   --->   "%sum_load = load i32 %sum"   --->   Operation 54 'load' 'sum_load' <Predicate = (icmp_ln17)> <Delay = 0.00>
ST_12 : Operation 55 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.floatP0A, i32 %sum_9_out, i32 %sum_load"   --->   Operation 55 'write' 'write_ln0' <Predicate = (icmp_ln17)> <Delay = 0.00>
ST_12 : Operation 56 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 56 'ret' 'ret_ln0' <Predicate = (icmp_ln17)> <Delay = 0.00>

State 13 <SV = 12> <Delay = 5.71>
ST_13 : Operation 47 [3/4] (5.71ns)   --->   "%sum_5 = fadd i32 %sum_load_4, i32 %tmp" [lenet_support.cpp:19->lenet_main.cpp:52]   --->   Operation 47 'fadd' 'sum_5' <Predicate = true> <Delay = 5.71> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 5.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 13> <Delay = 5.71>
ST_14 : Operation 48 [2/4] (5.71ns)   --->   "%sum_5 = fadd i32 %sum_load_4, i32 %tmp" [lenet_support.cpp:19->lenet_main.cpp:52]   --->   Operation 48 'fadd' 'sum_5' <Predicate = true> <Delay = 5.71> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 5.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 14> <Delay = 6.11>
ST_15 : Operation 49 [1/1] (0.00ns)   --->   "%speclooptripcount_ln16 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 10, i64 10, i64 10" [lenet_support.cpp:16->lenet_main.cpp:52]   --->   Operation 49 'speclooptripcount' 'speclooptripcount_ln16' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 50 [1/1] (0.00ns)   --->   "%specloopname_ln17 = specloopname void @_ssdm_op_SpecLoopName, void @empty_14" [lenet_support.cpp:17->lenet_main.cpp:52]   --->   Operation 50 'specloopname' 'specloopname_ln17' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 51 [1/4] (5.71ns)   --->   "%sum_5 = fadd i32 %sum_load_4, i32 %tmp" [lenet_support.cpp:19->lenet_main.cpp:52]   --->   Operation 51 'fadd' 'sum_5' <Predicate = true> <Delay = 5.71> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 5.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 52 [1/1] (0.40ns)   --->   "%store_ln17 = store i32 %sum_5, i32 %sum" [lenet_support.cpp:17->lenet_main.cpp:52]   --->   Operation 52 'store' 'store_ln17' <Predicate = true> <Delay = 0.40>
ST_15 : Operation 53 [1/1] (0.00ns)   --->   "%br_ln17 = br void %for.inc16.i" [lenet_support.cpp:17->lenet_main.cpp:52]   --->   Operation 53 'br' 'br_ln17' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 1.125ns
The critical path consists of the following:
	'alloca' operation ('i') [5]  (0.000 ns)
	'load' operation ('i', lenet_support.cpp:17->lenet_main.cpp:52) on local variable 'i' [11]  (0.000 ns)
	'add' operation ('add_ln17', lenet_support.cpp:17->lenet_main.cpp:52) [14]  (0.723 ns)
	'store' operation ('store_ln17', lenet_support.cpp:17->lenet_main.cpp:52) of variable 'add_ln17', lenet_support.cpp:17->lenet_main.cpp:52 on local variable 'i' [27]  (0.402 ns)

 <State 2>: 6.328ns
The critical path consists of the following:
	'load' operation ('fc3_output_load', lenet_support.cpp:18->lenet_main.cpp:52) on array 'fc3_output' [22]  (0.614 ns)
	'fsub' operation ('x', lenet_support.cpp:18->lenet_main.cpp:52) [23]  (5.714 ns)

 <State 3>: 5.714ns
The critical path consists of the following:
	'fsub' operation ('x', lenet_support.cpp:18->lenet_main.cpp:52) [23]  (5.714 ns)

 <State 4>: 5.714ns
The critical path consists of the following:
	'fsub' operation ('x', lenet_support.cpp:18->lenet_main.cpp:52) [23]  (5.714 ns)

 <State 5>: 5.714ns
The critical path consists of the following:
	'fsub' operation ('x', lenet_support.cpp:18->lenet_main.cpp:52) [23]  (5.714 ns)

 <State 6>: 7.181ns
The critical path consists of the following:
	'fexp' operation ('tmp', C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib\hlsmath\src\common\hls_exp_float.cpp:17->C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib\hlsmath\src\c++\expfloat.cpp:22->lenet_support.cpp:18->lenet_main.cpp:52) [24]  (7.181 ns)

 <State 7>: 7.181ns
The critical path consists of the following:
	'fexp' operation ('tmp', C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib\hlsmath\src\common\hls_exp_float.cpp:17->C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib\hlsmath\src\c++\expfloat.cpp:22->lenet_support.cpp:18->lenet_main.cpp:52) [24]  (7.181 ns)

 <State 8>: 7.181ns
The critical path consists of the following:
	'fexp' operation ('tmp', C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib\hlsmath\src\common\hls_exp_float.cpp:17->C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib\hlsmath\src\c++\expfloat.cpp:22->lenet_support.cpp:18->lenet_main.cpp:52) [24]  (7.181 ns)

 <State 9>: 7.181ns
The critical path consists of the following:
	'fexp' operation ('tmp', C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib\hlsmath\src\common\hls_exp_float.cpp:17->C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib\hlsmath\src\c++\expfloat.cpp:22->lenet_support.cpp:18->lenet_main.cpp:52) [24]  (7.181 ns)

 <State 10>: 7.181ns
The critical path consists of the following:
	'fexp' operation ('tmp', C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib\hlsmath\src\common\hls_exp_float.cpp:17->C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib\hlsmath\src\c++\expfloat.cpp:22->lenet_support.cpp:18->lenet_main.cpp:52) [24]  (7.181 ns)

 <State 11>: 7.181ns
The critical path consists of the following:
	'fexp' operation ('tmp', C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib\hlsmath\src\common\hls_exp_float.cpp:17->C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib\hlsmath\src\c++\expfloat.cpp:22->lenet_support.cpp:18->lenet_main.cpp:52) [24]  (7.181 ns)

 <State 12>: 5.714ns
The critical path consists of the following:
	'load' operation ('sum_load_4', lenet_support.cpp:19->lenet_main.cpp:52) on local variable 'sum' [17]  (0.000 ns)
	multiplexor before operation 'fadd' with delay (0.796 ns)
'fadd' operation ('sum', lenet_support.cpp:19->lenet_main.cpp:52) [26]  (4.918 ns)

 <State 13>: 5.714ns
The critical path consists of the following:
	'fadd' operation ('sum', lenet_support.cpp:19->lenet_main.cpp:52) [26]  (5.714 ns)

 <State 14>: 5.714ns
The critical path consists of the following:
	'fadd' operation ('sum', lenet_support.cpp:19->lenet_main.cpp:52) [26]  (5.714 ns)

 <State 15>: 6.116ns
The critical path consists of the following:
	'fadd' operation ('sum', lenet_support.cpp:19->lenet_main.cpp:52) [26]  (5.714 ns)
	'store' operation ('store_ln17', lenet_support.cpp:17->lenet_main.cpp:52) of variable 'sum', lenet_support.cpp:19->lenet_main.cpp:52 on local variable 'sum' [28]  (0.402 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
