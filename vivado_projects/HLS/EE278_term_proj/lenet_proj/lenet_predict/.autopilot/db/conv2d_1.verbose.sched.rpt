

================================================================
== Vitis HLS Report for 'conv2d_1'
================================================================
* Date:           Sat Dec  7 11:05:57 2024

* Version:        2023.1 (Build 3854077 on May  4 2023)
* Project:        lenet_proj
* Solution:       lenet_predict (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu7ev-ffvf1517-3-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+--------+--------+---------+
    |  Latency (cycles) |  Latency (absolute) |     Interval    | Pipeline|
    |   min   |   max   |    min   |    max   |   min  |   max  |   Type  |
    +---------+---------+----------+----------+--------+--------+---------+
    |   252801|   252801|  2.528 ms|  2.528 ms|  252801|  252801|       no|
    +---------+---------+----------+----------+--------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                                                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |                     Loop Name                     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_32_1_VITIS_LOOP_33_2_VITIS_LOOP_34_3  |   252800|   252800|       316|          -|          -|   800|        no|
        +---------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 7
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.40>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%j = alloca i32 1"   --->   Operation 8 'alloca' 'j' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 9 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%indvar_flatten = alloca i32 1"   --->   Operation 10 'alloca' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%f = alloca i32 1"   --->   Operation 11 'alloca' 'f' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%indvar_flatten35 = alloca i32 1"   --->   Operation 12 'alloca' 'indvar_flatten35' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%filters_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %filters"   --->   Operation 13 'read' 'filters_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%sum_23_4_loc = alloca i64 1"   --->   Operation 14 'alloca' 'sum_23_4_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%sum_11_loc = alloca i64 1"   --->   Operation 15 'alloca' 'sum_11_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%sum_16_4_loc = alloca i64 1"   --->   Operation 16 'alloca' 'sum_16_4_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%sum_loc = alloca i64 1"   --->   Operation 17 'alloca' 'sum_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %gmem, void @empty_9, i32 0, i32 0, void @empty_22, i32 0, i32 0, void @empty_23, void @empty_25, void @empty_22, i32 16, i32 16, i32 16, i32 16, void @empty_22, void @empty_22, i32 4294967295, i32 0"   --->   Operation 18 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.40ns)   --->   "%store_ln32 = store i10 0, i10 %indvar_flatten35" [lenet_support.cpp:32]   --->   Operation 19 'store' 'store_ln32' <Predicate = true> <Delay = 0.40>
ST_1 : Operation 20 [1/1] (0.40ns)   --->   "%store_ln32 = store i5 0, i5 %f" [lenet_support.cpp:32]   --->   Operation 20 'store' 'store_ln32' <Predicate = true> <Delay = 0.40>
ST_1 : Operation 21 [1/1] (0.40ns)   --->   "%store_ln32 = store i7 0, i7 %indvar_flatten" [lenet_support.cpp:32]   --->   Operation 21 'store' 'store_ln32' <Predicate = true> <Delay = 0.40>
ST_1 : Operation 22 [1/1] (0.40ns)   --->   "%store_ln32 = store i4 0, i4 %i" [lenet_support.cpp:32]   --->   Operation 22 'store' 'store_ln32' <Predicate = true> <Delay = 0.40>
ST_1 : Operation 23 [1/1] (0.40ns)   --->   "%store_ln32 = store i4 0, i4 %j" [lenet_support.cpp:32]   --->   Operation 23 'store' 'store_ln32' <Predicate = true> <Delay = 0.40>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%br_ln32 = br void %VITIS_LOOP_38_4.0" [lenet_support.cpp:32]   --->   Operation 24 'br' 'br_ln32' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 3.86>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%i_8 = load i4 %i"   --->   Operation 25 'load' 'i_8' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%f_1 = load i5 %f" [lenet_support.cpp:32]   --->   Operation 26 'load' 'f_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%indvar_flatten35_load = load i10 %indvar_flatten35" [lenet_support.cpp:32]   --->   Operation 27 'load' 'indvar_flatten35_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%f_cast5 = zext i5 %f_1" [lenet_support.cpp:32]   --->   Operation 28 'zext' 'f_cast5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (1.61ns)   --->   "%empty = mul i11 %f_cast5, i11 100" [lenet_support.cpp:32]   --->   Operation 29 'mul' 'empty' <Predicate = true> <Delay = 1.61> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 1.61> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%p_shl = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %i_8, i3 0"   --->   Operation 30 'bitconcatenate' 'p_shl' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%p_shl_cast = zext i7 %p_shl"   --->   Operation 31 'zext' 'p_shl_cast' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%p_shl1 = bitconcatenate i5 @_ssdm_op_BitConcatenate.i5.i4.i1, i4 %i_8, i1 0"   --->   Operation 32 'bitconcatenate' 'p_shl1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%p_shl1_cast = zext i5 %p_shl1"   --->   Operation 33 'zext' 'p_shl1_cast' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp = add i11 %p_shl1_cast, i11 %empty" [lenet_support.cpp:32]   --->   Operation 34 'add' 'tmp' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.41> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 35 [1/1] (0.83ns) (root node of TernaryAdder)   --->   "%empty_70 = add i11 %tmp, i11 %p_shl_cast" [lenet_support.cpp:32]   --->   Operation 35 'add' 'empty_70' <Predicate = true> <Delay = 0.83> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.41> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 36 [1/1] (0.73ns)   --->   "%icmp_ln32 = icmp_eq  i10 %indvar_flatten35_load, i10 800" [lenet_support.cpp:32]   --->   Operation 36 'icmp' 'icmp_ln32' <Predicate = true> <Delay = 0.73> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.73ns)   --->   "%add_ln32 = add i10 %indvar_flatten35_load, i10 1" [lenet_support.cpp:32]   --->   Operation 37 'add' 'add_ln32' <Predicate = true> <Delay = 0.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%br_ln32 = br i1 %icmp_ln32, void %for.inc45, void %for.end47" [lenet_support.cpp:32]   --->   Operation 38 'br' 'br_ln32' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%j_load = load i4 %j" [lenet_support.cpp:34]   --->   Operation 39 'load' 'j_load' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%indvar_flatten_load = load i7 %indvar_flatten" [lenet_support.cpp:33]   --->   Operation 40 'load' 'indvar_flatten_load' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.70ns)   --->   "%icmp_ln33 = icmp_eq  i7 %indvar_flatten_load, i7 50" [lenet_support.cpp:33]   --->   Operation 41 'icmp' 'icmp_ln33' <Predicate = (!icmp_ln32)> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.18ns)   --->   "%i_mid29 = select i1 %icmp_ln33, i4 0, i4 %i_8" [lenet_support.cpp:33]   --->   Operation 42 'select' 'i_mid29' <Predicate = (!icmp_ln32)> <Delay = 0.18> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.00ns) (grouped into LUT with out node select_ln33)   --->   "%j_mid210 = select i1 %icmp_ln33, i4 0, i4 %j_load" [lenet_support.cpp:33]   --->   Operation 43 'select' 'j_mid210' <Predicate = (!icmp_ln32)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.71ns)   --->   "%add_ln32_1 = add i5 %f_1, i5 1" [lenet_support.cpp:32]   --->   Operation 44 'add' 'add_ln32_1' <Predicate = (!icmp_ln32)> <Delay = 0.71> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%f_cast5_mid1 = zext i5 %add_ln32_1" [lenet_support.cpp:32]   --->   Operation 45 'zext' 'f_cast5_mid1' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.19ns)   --->   "%p_cast9_mid2_v_v = select i1 %icmp_ln33, i5 %add_ln32_1, i5 %f_1" [lenet_support.cpp:33]   --->   Operation 46 'select' 'p_cast9_mid2_v_v' <Predicate = (!icmp_ln32)> <Delay = 0.19> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.19> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%p_cast9_mid2_v = zext i5 %p_cast9_mid2_v_v" [lenet_support.cpp:33]   --->   Operation 47 'zext' 'p_cast9_mid2_v' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (1.08ns)   --->   "%p_cast9_mid2 = mul i9 %p_cast9_mid2_v, i9 25" [lenet_support.cpp:33]   --->   Operation 48 'mul' 'p_cast9_mid2' <Predicate = (!icmp_ln32)> <Delay = 1.08> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (1.61ns)   --->   "%p_mid113 = mul i11 %f_cast5_mid1, i11 100" [lenet_support.cpp:32]   --->   Operation 49 'mul' 'p_mid113' <Predicate = (!icmp_ln32)> <Delay = 1.61> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 1.61> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (0.35ns)   --->   "%p_mid214 = select i1 %icmp_ln33, i11 %p_mid113, i11 %empty" [lenet_support.cpp:33]   --->   Operation 50 'select' 'p_mid214' <Predicate = (!icmp_ln32)> <Delay = 0.35> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (0.71ns)   --->   "%p_mid216 = add i9 %p_cast9_mid2, i9 5" [lenet_support.cpp:33]   --->   Operation 51 'add' 'p_mid216' <Predicate = (!icmp_ln32)> <Delay = 0.71> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 52 [1/1] (0.00ns) (grouped into LUT with out node select_ln33_1)   --->   "%p_mid232 = select i1 %icmp_ln33, i11 %p_mid113, i11 %empty_70" [lenet_support.cpp:33]   --->   Operation 52 'select' 'p_mid232' <Predicate = (!icmp_ln32)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 53 [1/1] (0.72ns)   --->   "%icmp_ln34 = icmp_ult  i4 %j_load, i4 10" [lenet_support.cpp:34]   --->   Operation 53 'icmp' 'icmp_ln34' <Predicate = (!icmp_ln32)> <Delay = 0.72> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (0.25ns)   --->   "%icmp_ln34_mid234 = or i1 %icmp_ln33, i1 %icmp_ln34" [lenet_support.cpp:33]   --->   Operation 54 'or' 'icmp_ln34_mid234' <Predicate = (!icmp_ln32)> <Delay = 0.25> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 55 [1/1] (0.72ns)   --->   "%add_ln33 = add i4 %i_mid29, i4 1" [lenet_support.cpp:33]   --->   Operation 55 'add' 'add_ln33' <Predicate = (!icmp_ln32)> <Delay = 0.72> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 56 [1/1] (0.18ns) (out node of the LUT)   --->   "%select_ln33 = select i1 %icmp_ln34_mid234, i4 %j_mid210, i4 0" [lenet_support.cpp:33]   --->   Operation 56 'select' 'select_ln33' <Predicate = (!icmp_ln32)> <Delay = 0.18> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%p_shl_mid1 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %add_ln33, i3 0" [lenet_support.cpp:33]   --->   Operation 57 'bitconcatenate' 'p_shl_mid1' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "%p_shl_cast_mid1 = zext i7 %p_shl_mid1" [lenet_support.cpp:33]   --->   Operation 58 'zext' 'p_shl_cast_mid1' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 59 [1/1] (0.00ns)   --->   "%p_shl1_mid1 = bitconcatenate i5 @_ssdm_op_BitConcatenate.i5.i4.i1, i4 %add_ln33, i1 0" [lenet_support.cpp:33]   --->   Operation 59 'bitconcatenate' 'p_shl1_mid1' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 60 [1/1] (0.00ns)   --->   "%p_shl1_cast_mid1 = zext i5 %p_shl1_mid1" [lenet_support.cpp:33]   --->   Operation 60 'zext' 'p_shl1_cast_mid1' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 61 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp_mid1 = add i11 %p_shl1_cast_mid1, i11 %p_mid214" [lenet_support.cpp:33]   --->   Operation 61 'add' 'tmp_mid1' <Predicate = (!icmp_ln32)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.41> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 62 [1/1] (0.83ns) (root node of TernaryAdder)   --->   "%p_mid1 = add i11 %tmp_mid1, i11 %p_shl_cast_mid1" [lenet_support.cpp:33]   --->   Operation 62 'add' 'p_mid1' <Predicate = (!icmp_ln32)> <Delay = 0.83> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.41> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 63 [1/1] (0.35ns) (out node of the LUT)   --->   "%select_ln33_1 = select i1 %icmp_ln34_mid234, i11 %p_mid232, i11 %p_mid1" [lenet_support.cpp:33]   --->   Operation 63 'select' 'select_ln33_1' <Predicate = (!icmp_ln32)> <Delay = 0.35> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 64 [1/1] (0.18ns)   --->   "%select_ln33_2 = select i1 %icmp_ln34_mid234, i4 %i_mid29, i4 %add_ln33" [lenet_support.cpp:33]   --->   Operation 64 'select' 'select_ln33_2' <Predicate = (!icmp_ln32)> <Delay = 0.18> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 65 [2/2] (0.00ns)   --->   "%targetBlock = call i1 @conv2d.1_Pipeline_VITIS_LOOP_38_4, i4 %select_ln33_2, i32 %gmem, i4 %select_ln33, i32 %input_r, i9 %p_cast9_mid2, i64 %filters_read, i9 %p_mid216, i32 %sum_loc, i32 %sum_16_4_loc" [lenet_support.cpp:33]   --->   Operation 65 'call' 'targetBlock' <Predicate = (!icmp_ln32)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 66 [1/1] (0.72ns)   --->   "%add_ln34 = add i4 %select_ln33, i4 2" [lenet_support.cpp:34]   --->   Operation 66 'add' 'add_ln34' <Predicate = (!icmp_ln32)> <Delay = 0.72> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 67 [1/1] (0.70ns)   --->   "%add_ln33_1 = add i7 %indvar_flatten_load, i7 1" [lenet_support.cpp:33]   --->   Operation 67 'add' 'add_ln33_1' <Predicate = (!icmp_ln32)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 68 [1/1] (0.32ns)   --->   "%select_ln33_3 = select i1 %icmp_ln33, i7 1, i7 %add_ln33_1" [lenet_support.cpp:33]   --->   Operation 68 'select' 'select_ln33_3' <Predicate = (!icmp_ln32)> <Delay = 0.32> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.32> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 69 [1/1] (0.40ns)   --->   "%store_ln34 = store i10 %add_ln32, i10 %indvar_flatten35" [lenet_support.cpp:34]   --->   Operation 69 'store' 'store_ln34' <Predicate = (!icmp_ln32)> <Delay = 0.40>
ST_2 : Operation 70 [1/1] (0.40ns)   --->   "%store_ln34 = store i5 %p_cast9_mid2_v_v, i5 %f" [lenet_support.cpp:34]   --->   Operation 70 'store' 'store_ln34' <Predicate = (!icmp_ln32)> <Delay = 0.40>
ST_2 : Operation 71 [1/1] (0.40ns)   --->   "%store_ln34 = store i7 %select_ln33_3, i7 %indvar_flatten" [lenet_support.cpp:34]   --->   Operation 71 'store' 'store_ln34' <Predicate = (!icmp_ln32)> <Delay = 0.40>
ST_2 : Operation 72 [1/1] (0.40ns)   --->   "%store_ln34 = store i4 %select_ln33_2, i4 %i" [lenet_support.cpp:34]   --->   Operation 72 'store' 'store_ln34' <Predicate = (!icmp_ln32)> <Delay = 0.40>
ST_2 : Operation 73 [1/1] (0.40ns)   --->   "%store_ln34 = store i4 %add_ln34, i4 %j" [lenet_support.cpp:34]   --->   Operation 73 'store' 'store_ln34' <Predicate = (!icmp_ln32)> <Delay = 0.40>
ST_2 : Operation 74 [1/1] (0.00ns)   --->   "%ret_ln51 = ret" [lenet_support.cpp:51]   --->   Operation 74 'ret' 'ret_ln51' <Predicate = (icmp_ln32)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 0.00>
ST_3 : Operation 75 [1/2] (0.00ns)   --->   "%targetBlock = call i1 @conv2d.1_Pipeline_VITIS_LOOP_38_4, i4 %select_ln33_2, i32 %gmem, i4 %select_ln33, i32 %input_r, i9 %p_cast9_mid2, i64 %filters_read, i9 %p_mid216, i32 %sum_loc, i32 %sum_16_4_loc" [lenet_support.cpp:33]   --->   Operation 75 'call' 'targetBlock' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 4 <SV = 3> <Delay = 2.98>
ST_4 : Operation 76 [1/1] (0.00ns)   --->   "%sum_loc_load = load i32 %sum_loc"   --->   Operation 76 'load' 'sum_loc_load' <Predicate = (targetBlock)> <Delay = 0.00>
ST_4 : Operation 77 [1/1] (0.00ns)   --->   "%sum_16_4_loc_load = load i32 %sum_16_4_loc"   --->   Operation 77 'load' 'sum_16_4_loc_load' <Predicate = (!targetBlock)> <Delay = 0.00>
ST_4 : Operation 78 [1/1] (0.41ns)   --->   "%select_ln38 = select i1 %targetBlock, i32 %sum_loc_load, i32 %sum_16_4_loc_load" [lenet_support.cpp:38]   --->   Operation 78 'select' 'select_ln38' <Predicate = true> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : [1/1] (0.71ns)   --->   Input mux for Operation 79 '%tmp_11 = fcmp_ogt  i32 %select_ln38, i32 0'
ST_4 : Operation 79 [2/2] (1.85ns)   --->   "%tmp_11 = fcmp_ogt  i32 %select_ln38, i32 0" [lenet_support.cpp:7->lenet_support.cpp:47]   --->   Operation 79 'fcmp' 'tmp_11' <Predicate = true> <Delay = 1.85> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.57> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 80 [1/1] (0.00ns)   --->   "%or_ln34 = or i4 %select_ln33, i4 1" [lenet_support.cpp:34]   --->   Operation 80 'or' 'or_ln34' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 81 [2/2] (0.00ns)   --->   "%targetBlock1 = call i1 @conv2d.1_Pipeline_VITIS_LOOP_38_44, i4 %select_ln33_2, i32 %gmem, i4 %or_ln34, i32 %input_r, i9 %p_cast9_mid2, i64 %filters_read, i9 %p_mid216, i32 %sum_11_loc, i32 %sum_23_4_loc" [lenet_support.cpp:33]   --->   Operation 81 'call' 'targetBlock1' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 5 <SV = 4> <Delay = 4.08>
ST_5 : Operation 82 [1/1] (0.00ns)   --->   "%zext_ln34 = zext i4 %select_ln33" [lenet_support.cpp:34]   --->   Operation 82 'zext' 'zext_ln34' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 83 [1/1] (0.00ns)   --->   "%bitcast_ln7 = bitcast i32 %select_ln38" [lenet_support.cpp:7->lenet_support.cpp:47]   --->   Operation 83 'bitcast' 'bitcast_ln7' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 84 [1/1] (0.00ns)   --->   "%tmp_s = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln7, i32 23, i32 30" [lenet_support.cpp:7->lenet_support.cpp:47]   --->   Operation 84 'partselect' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 85 [1/1] (0.00ns)   --->   "%trunc_ln7 = trunc i32 %bitcast_ln7" [lenet_support.cpp:7->lenet_support.cpp:47]   --->   Operation 85 'trunc' 'trunc_ln7' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 86 [1/1] (0.70ns)   --->   "%icmp_ln7 = icmp_ne  i8 %tmp_s, i8 255" [lenet_support.cpp:7->lenet_support.cpp:47]   --->   Operation 86 'icmp' 'icmp_ln7' <Predicate = true> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 87 [1/1] (0.88ns)   --->   "%icmp_ln7_6 = icmp_eq  i23 %trunc_ln7, i23 0" [lenet_support.cpp:7->lenet_support.cpp:47]   --->   Operation 87 'icmp' 'icmp_ln7_6' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 88 [1/1] (0.00ns) (grouped into LUT with out node select_ln7)   --->   "%or_ln7 = or i1 %icmp_ln7_6, i1 %icmp_ln7" [lenet_support.cpp:7->lenet_support.cpp:47]   --->   Operation 88 'or' 'or_ln7' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 89 [1/2] (2.57ns)   --->   "%tmp_11 = fcmp_ogt  i32 %select_ln38, i32 0" [lenet_support.cpp:7->lenet_support.cpp:47]   --->   Operation 89 'fcmp' 'tmp_11' <Predicate = true> <Delay = 2.57> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.57> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 90 [1/1] (0.00ns) (grouped into LUT with out node select_ln7)   --->   "%and_ln7 = and i1 %or_ln7, i1 %tmp_11" [lenet_support.cpp:7->lenet_support.cpp:47]   --->   Operation 90 'and' 'and_ln7' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 91 [1/1] (0.41ns) (out node of the LUT)   --->   "%select_ln7 = select i1 %and_ln7, i32 %select_ln38, i32 0" [lenet_support.cpp:7->lenet_support.cpp:47]   --->   Operation 91 'select' 'select_ln7' <Predicate = true> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 92 [1/1] (0.75ns)   --->   "%add_ln47 = add i11 %zext_ln34, i11 %select_ln33_1" [lenet_support.cpp:47]   --->   Operation 92 'add' 'add_ln47' <Predicate = true> <Delay = 0.75> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 93 [1/1] (0.00ns)   --->   "%zext_ln47 = zext i11 %add_ln47" [lenet_support.cpp:47]   --->   Operation 93 'zext' 'zext_ln47' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 94 [1/1] (0.00ns)   --->   "%output_addr = getelementptr i32 %output_r, i64 0, i64 %zext_ln47" [lenet_support.cpp:47]   --->   Operation 94 'getelementptr' 'output_addr' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 95 [1/1] (1.09ns)   --->   "%store_ln47 = store i32 %select_ln7, i11 %output_addr" [lenet_support.cpp:47]   --->   Operation 95 'store' 'store_ln47' <Predicate = true> <Delay = 1.09> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1600> <RAM>
ST_5 : Operation 96 [1/1] (0.00ns)   --->   "%zext_ln38 = zext i4 %or_ln34" [lenet_support.cpp:38]   --->   Operation 96 'zext' 'zext_ln38' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 97 [1/2] (0.00ns)   --->   "%targetBlock1 = call i1 @conv2d.1_Pipeline_VITIS_LOOP_38_44, i4 %select_ln33_2, i32 %gmem, i4 %or_ln34, i32 %input_r, i9 %p_cast9_mid2, i64 %filters_read, i9 %p_mid216, i32 %sum_11_loc, i32 %sum_23_4_loc" [lenet_support.cpp:33]   --->   Operation 97 'call' 'targetBlock1' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 98 [1/1] (0.75ns)   --->   "%add_ln47_1 = add i11 %zext_ln38, i11 %select_ln33_1" [lenet_support.cpp:47]   --->   Operation 98 'add' 'add_ln47_1' <Predicate = true> <Delay = 0.75> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 2.98>
ST_6 : Operation 99 [1/1] (0.00ns)   --->   "%sum_11_loc_load = load i32 %sum_11_loc"   --->   Operation 99 'load' 'sum_11_loc_load' <Predicate = (targetBlock1)> <Delay = 0.00>
ST_6 : Operation 100 [1/1] (0.00ns)   --->   "%sum_23_4_loc_load = load i32 %sum_23_4_loc"   --->   Operation 100 'load' 'sum_23_4_loc_load' <Predicate = (!targetBlock1)> <Delay = 0.00>
ST_6 : Operation 101 [1/1] (0.41ns)   --->   "%select_ln38_1 = select i1 %targetBlock1, i32 %sum_11_loc_load, i32 %sum_23_4_loc_load" [lenet_support.cpp:38]   --->   Operation 101 'select' 'select_ln38_1' <Predicate = true> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : [1/1] (0.71ns)   --->   Input mux for Operation 102 '%tmp_13 = fcmp_ogt  i32 %select_ln38_1, i32 0'
ST_6 : Operation 102 [2/2] (1.85ns)   --->   "%tmp_13 = fcmp_ogt  i32 %select_ln38_1, i32 0" [lenet_support.cpp:7->lenet_support.cpp:47]   --->   Operation 102 'fcmp' 'tmp_13' <Predicate = true> <Delay = 1.85> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.57> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 4.08>
ST_7 : Operation 103 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @VITIS_LOOP_32_1_VITIS_LOOP_33_2_VITIS_LOOP_34_3_str"   --->   Operation 103 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 104 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 800, i64 800, i64 800"   --->   Operation 104 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 105 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @VITIS_LOOP_33_2_VITIS_LOOP_34_3_str"   --->   Operation 105 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 106 [1/1] (0.00ns)   --->   "%specloopname_ln34 = specloopname void @_ssdm_op_SpecLoopName, void @empty_20" [lenet_support.cpp:34]   --->   Operation 106 'specloopname' 'specloopname_ln34' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 107 [1/1] (0.00ns)   --->   "%bitcast_ln7_3 = bitcast i32 %select_ln38_1" [lenet_support.cpp:7->lenet_support.cpp:47]   --->   Operation 107 'bitcast' 'bitcast_ln7_3' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 108 [1/1] (0.00ns)   --->   "%tmp_12 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln7_3, i32 23, i32 30" [lenet_support.cpp:7->lenet_support.cpp:47]   --->   Operation 108 'partselect' 'tmp_12' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 109 [1/1] (0.00ns)   --->   "%trunc_ln7_3 = trunc i32 %bitcast_ln7_3" [lenet_support.cpp:7->lenet_support.cpp:47]   --->   Operation 109 'trunc' 'trunc_ln7_3' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 110 [1/1] (0.70ns)   --->   "%icmp_ln7_7 = icmp_ne  i8 %tmp_12, i8 255" [lenet_support.cpp:7->lenet_support.cpp:47]   --->   Operation 110 'icmp' 'icmp_ln7_7' <Predicate = true> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 111 [1/1] (0.88ns)   --->   "%icmp_ln7_8 = icmp_eq  i23 %trunc_ln7_3, i23 0" [lenet_support.cpp:7->lenet_support.cpp:47]   --->   Operation 111 'icmp' 'icmp_ln7_8' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 112 [1/1] (0.00ns) (grouped into LUT with out node select_ln7_3)   --->   "%or_ln7_3 = or i1 %icmp_ln7_8, i1 %icmp_ln7_7" [lenet_support.cpp:7->lenet_support.cpp:47]   --->   Operation 112 'or' 'or_ln7_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 113 [1/2] (2.57ns)   --->   "%tmp_13 = fcmp_ogt  i32 %select_ln38_1, i32 0" [lenet_support.cpp:7->lenet_support.cpp:47]   --->   Operation 113 'fcmp' 'tmp_13' <Predicate = true> <Delay = 2.57> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.57> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 114 [1/1] (0.00ns) (grouped into LUT with out node select_ln7_3)   --->   "%and_ln7_3 = and i1 %or_ln7_3, i1 %tmp_13" [lenet_support.cpp:7->lenet_support.cpp:47]   --->   Operation 114 'and' 'and_ln7_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 115 [1/1] (0.41ns) (out node of the LUT)   --->   "%select_ln7_3 = select i1 %and_ln7_3, i32 %select_ln38_1, i32 0" [lenet_support.cpp:7->lenet_support.cpp:47]   --->   Operation 115 'select' 'select_ln7_3' <Predicate = true> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 116 [1/1] (0.00ns)   --->   "%zext_ln47_1 = zext i11 %add_ln47_1" [lenet_support.cpp:47]   --->   Operation 116 'zext' 'zext_ln47_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 117 [1/1] (0.00ns)   --->   "%output_addr_1 = getelementptr i32 %output_r, i64 0, i64 %zext_ln47_1" [lenet_support.cpp:47]   --->   Operation 117 'getelementptr' 'output_addr_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 118 [1/1] (1.09ns)   --->   "%store_ln47 = store i32 %select_ln7_3, i11 %output_addr_1" [lenet_support.cpp:47]   --->   Operation 118 'store' 'store_ln47' <Predicate = true> <Delay = 1.09> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1600> <RAM>
ST_7 : Operation 119 [1/1] (0.00ns)   --->   "%br_ln34 = br void %VITIS_LOOP_38_4.0" [lenet_support.cpp:34]   --->   Operation 119 'br' 'br_ln34' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 0.402ns
The critical path consists of the following:
	'alloca' operation ('indvar_flatten35') [9]  (0.000 ns)
	'store' operation ('store_ln32', lenet_support.cpp:32) of constant 0 on local variable 'indvar_flatten35' [16]  (0.402 ns)

 <State 2>: 3.863ns
The critical path consists of the following:
	'load' operation ('f', lenet_support.cpp:32) on local variable 'f' [24]  (0.000 ns)
	'add' operation ('add_ln32_1', lenet_support.cpp:32) [45]  (0.718 ns)
	'mul' operation ('p_mid113', lenet_support.cpp:32) [50]  (1.610 ns)
	'select' operation ('p_mid214', lenet_support.cpp:33) [51]  (0.352 ns)
	'add' operation ('tmp_mid1', lenet_support.cpp:33) [63]  (0.000 ns)
	'add' operation ('p_mid1', lenet_support.cpp:33) [64]  (0.832 ns)
	'select' operation ('select_ln33_1', lenet_support.cpp:33) [65]  (0.352 ns)

 <State 3>: 0.000ns
The critical path consists of the following:

 <State 4>: 2.986ns
The critical path consists of the following:
	'load' operation ('sum_loc_load') on local variable 'sum_loc' [70]  (0.000 ns)
	'select' operation ('x', lenet_support.cpp:38) [72]  (0.412 ns)
	multiplexor before operation 'fcmp' with delay (0.718 ns)
'fcmp' operation ('tmp_11', lenet_support.cpp:7->lenet_support.cpp:47) [79]  (1.856 ns)

 <State 5>: 4.085ns
The critical path consists of the following:
	'fcmp' operation ('tmp_11', lenet_support.cpp:7->lenet_support.cpp:47) [79]  (2.574 ns)
	'and' operation ('and_ln7', lenet_support.cpp:7->lenet_support.cpp:47) [80]  (0.000 ns)
	'select' operation ('select_ln7', lenet_support.cpp:7->lenet_support.cpp:47) [81]  (0.412 ns)
	'store' operation ('store_ln47', lenet_support.cpp:47) of variable 'select_ln7', lenet_support.cpp:7->lenet_support.cpp:47 on array 'output_r' [85]  (1.099 ns)

 <State 6>: 2.986ns
The critical path consists of the following:
	'load' operation ('sum_11_loc_load') on local variable 'sum_11_loc' [89]  (0.000 ns)
	'select' operation ('x', lenet_support.cpp:38) [91]  (0.412 ns)
	multiplexor before operation 'fcmp' with delay (0.718 ns)
'fcmp' operation ('tmp_13', lenet_support.cpp:7->lenet_support.cpp:47) [98]  (1.856 ns)

 <State 7>: 4.085ns
The critical path consists of the following:
	'fcmp' operation ('tmp_13', lenet_support.cpp:7->lenet_support.cpp:47) [98]  (2.574 ns)
	'and' operation ('and_ln7_3', lenet_support.cpp:7->lenet_support.cpp:47) [99]  (0.000 ns)
	'select' operation ('select_ln7_3', lenet_support.cpp:7->lenet_support.cpp:47) [100]  (0.412 ns)
	'store' operation ('store_ln47', lenet_support.cpp:47) of variable 'select_ln7_3', lenet_support.cpp:7->lenet_support.cpp:47 on array 'output_r' [104]  (1.099 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
