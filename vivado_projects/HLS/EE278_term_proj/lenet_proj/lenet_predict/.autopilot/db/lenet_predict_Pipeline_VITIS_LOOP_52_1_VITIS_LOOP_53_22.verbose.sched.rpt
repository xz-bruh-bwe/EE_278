

================================================================
== Vitis HLS Report for 'lenet_predict_Pipeline_VITIS_LOOP_52_1_VITIS_LOOP_53_22'
================================================================
* Date:           Thu Nov 21 22:03:00 2024

* Version:        2023.1 (Build 3854077 on May  4 2023)
* Project:        lenet_proj
* Solution:       lenet_predict (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu7ev-ffvf1517-3-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  5.816 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       31|       31|  0.310 us|  0.310 us|   31|   31|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |             Loop Name             |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-----------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_52_1_VITIS_LOOP_53_2  |       29|       29|         6|          1|          1|    25|       yes|
        +-----------------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 6


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 1
  Pipeline-0 : II = 1, D = 6, States = { 1 2 3 4 5 6 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.45>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%j_1 = alloca i32 1"   --->   Operation 9 'alloca' 'j_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 10 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%indvar_flatten12 = alloca i32 1"   --->   Operation 11 'alloca' 'indvar_flatten12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.40ns)   --->   "%store_ln0 = store i5 0, i5 %indvar_flatten12"   --->   Operation 12 'store' 'store_ln0' <Predicate = true> <Delay = 0.40>
ST_1 : Operation 13 [1/1] (0.40ns)   --->   "%store_ln0 = store i3 0, i3 %i"   --->   Operation 13 'store' 'store_ln0' <Predicate = true> <Delay = 0.40>
ST_1 : Operation 14 [1/1] (0.40ns)   --->   "%store_ln0 = store i3 0, i3 %j_1"   --->   Operation 14 'store' 'store_ln0' <Predicate = true> <Delay = 0.40>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%br_ln0 = br void %VITIS_LOOP_57_4.i14"   --->   Operation 15 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%i_1 = load i3 %i" [lenet_support.cpp:52->lenet_main.cpp:42]   --->   Operation 16 'load' 'i_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%indvar_flatten12_load = load i5 %indvar_flatten12" [lenet_support.cpp:52->lenet_main.cpp:42]   --->   Operation 17 'load' 'indvar_flatten12_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%p_shl6 = bitconcatenate i5 @_ssdm_op_BitConcatenate.i5.i3.i2, i3 %i_1, i2 0" [lenet_support.cpp:52->lenet_main.cpp:42]   --->   Operation 18 'bitconcatenate' 'p_shl6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%p_shl6_cast = zext i5 %p_shl6" [lenet_support.cpp:52->lenet_main.cpp:42]   --->   Operation 19 'zext' 'p_shl6_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%p_shl4 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i3.i4, i3 %i_1, i4 0" [lenet_support.cpp:52->lenet_main.cpp:42]   --->   Operation 20 'bitconcatenate' 'p_shl4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.70ns)   --->   "%empty = add i7 %p_shl4, i7 %p_shl6_cast" [lenet_support.cpp:52->lenet_main.cpp:42]   --->   Operation 21 'add' 'empty' <Predicate = true> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 22 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.71ns)   --->   "%icmp_ln52 = icmp_eq  i5 %indvar_flatten12_load, i5 25" [lenet_support.cpp:52->lenet_main.cpp:42]   --->   Operation 23 'icmp' 'icmp_ln52' <Predicate = true> <Delay = 0.71> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (0.71ns)   --->   "%add_ln52 = add i5 %indvar_flatten12_load, i5 1" [lenet_support.cpp:52->lenet_main.cpp:42]   --->   Operation 24 'add' 'add_ln52' <Predicate = true> <Delay = 0.71> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%br_ln52 = br i1 %icmp_ln52, void %for.inc28.i29, void %VITIS_LOOP_72_2.i.preheader.exitStub" [lenet_support.cpp:52->lenet_main.cpp:42]   --->   Operation 25 'br' 'br_ln52' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%j_1_load = load i3 %j_1" [lenet_support.cpp:53->lenet_main.cpp:42]   --->   Operation 26 'load' 'j_1_load' <Predicate = (!icmp_ln52)> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.61ns)   --->   "%icmp_ln53 = icmp_eq  i3 %j_1_load, i3 5" [lenet_support.cpp:53->lenet_main.cpp:42]   --->   Operation 27 'icmp' 'icmp_ln53' <Predicate = (!icmp_ln52)> <Delay = 0.61> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 28 [1/1] (0.18ns)   --->   "%select_ln52 = select i1 %icmp_ln53, i3 0, i3 %j_1_load" [lenet_support.cpp:52->lenet_main.cpp:42]   --->   Operation 28 'select' 'select_ln52' <Predicate = (!icmp_ln52)> <Delay = 0.18> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 29 [1/1] (0.61ns)   --->   "%add_ln52_1 = add i3 %i_1, i3 1" [lenet_support.cpp:52->lenet_main.cpp:42]   --->   Operation 29 'add' 'add_ln52_1' <Predicate = (!icmp_ln52)> <Delay = 0.61> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 30 [1/1] (0.18ns)   --->   "%select_ln52_1 = select i1 %icmp_ln53, i3 %add_ln52_1, i3 %i_1" [lenet_support.cpp:52->lenet_main.cpp:42]   --->   Operation 30 'select' 'select_ln52_1' <Predicate = (!icmp_ln52)> <Delay = 0.18> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%zext_ln52 = zext i3 %select_ln52_1" [lenet_support.cpp:52->lenet_main.cpp:42]   --->   Operation 31 'zext' 'zext_ln52' <Predicate = (!icmp_ln52)> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%p_shl6_mid1 = bitconcatenate i5 @_ssdm_op_BitConcatenate.i5.i3.i2, i3 %add_ln52_1, i2 0" [lenet_support.cpp:52->lenet_main.cpp:42]   --->   Operation 32 'bitconcatenate' 'p_shl6_mid1' <Predicate = (!icmp_ln52)> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns) (grouped into LUT with out node add_ln62_1)   --->   "%select_ln52_2 = select i1 %icmp_ln53, i5 %p_shl6_mid1, i5 %p_shl6" [lenet_support.cpp:52->lenet_main.cpp:42]   --->   Operation 33 'select' 'select_ln52_2' <Predicate = (!icmp_ln52)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.19> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%p_shl6_cast_mid1 = zext i5 %p_shl6_mid1" [lenet_support.cpp:52->lenet_main.cpp:42]   --->   Operation 34 'zext' 'p_shl6_cast_mid1' <Predicate = (!icmp_ln52)> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%p_shl4_mid1 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i3.i4, i3 %add_ln52_1, i4 0" [lenet_support.cpp:52->lenet_main.cpp:42]   --->   Operation 35 'bitconcatenate' 'p_shl4_mid1' <Predicate = (!icmp_ln52)> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.70ns)   --->   "%p_mid110 = add i7 %p_shl4_mid1, i7 %p_shl6_cast_mid1" [lenet_support.cpp:52->lenet_main.cpp:42]   --->   Operation 36 'add' 'p_mid110' <Predicate = (!icmp_ln52)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 37 [1/1] (0.32ns)   --->   "%select_ln52_3 = select i1 %icmp_ln53, i7 %p_mid110, i7 %empty" [lenet_support.cpp:52->lenet_main.cpp:42]   --->   Operation 37 'select' 'select_ln52_3' <Predicate = (!icmp_ln52)> <Delay = 0.32> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.32> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%j_1_cast = zext i3 %select_ln52" [lenet_support.cpp:52->lenet_main.cpp:42]   --->   Operation 38 'zext' 'j_1_cast' <Predicate = (!icmp_ln52)> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%tmp_s = bitconcatenate i4 @_ssdm_op_BitConcatenate.i4.i3.i1, i3 %select_ln52, i1 0" [lenet_support.cpp:52->lenet_main.cpp:42]   --->   Operation 39 'bitconcatenate' 'tmp_s' <Predicate = (!icmp_ln52)> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%zext_ln58 = zext i4 %tmp_s" [lenet_support.cpp:58->lenet_main.cpp:42]   --->   Operation 40 'zext' 'zext_ln58' <Predicate = (!icmp_ln52)> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%zext_ln58_1 = zext i4 %tmp_s" [lenet_support.cpp:58->lenet_main.cpp:42]   --->   Operation 41 'zext' 'zext_ln58_1' <Predicate = (!icmp_ln52)> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.70ns)   --->   "%add_ln58 = add i7 %zext_ln58_1, i7 %select_ln52_3" [lenet_support.cpp:58->lenet_main.cpp:42]   --->   Operation 42 'add' 'add_ln58' <Predicate = (!icmp_ln52)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%zext_ln58_2 = zext i7 %add_ln58" [lenet_support.cpp:58->lenet_main.cpp:42]   --->   Operation 43 'zext' 'zext_ln58_2' <Predicate = (!icmp_ln52)> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%conv2_output_addr = getelementptr i32 %conv2_output, i64 0, i64 %zext_ln58_2" [lenet_support.cpp:58->lenet_main.cpp:42]   --->   Operation 44 'getelementptr' 'conv2_output_addr' <Predicate = (!icmp_ln52)> <Delay = 0.00>
ST_1 : Operation 45 [2/2] (1.09ns)   --->   "%conv2_output_load = load i11 %conv2_output_addr" [lenet_support.cpp:58->lenet_main.cpp:42]   --->   Operation 45 'load' 'conv2_output_load' <Predicate = (!icmp_ln52)> <Delay = 1.09> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 1600> <RAM>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%or_ln58 = or i7 %add_ln58, i7 1" [lenet_support.cpp:58->lenet_main.cpp:42]   --->   Operation 46 'or' 'or_ln58' <Predicate = (!icmp_ln52)> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%zext_ln58_3 = zext i7 %or_ln58" [lenet_support.cpp:58->lenet_main.cpp:42]   --->   Operation 47 'zext' 'zext_ln58_3' <Predicate = (!icmp_ln52)> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%conv2_output_addr_1 = getelementptr i32 %conv2_output, i64 0, i64 %zext_ln58_3" [lenet_support.cpp:58->lenet_main.cpp:42]   --->   Operation 48 'getelementptr' 'conv2_output_addr_1' <Predicate = (!icmp_ln52)> <Delay = 0.00>
ST_1 : Operation 49 [2/2] (1.09ns)   --->   "%conv2_output_load_1 = load i11 %conv2_output_addr_1" [lenet_support.cpp:58->lenet_main.cpp:42]   --->   Operation 49 'load' 'conv2_output_load_1' <Predicate = (!icmp_ln52)> <Delay = 1.09> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 1600> <RAM>
ST_1 : Operation 50 [1/1] (0.71ns)   --->   "%add_ln58_1 = add i5 %zext_ln58, i5 10" [lenet_support.cpp:58->lenet_main.cpp:42]   --->   Operation 50 'add' 'add_ln58_1' <Predicate = (!icmp_ln52)> <Delay = 0.71> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%zext_ln58_4 = zext i5 %add_ln58_1" [lenet_support.cpp:58->lenet_main.cpp:42]   --->   Operation 51 'zext' 'zext_ln58_4' <Predicate = (!icmp_ln52)> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.70ns)   --->   "%add_ln58_2 = add i7 %zext_ln58_4, i7 %select_ln52_3" [lenet_support.cpp:58->lenet_main.cpp:42]   --->   Operation 52 'add' 'add_ln58_2' <Predicate = (!icmp_ln52)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%zext_ln58_5 = zext i7 %add_ln58_2" [lenet_support.cpp:58->lenet_main.cpp:42]   --->   Operation 53 'zext' 'zext_ln58_5' <Predicate = (!icmp_ln52)> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%conv2_output_addr_2 = getelementptr i32 %conv2_output, i64 0, i64 %zext_ln58_5" [lenet_support.cpp:58->lenet_main.cpp:42]   --->   Operation 54 'getelementptr' 'conv2_output_addr_2' <Predicate = (!icmp_ln52)> <Delay = 0.00>
ST_1 : Operation 55 [2/2] (1.09ns)   --->   "%conv2_output_load_2 = load i11 %conv2_output_addr_2" [lenet_support.cpp:58->lenet_main.cpp:42]   --->   Operation 55 'load' 'conv2_output_load_2' <Predicate = (!icmp_ln52)> <Delay = 1.09> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 1600> <RAM>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%or_ln58_1 = or i7 %add_ln58_2, i7 1" [lenet_support.cpp:58->lenet_main.cpp:42]   --->   Operation 56 'or' 'or_ln58_1' <Predicate = (!icmp_ln52)> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%zext_ln58_6 = zext i7 %or_ln58_1" [lenet_support.cpp:58->lenet_main.cpp:42]   --->   Operation 57 'zext' 'zext_ln58_6' <Predicate = (!icmp_ln52)> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%conv2_output_addr_3 = getelementptr i32 %conv2_output, i64 0, i64 %zext_ln58_6" [lenet_support.cpp:58->lenet_main.cpp:42]   --->   Operation 58 'getelementptr' 'conv2_output_addr_3' <Predicate = (!icmp_ln52)> <Delay = 0.00>
ST_1 : Operation 59 [2/2] (1.09ns)   --->   "%conv2_output_load_3 = load i11 %conv2_output_addr_3" [lenet_support.cpp:58->lenet_main.cpp:42]   --->   Operation 59 'load' 'conv2_output_load_3' <Predicate = (!icmp_ln52)> <Delay = 1.09> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 1600> <RAM>
ST_1 : Operation 60 [1/1] (0.61ns)   --->   "%add_ln62 = add i4 %zext_ln52, i4 %j_1_cast" [lenet_support.cpp:62->lenet_main.cpp:42]   --->   Operation 60 'add' 'add_ln62' <Predicate = (!icmp_ln52)> <Delay = 0.61> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 61 [1/1] (0.00ns) (grouped into LUT with out node add_ln62_1)   --->   "%zext_ln62 = zext i4 %add_ln62" [lenet_support.cpp:62->lenet_main.cpp:42]   --->   Operation 61 'zext' 'zext_ln62' <Predicate = (!icmp_ln52)> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.71ns) (out node of the LUT)   --->   "%add_ln62_1 = add i5 %zext_ln62, i5 %select_ln52_2" [lenet_support.cpp:62->lenet_main.cpp:42]   --->   Operation 62 'add' 'add_ln62_1' <Predicate = (!icmp_ln52)> <Delay = 0.71> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 63 [1/1] (0.61ns)   --->   "%add_ln53 = add i3 %select_ln52, i3 1" [lenet_support.cpp:53->lenet_main.cpp:42]   --->   Operation 63 'add' 'add_ln53' <Predicate = (!icmp_ln52)> <Delay = 0.61> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 64 [1/1] (0.40ns)   --->   "%store_ln53 = store i5 %add_ln52, i5 %indvar_flatten12" [lenet_support.cpp:53->lenet_main.cpp:42]   --->   Operation 64 'store' 'store_ln53' <Predicate = (!icmp_ln52)> <Delay = 0.40>
ST_1 : Operation 65 [1/1] (0.40ns)   --->   "%store_ln53 = store i3 %select_ln52_1, i3 %i" [lenet_support.cpp:53->lenet_main.cpp:42]   --->   Operation 65 'store' 'store_ln53' <Predicate = (!icmp_ln52)> <Delay = 0.40>
ST_1 : Operation 66 [1/1] (0.40ns)   --->   "%store_ln53 = store i3 %add_ln53, i3 %j_1" [lenet_support.cpp:53->lenet_main.cpp:42]   --->   Operation 66 'store' 'store_ln53' <Predicate = (!icmp_ln52)> <Delay = 0.40>

State 2 <SV = 1> <Delay = 3.67>
ST_2 : Operation 67 [1/2] (1.09ns)   --->   "%conv2_output_load = load i11 %conv2_output_addr" [lenet_support.cpp:58->lenet_main.cpp:42]   --->   Operation 67 'load' 'conv2_output_load' <Predicate = true> <Delay = 1.09> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 1600> <RAM>
ST_2 : [1/1] (0.71ns)   --->   Input mux for Operation 68 '%tmp_2 = fcmp_ogt  i32 %conv2_output_load, i32 -inf'
ST_2 : Operation 68 [2/2] (1.85ns)   --->   "%tmp_2 = fcmp_ogt  i32 %conv2_output_load, i32 -inf" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 68 'fcmp' 'tmp_2' <Predicate = true> <Delay = 1.85> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.57> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 69 [1/2] (1.09ns)   --->   "%conv2_output_load_1 = load i11 %conv2_output_addr_1" [lenet_support.cpp:58->lenet_main.cpp:42]   --->   Operation 69 'load' 'conv2_output_load_1' <Predicate = true> <Delay = 1.09> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 1600> <RAM>
ST_2 : Operation 70 [1/2] (1.09ns)   --->   "%conv2_output_load_2 = load i11 %conv2_output_addr_2" [lenet_support.cpp:58->lenet_main.cpp:42]   --->   Operation 70 'load' 'conv2_output_load_2' <Predicate = true> <Delay = 1.09> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 1600> <RAM>
ST_2 : Operation 71 [1/2] (1.09ns)   --->   "%conv2_output_load_3 = load i11 %conv2_output_addr_3" [lenet_support.cpp:58->lenet_main.cpp:42]   --->   Operation 71 'load' 'conv2_output_load_3' <Predicate = true> <Delay = 1.09> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 1600> <RAM>

State 3 <SV = 2> <Delay = 5.56>
ST_3 : Operation 72 [1/1] (0.00ns)   --->   "%bitcast_ln59 = bitcast i32 %conv2_output_load" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 72 'bitcast' 'bitcast_ln59' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 73 [1/1] (0.00ns)   --->   "%tmp_1 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln59, i32 23, i32 30" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 73 'partselect' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 74 [1/1] (0.00ns)   --->   "%trunc_ln59 = trunc i32 %bitcast_ln59" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 74 'trunc' 'trunc_ln59' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 75 [1/1] (0.70ns)   --->   "%icmp_ln59 = icmp_ne  i8 %tmp_1, i8 255" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 75 'icmp' 'icmp_ln59' <Predicate = true> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 76 [1/1] (0.88ns)   --->   "%icmp_ln59_1 = icmp_eq  i23 %trunc_ln59, i23 0" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 76 'icmp' 'icmp_ln59_1' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 77 [1/1] (0.00ns) (grouped into LUT with out node select_ln59)   --->   "%or_ln59 = or i1 %icmp_ln59_1, i1 %icmp_ln59" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 77 'or' 'or_ln59' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 78 [1/2] (2.57ns)   --->   "%tmp_2 = fcmp_ogt  i32 %conv2_output_load, i32 -inf" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 78 'fcmp' 'tmp_2' <Predicate = true> <Delay = 2.57> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.57> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 79 [1/1] (0.00ns) (grouped into LUT with out node select_ln59)   --->   "%and_ln59 = and i1 %or_ln59, i1 %tmp_2" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 79 'and' 'and_ln59' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 80 [1/1] (0.41ns) (out node of the LUT)   --->   "%select_ln59 = select i1 %and_ln59, i32 %conv2_output_load, i32 -inf" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 80 'select' 'select_ln59' <Predicate = true> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : [1/1] (0.71ns)   --->   Input mux for Operation 81 '%tmp_5 = fcmp_ogt  i32 %conv2_output_load_1, i32 %select_ln59'
ST_3 : Operation 81 [2/2] (1.85ns)   --->   "%tmp_5 = fcmp_ogt  i32 %conv2_output_load_1, i32 %select_ln59" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 81 'fcmp' 'tmp_5' <Predicate = true> <Delay = 1.85> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.57> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 5.81>
ST_4 : Operation 82 [1/1] (0.00ns)   --->   "%bitcast_ln59_1 = bitcast i32 %conv2_output_load_1" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 82 'bitcast' 'bitcast_ln59_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 83 [1/1] (0.00ns)   --->   "%tmp_3 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln59_1, i32 23, i32 30" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 83 'partselect' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 84 [1/1] (0.00ns)   --->   "%trunc_ln59_1 = trunc i32 %bitcast_ln59_1" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 84 'trunc' 'trunc_ln59_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 85 [1/1] (0.00ns)   --->   "%bitcast_ln59_2 = bitcast i32 %select_ln59" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 85 'bitcast' 'bitcast_ln59_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 86 [1/1] (0.00ns)   --->   "%tmp_4 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln59_2, i32 23, i32 30" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 86 'partselect' 'tmp_4' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 87 [1/1] (0.00ns)   --->   "%trunc_ln59_2 = trunc i32 %bitcast_ln59_2" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 87 'trunc' 'trunc_ln59_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 88 [1/1] (0.70ns)   --->   "%icmp_ln59_2 = icmp_ne  i8 %tmp_3, i8 255" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 88 'icmp' 'icmp_ln59_2' <Predicate = true> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 89 [1/1] (0.88ns)   --->   "%icmp_ln59_3 = icmp_eq  i23 %trunc_ln59_1, i23 0" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 89 'icmp' 'icmp_ln59_3' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 90 [1/1] (0.00ns) (grouped into LUT with out node and_ln59_2)   --->   "%or_ln59_1 = or i1 %icmp_ln59_3, i1 %icmp_ln59_2" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 90 'or' 'or_ln59_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 91 [1/1] (0.70ns)   --->   "%icmp_ln59_4 = icmp_ne  i8 %tmp_4, i8 255" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 91 'icmp' 'icmp_ln59_4' <Predicate = true> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 92 [1/1] (0.88ns)   --->   "%icmp_ln59_5 = icmp_eq  i23 %trunc_ln59_2, i23 0" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 92 'icmp' 'icmp_ln59_5' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 93 [1/1] (0.00ns) (grouped into LUT with out node and_ln59_2)   --->   "%or_ln59_2 = or i1 %icmp_ln59_5, i1 %icmp_ln59_4" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 93 'or' 'or_ln59_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 94 [1/1] (0.00ns) (grouped into LUT with out node and_ln59_2)   --->   "%and_ln59_1 = and i1 %or_ln59_1, i1 %or_ln59_2" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 94 'and' 'and_ln59_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 95 [1/2] (2.57ns)   --->   "%tmp_5 = fcmp_ogt  i32 %conv2_output_load_1, i32 %select_ln59" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 95 'fcmp' 'tmp_5' <Predicate = true> <Delay = 2.57> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.57> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 96 [1/1] (0.25ns) (out node of the LUT)   --->   "%and_ln59_2 = and i1 %and_ln59_1, i1 %tmp_5" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 96 'and' 'and_ln59_2' <Predicate = true> <Delay = 0.25> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 97 [1/1] (0.41ns) (out node of the LUT)   --->   "%select_ln59_1 = select i1 %and_ln59_2, i32 %conv2_output_load_1, i32 %select_ln59" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 97 'select' 'select_ln59_1' <Predicate = true> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : [1/1] (0.71ns)   --->   Input mux for Operation 98 '%tmp_8 = fcmp_ogt  i32 %conv2_output_load_2, i32 %select_ln59_1'
ST_4 : Operation 98 [2/2] (1.85ns)   --->   "%tmp_8 = fcmp_ogt  i32 %conv2_output_load_2, i32 %select_ln59_1" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 98 'fcmp' 'tmp_8' <Predicate = true> <Delay = 1.85> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.57> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 5.81>
ST_5 : Operation 99 [1/1] (0.00ns)   --->   "%bitcast_ln59_3 = bitcast i32 %conv2_output_load_2" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 99 'bitcast' 'bitcast_ln59_3' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 100 [1/1] (0.00ns)   --->   "%tmp_6 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln59_3, i32 23, i32 30" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 100 'partselect' 'tmp_6' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 101 [1/1] (0.00ns)   --->   "%trunc_ln59_3 = trunc i32 %bitcast_ln59_3" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 101 'trunc' 'trunc_ln59_3' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 102 [1/1] (0.00ns)   --->   "%bitcast_ln59_4 = bitcast i32 %select_ln59_1" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 102 'bitcast' 'bitcast_ln59_4' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 103 [1/1] (0.00ns)   --->   "%tmp_7 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln59_4, i32 23, i32 30" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 103 'partselect' 'tmp_7' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 104 [1/1] (0.00ns)   --->   "%trunc_ln59_4 = trunc i32 %bitcast_ln59_4" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 104 'trunc' 'trunc_ln59_4' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 105 [1/1] (0.70ns)   --->   "%icmp_ln59_6 = icmp_ne  i8 %tmp_6, i8 255" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 105 'icmp' 'icmp_ln59_6' <Predicate = true> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 106 [1/1] (0.88ns)   --->   "%icmp_ln59_7 = icmp_eq  i23 %trunc_ln59_3, i23 0" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 106 'icmp' 'icmp_ln59_7' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 107 [1/1] (0.00ns) (grouped into LUT with out node and_ln59_4)   --->   "%or_ln59_3 = or i1 %icmp_ln59_7, i1 %icmp_ln59_6" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 107 'or' 'or_ln59_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 108 [1/1] (0.70ns)   --->   "%icmp_ln59_8 = icmp_ne  i8 %tmp_7, i8 255" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 108 'icmp' 'icmp_ln59_8' <Predicate = true> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 109 [1/1] (0.88ns)   --->   "%icmp_ln59_9 = icmp_eq  i23 %trunc_ln59_4, i23 0" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 109 'icmp' 'icmp_ln59_9' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 110 [1/1] (0.00ns) (grouped into LUT with out node and_ln59_4)   --->   "%or_ln59_4 = or i1 %icmp_ln59_9, i1 %icmp_ln59_8" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 110 'or' 'or_ln59_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 111 [1/1] (0.00ns) (grouped into LUT with out node and_ln59_4)   --->   "%and_ln59_3 = and i1 %or_ln59_3, i1 %or_ln59_4" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 111 'and' 'and_ln59_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 112 [1/2] (2.57ns)   --->   "%tmp_8 = fcmp_ogt  i32 %conv2_output_load_2, i32 %select_ln59_1" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 112 'fcmp' 'tmp_8' <Predicate = true> <Delay = 2.57> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.57> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 113 [1/1] (0.25ns) (out node of the LUT)   --->   "%and_ln59_4 = and i1 %and_ln59_3, i1 %tmp_8" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 113 'and' 'and_ln59_4' <Predicate = true> <Delay = 0.25> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 114 [1/1] (0.41ns) (out node of the LUT)   --->   "%select_ln59_2 = select i1 %and_ln59_4, i32 %conv2_output_load_2, i32 %select_ln59_1" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 114 'select' 'select_ln59_2' <Predicate = true> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : [1/1] (0.71ns)   --->   Input mux for Operation 115 '%tmp_11 = fcmp_ogt  i32 %conv2_output_load_3, i32 %select_ln59_2'
ST_5 : Operation 115 [2/2] (1.85ns)   --->   "%tmp_11 = fcmp_ogt  i32 %conv2_output_load_3, i32 %select_ln59_2" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 115 'fcmp' 'tmp_11' <Predicate = true> <Delay = 1.85> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.57> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 140 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 140 'ret' 'ret_ln0' <Predicate = (icmp_ln52)> <Delay = 0.00>

State 6 <SV = 5> <Delay = 4.34>
ST_6 : Operation 116 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @VITIS_LOOP_52_1_VITIS_LOOP_53_2_str"   --->   Operation 116 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 117 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 25, i64 25, i64 25"   --->   Operation 117 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 118 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 118 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 119 [1/1] (0.00ns)   --->   "%specloopname_ln53 = specloopname void @_ssdm_op_SpecLoopName, void @empty_14" [lenet_support.cpp:53->lenet_main.cpp:42]   --->   Operation 119 'specloopname' 'specloopname_ln53' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 120 [1/1] (0.00ns)   --->   "%bitcast_ln59_5 = bitcast i32 %conv2_output_load_3" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 120 'bitcast' 'bitcast_ln59_5' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 121 [1/1] (0.00ns)   --->   "%tmp_9 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln59_5, i32 23, i32 30" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 121 'partselect' 'tmp_9' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 122 [1/1] (0.00ns)   --->   "%trunc_ln59_5 = trunc i32 %bitcast_ln59_5" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 122 'trunc' 'trunc_ln59_5' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 123 [1/1] (0.00ns)   --->   "%bitcast_ln59_6 = bitcast i32 %select_ln59_2" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 123 'bitcast' 'bitcast_ln59_6' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 124 [1/1] (0.00ns)   --->   "%tmp_10 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln59_6, i32 23, i32 30" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 124 'partselect' 'tmp_10' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 125 [1/1] (0.00ns)   --->   "%trunc_ln59_6 = trunc i32 %bitcast_ln59_6" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 125 'trunc' 'trunc_ln59_6' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 126 [1/1] (0.70ns)   --->   "%icmp_ln59_10 = icmp_ne  i8 %tmp_9, i8 255" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 126 'icmp' 'icmp_ln59_10' <Predicate = true> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 127 [1/1] (0.88ns)   --->   "%icmp_ln59_11 = icmp_eq  i23 %trunc_ln59_5, i23 0" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 127 'icmp' 'icmp_ln59_11' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 128 [1/1] (0.00ns) (grouped into LUT with out node and_ln59_6)   --->   "%or_ln59_5 = or i1 %icmp_ln59_11, i1 %icmp_ln59_10" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 128 'or' 'or_ln59_5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 129 [1/1] (0.70ns)   --->   "%icmp_ln59_12 = icmp_ne  i8 %tmp_10, i8 255" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 129 'icmp' 'icmp_ln59_12' <Predicate = true> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 130 [1/1] (0.88ns)   --->   "%icmp_ln59_13 = icmp_eq  i23 %trunc_ln59_6, i23 0" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 130 'icmp' 'icmp_ln59_13' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 131 [1/1] (0.00ns) (grouped into LUT with out node and_ln59_6)   --->   "%or_ln59_6 = or i1 %icmp_ln59_13, i1 %icmp_ln59_12" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 131 'or' 'or_ln59_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 132 [1/1] (0.00ns) (grouped into LUT with out node and_ln59_6)   --->   "%and_ln59_5 = and i1 %or_ln59_5, i1 %or_ln59_6" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 132 'and' 'and_ln59_5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 133 [1/2] (2.57ns)   --->   "%tmp_11 = fcmp_ogt  i32 %conv2_output_load_3, i32 %select_ln59_2" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 133 'fcmp' 'tmp_11' <Predicate = true> <Delay = 2.57> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.57> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 134 [1/1] (0.25ns) (out node of the LUT)   --->   "%and_ln59_6 = and i1 %and_ln59_5, i1 %tmp_11" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 134 'and' 'and_ln59_6' <Predicate = true> <Delay = 0.25> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 135 [1/1] (0.41ns) (out node of the LUT)   --->   "%select_ln59_3 = select i1 %and_ln59_6, i32 %conv2_output_load_3, i32 %select_ln59_2" [lenet_support.cpp:59->lenet_main.cpp:42]   --->   Operation 135 'select' 'select_ln59_3' <Predicate = true> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 136 [1/1] (0.00ns)   --->   "%zext_ln62_1 = zext i5 %add_ln62_1" [lenet_support.cpp:62->lenet_main.cpp:42]   --->   Operation 136 'zext' 'zext_ln62_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 137 [1/1] (0.00ns)   --->   "%pool2_output_addr = getelementptr i32 %pool2_output, i64 0, i64 %zext_ln62_1" [lenet_support.cpp:62->lenet_main.cpp:42]   --->   Operation 137 'getelementptr' 'pool2_output_addr' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 138 [1/1] (1.09ns)   --->   "%store_ln62 = store i32 %select_ln59_3, i9 %pool2_output_addr" [lenet_support.cpp:62->lenet_main.cpp:42]   --->   Operation 138 'store' 'store_ln62' <Predicate = true> <Delay = 1.09> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 400> <RAM>
ST_6 : Operation 139 [1/1] (0.00ns)   --->   "%br_ln53 = br void %VITIS_LOOP_57_4.i14" [lenet_support.cpp:53->lenet_main.cpp:42]   --->   Operation 139 'br' 'br_ln53' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 3.455ns
The critical path consists of the following:
	'alloca' operation ('i') [4]  (0.000 ns)
	'load' operation ('i', lenet_support.cpp:52->lenet_main.cpp:42) on local variable 'i' [11]  (0.000 ns)
	'add' operation ('add_ln52_1', lenet_support.cpp:52->lenet_main.cpp:42) [27]  (0.615 ns)
	'add' operation ('p_mid110', lenet_support.cpp:52->lenet_main.cpp:42) [34]  (0.707 ns)
	'select' operation ('select_ln52_3', lenet_support.cpp:52->lenet_main.cpp:42) [35]  (0.327 ns)
	'add' operation ('add_ln58', lenet_support.cpp:58->lenet_main.cpp:42) [42]  (0.707 ns)
	'getelementptr' operation ('conv2_output_addr', lenet_support.cpp:58->lenet_main.cpp:42) [44]  (0.000 ns)
	'load' operation ('conv2_output_load', lenet_support.cpp:58->lenet_main.cpp:42) on array 'conv2_output' [45]  (1.099 ns)

 <State 2>: 3.673ns
The critical path consists of the following:
	'load' operation ('conv2_output_load', lenet_support.cpp:58->lenet_main.cpp:42) on array 'conv2_output' [45]  (1.099 ns)
	multiplexor before operation 'fcmp' with delay (0.715 ns)
'fcmp' operation ('tmp_2', lenet_support.cpp:59->lenet_main.cpp:42) [52]  (1.859 ns)

 <State 3>: 5.560ns
The critical path consists of the following:
	'fcmp' operation ('tmp_2', lenet_support.cpp:59->lenet_main.cpp:42) [52]  (2.574 ns)
	'and' operation ('and_ln59', lenet_support.cpp:59->lenet_main.cpp:42) [53]  (0.000 ns)
	'select' operation ('select_ln59', lenet_support.cpp:59->lenet_main.cpp:42) [54]  (0.412 ns)
	multiplexor before operation 'fcmp' with delay (0.715 ns)
'fcmp' operation ('tmp_5', lenet_support.cpp:59->lenet_main.cpp:42) [72]  (1.859 ns)

 <State 4>: 5.816ns
The critical path consists of the following:
	'fcmp' operation ('tmp_5', lenet_support.cpp:59->lenet_main.cpp:42) [72]  (2.574 ns)
	'and' operation ('and_ln59_2', lenet_support.cpp:59->lenet_main.cpp:42) [73]  (0.256 ns)
	'select' operation ('select_ln59_1', lenet_support.cpp:59->lenet_main.cpp:42) [74]  (0.412 ns)
	multiplexor before operation 'fcmp' with delay (0.715 ns)
'fcmp' operation ('tmp_8', lenet_support.cpp:59->lenet_main.cpp:42) [94]  (1.859 ns)

 <State 5>: 5.816ns
The critical path consists of the following:
	'fcmp' operation ('tmp_8', lenet_support.cpp:59->lenet_main.cpp:42) [94]  (2.574 ns)
	'and' operation ('and_ln59_4', lenet_support.cpp:59->lenet_main.cpp:42) [95]  (0.256 ns)
	'select' operation ('select_ln59_2', lenet_support.cpp:59->lenet_main.cpp:42) [96]  (0.412 ns)
	multiplexor before operation 'fcmp' with delay (0.715 ns)
'fcmp' operation ('tmp_11', lenet_support.cpp:59->lenet_main.cpp:42) [114]  (1.859 ns)

 <State 6>: 4.341ns
The critical path consists of the following:
	'fcmp' operation ('tmp_11', lenet_support.cpp:59->lenet_main.cpp:42) [114]  (2.574 ns)
	'and' operation ('and_ln59_6', lenet_support.cpp:59->lenet_main.cpp:42) [115]  (0.256 ns)
	'select' operation ('select_ln59_3', lenet_support.cpp:59->lenet_main.cpp:42) [116]  (0.412 ns)
	'store' operation ('store_ln62', lenet_support.cpp:62->lenet_main.cpp:42) of variable 'select_ln59_3', lenet_support.cpp:59->lenet_main.cpp:42 on array 'pool2_output' [122]  (1.099 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
