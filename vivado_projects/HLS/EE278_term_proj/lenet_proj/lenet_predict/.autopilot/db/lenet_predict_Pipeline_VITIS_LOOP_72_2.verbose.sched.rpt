

================================================================
== Vitis HLS Report for 'lenet_predict_Pipeline_VITIS_LOOP_72_2'
================================================================
* Date:           Fri Nov 22 20:00:53 2024

* Version:        2023.1 (Build 3854077 on May  4 2023)
* Project:        lenet_proj
* Solution:       lenet_predict (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu7ev-ffvf1517-3-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.186 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+------+------+---------+
    |  Latency (cycles) |   Latency (absolute)  |   Interval  | Pipeline|
    |   min   |   max   |    min    |    max    |  min |  max |   Type  |
    +---------+---------+-----------+-----------+------+------+---------+
    |     1605|     1605|  16.050 us|  16.050 us|  1605|  1605|       no|
    +---------+---------+-----------+-----------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_72_2  |     1603|     1603|        12|          8|          1|   200|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 8, depth = 12


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 12
* Pipeline : 1
  Pipeline-0 : II = 8, D = 12, States = { 1 2 3 4 5 6 7 8 9 10 11 12 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.12>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%sum_2 = alloca i32 1"   --->   Operation 15 'alloca' 'sum_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%j_2 = alloca i32 1"   --->   Operation 16 'alloca' 'j_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.40ns)   --->   "%store_ln0 = store i9 0, i9 %j_2"   --->   Operation 17 'store' 'store_ln0' <Predicate = true> <Delay = 0.40>
ST_1 : Operation 18 [1/1] (0.40ns)   --->   "%store_ln0 = store i32 0, i32 %sum_2"   --->   Operation 18 'store' 'store_ln0' <Predicate = true> <Delay = 0.40>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc.0.i"   --->   Operation 19 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%j = load i9 %j_2" [lenet_support.cpp:72->lenet_main.cpp:43]   --->   Operation 20 'load' 'j' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 21 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.71ns)   --->   "%icmp_ln72 = icmp_ult  i9 %j, i9 400" [lenet_support.cpp:72->lenet_main.cpp:43]   --->   Operation 22 'icmp' 'icmp_ln72' <Predicate = true> <Delay = 0.71> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 200, i64 200, i64 200"   --->   Operation 23 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%br_ln72 = br i1 %icmp_ln72, void %for.inc14.i.exitStub, void %for.inc.0.split.i" [lenet_support.cpp:72->lenet_main.cpp:43]   --->   Operation 24 'br' 'br_ln72' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%j_2_cast13 = zext i9 %j" [lenet_support.cpp:72->lenet_main.cpp:43]   --->   Operation 25 'zext' 'j_2_cast13' <Predicate = (icmp_ln72)> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%pool2_output_addr = getelementptr i32 %pool2_output, i64 0, i64 %j_2_cast13" [lenet_support.cpp:74->lenet_main.cpp:43]   --->   Operation 26 'getelementptr' 'pool2_output_addr' <Predicate = (icmp_ln72)> <Delay = 0.00>
ST_1 : Operation 27 [2/2] (1.09ns)   --->   "%pool2_output_load = load i9 %pool2_output_addr" [lenet_support.cpp:74->lenet_main.cpp:43]   --->   Operation 27 'load' 'pool2_output_load' <Predicate = (icmp_ln72)> <Delay = 1.09> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 400> <RAM>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%or_ln72 = or i9 %j, i9 1" [lenet_support.cpp:72->lenet_main.cpp:43]   --->   Operation 28 'or' 'or_ln72' <Predicate = (icmp_ln72)> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%zext_ln71 = zext i9 %or_ln72" [lenet_support.cpp:71->lenet_main.cpp:43]   --->   Operation 29 'zext' 'zext_ln71' <Predicate = (icmp_ln72)> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%pool2_output_addr_1 = getelementptr i32 %pool2_output, i64 0, i64 %zext_ln71" [lenet_support.cpp:74->lenet_main.cpp:43]   --->   Operation 30 'getelementptr' 'pool2_output_addr_1' <Predicate = (icmp_ln72)> <Delay = 0.00>
ST_1 : Operation 31 [2/2] (1.09ns)   --->   "%pool2_output_load_1 = load i9 %pool2_output_addr_1" [lenet_support.cpp:74->lenet_main.cpp:43]   --->   Operation 31 'load' 'pool2_output_load_1' <Predicate = (icmp_ln72)> <Delay = 1.09> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 400> <RAM>
ST_1 : Operation 32 [1/1] (0.71ns)   --->   "%add_ln72 = add i9 %j, i9 2" [lenet_support.cpp:72->lenet_main.cpp:43]   --->   Operation 32 'add' 'add_ln72' <Predicate = (icmp_ln72)> <Delay = 0.71> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 33 [1/1] (0.40ns)   --->   "%store_ln72 = store i9 %add_ln72, i9 %j_2" [lenet_support.cpp:72->lenet_main.cpp:43]   --->   Operation 33 'store' 'store_ln72' <Predicate = (icmp_ln72)> <Delay = 0.40>

State 2 <SV = 1> <Delay = 7.18>
ST_2 : Operation 34 [1/2] (1.09ns)   --->   "%pool2_output_load = load i9 %pool2_output_addr" [lenet_support.cpp:74->lenet_main.cpp:43]   --->   Operation 34 'load' 'pool2_output_load' <Predicate = (icmp_ln72)> <Delay = 1.09> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 400> <RAM>
ST_2 : [1/1] (0.79ns)   --->   Input mux for Operation 35 '%mul7_i = fmul i32 %pool2_output_load, i32 0'
ST_2 : Operation 35 [3/3] (5.29ns)   --->   "%mul7_i = fmul i32 %pool2_output_load, i32 0" [lenet_support.cpp:74->lenet_main.cpp:43]   --->   Operation 35 'fmul' 'mul7_i' <Predicate = (icmp_ln72)> <Delay = 5.29> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 2> <II = 1> <Delay = 6.08> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 36 [1/2] (1.09ns)   --->   "%pool2_output_load_1 = load i9 %pool2_output_addr_1" [lenet_support.cpp:74->lenet_main.cpp:43]   --->   Operation 36 'load' 'pool2_output_load_1' <Predicate = (icmp_ln72)> <Delay = 1.09> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 400> <RAM>

State 3 <SV = 2> <Delay = 6.08>
ST_3 : Operation 37 [2/3] (6.08ns)   --->   "%mul7_i = fmul i32 %pool2_output_load, i32 0" [lenet_support.cpp:74->lenet_main.cpp:43]   --->   Operation 37 'fmul' 'mul7_i' <Predicate = (icmp_ln72)> <Delay = 6.08> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 2> <II = 1> <Delay = 6.08> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (0.79ns)   --->   Input mux for Operation 38 '%mul7_1_i = fmul i32 %pool2_output_load_1, i32 0'
ST_3 : Operation 38 [3/3] (5.29ns)   --->   "%mul7_1_i = fmul i32 %pool2_output_load_1, i32 0" [lenet_support.cpp:74->lenet_main.cpp:43]   --->   Operation 38 'fmul' 'mul7_1_i' <Predicate = (icmp_ln72)> <Delay = 5.29> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 2> <II = 1> <Delay = 6.08> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 6.08>
ST_4 : Operation 39 [1/3] (6.08ns)   --->   "%mul7_i = fmul i32 %pool2_output_load, i32 0" [lenet_support.cpp:74->lenet_main.cpp:43]   --->   Operation 39 'fmul' 'mul7_i' <Predicate = (icmp_ln72)> <Delay = 6.08> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 2> <II = 1> <Delay = 6.08> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 40 [2/3] (6.08ns)   --->   "%mul7_1_i = fmul i32 %pool2_output_load_1, i32 0" [lenet_support.cpp:74->lenet_main.cpp:43]   --->   Operation 40 'fmul' 'mul7_1_i' <Predicate = (icmp_ln72)> <Delay = 6.08> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 2> <II = 1> <Delay = 6.08> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 54 [1/1] (0.00ns)   --->   "%sum_2_load_1 = load i32 %sum_2"   --->   Operation 54 'load' 'sum_2_load_1' <Predicate = (!icmp_ln72)> <Delay = 0.00>
ST_4 : Operation 55 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.floatP0A, i32 %sum_2_out, i32 %sum_2_load_1"   --->   Operation 55 'write' 'write_ln0' <Predicate = (!icmp_ln72)> <Delay = 0.00>
ST_4 : Operation 56 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 56 'ret' 'ret_ln0' <Predicate = (!icmp_ln72)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 6.08>
ST_5 : Operation 41 [1/1] (0.00ns)   --->   "%sum_2_load = load i32 %sum_2" [lenet_support.cpp:74->lenet_main.cpp:43]   --->   Operation 41 'load' 'sum_2_load' <Predicate = (icmp_ln72)> <Delay = 0.00>
ST_5 : [1/1] (0.79ns)   --->   Input mux for Operation 42 '%sum_3 = fadd i32 %sum_2_load, i32 %mul7_i'
ST_5 : Operation 42 [4/4] (4.91ns)   --->   "%sum_3 = fadd i32 %sum_2_load, i32 %mul7_i" [lenet_support.cpp:74->lenet_main.cpp:43]   --->   Operation 42 'fadd' 'sum_3' <Predicate = (icmp_ln72)> <Delay = 4.91> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 5.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 43 [1/3] (6.08ns)   --->   "%mul7_1_i = fmul i32 %pool2_output_load_1, i32 0" [lenet_support.cpp:74->lenet_main.cpp:43]   --->   Operation 43 'fmul' 'mul7_1_i' <Predicate = (icmp_ln72)> <Delay = 6.08> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 2> <II = 1> <Delay = 6.08> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 5.71>
ST_6 : Operation 44 [3/4] (5.71ns)   --->   "%sum_3 = fadd i32 %sum_2_load, i32 %mul7_i" [lenet_support.cpp:74->lenet_main.cpp:43]   --->   Operation 44 'fadd' 'sum_3' <Predicate = (icmp_ln72)> <Delay = 5.71> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 5.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 5.71>
ST_7 : Operation 45 [2/4] (5.71ns)   --->   "%sum_3 = fadd i32 %sum_2_load, i32 %mul7_i" [lenet_support.cpp:74->lenet_main.cpp:43]   --->   Operation 45 'fadd' 'sum_3' <Predicate = (icmp_ln72)> <Delay = 5.71> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 5.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 5.71>
ST_8 : Operation 46 [1/4] (5.71ns)   --->   "%sum_3 = fadd i32 %sum_2_load, i32 %mul7_i" [lenet_support.cpp:74->lenet_main.cpp:43]   --->   Operation 46 'fadd' 'sum_3' <Predicate = (icmp_ln72)> <Delay = 5.71> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 5.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 5.71>
ST_9 : [1/1] (0.79ns)   --->   Input mux for Operation 47 '%sum_4 = fadd i32 %sum_3, i32 %mul7_1_i'
ST_9 : Operation 47 [4/4] (4.91ns)   --->   "%sum_4 = fadd i32 %sum_3, i32 %mul7_1_i" [lenet_support.cpp:74->lenet_main.cpp:43]   --->   Operation 47 'fadd' 'sum_4' <Predicate = true> <Delay = 4.91> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 5.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 5.71>
ST_10 : Operation 48 [3/4] (5.71ns)   --->   "%sum_4 = fadd i32 %sum_3, i32 %mul7_1_i" [lenet_support.cpp:74->lenet_main.cpp:43]   --->   Operation 48 'fadd' 'sum_4' <Predicate = true> <Delay = 5.71> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 5.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 5.71>
ST_11 : Operation 49 [2/4] (5.71ns)   --->   "%sum_4 = fadd i32 %sum_3, i32 %mul7_1_i" [lenet_support.cpp:74->lenet_main.cpp:43]   --->   Operation 49 'fadd' 'sum_4' <Predicate = true> <Delay = 5.71> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 5.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 6.11>
ST_12 : Operation 50 [1/1] (0.00ns)   --->   "%specloopname_ln72 = specloopname void @_ssdm_op_SpecLoopName, void @empty_17" [lenet_support.cpp:72->lenet_main.cpp:43]   --->   Operation 50 'specloopname' 'specloopname_ln72' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 51 [1/4] (5.71ns)   --->   "%sum_4 = fadd i32 %sum_3, i32 %mul7_1_i" [lenet_support.cpp:74->lenet_main.cpp:43]   --->   Operation 51 'fadd' 'sum_4' <Predicate = true> <Delay = 5.71> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 5.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 52 [1/1] (0.40ns)   --->   "%store_ln72 = store i32 %sum_4, i32 %sum_2" [lenet_support.cpp:72->lenet_main.cpp:43]   --->   Operation 52 'store' 'store_ln72' <Predicate = true> <Delay = 0.40>
ST_12 : Operation 53 [1/1] (0.00ns)   --->   "%br_ln72 = br void %for.inc.0.i" [lenet_support.cpp:72->lenet_main.cpp:43]   --->   Operation 53 'br' 'br_ln72' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 1.121ns
The critical path consists of the following:
	'alloca' operation ('j') [4]  (0.000 ns)
	'load' operation ('j', lenet_support.cpp:72->lenet_main.cpp:43) on local variable 'j' [9]  (0.000 ns)
	'add' operation ('add_ln72', lenet_support.cpp:72->lenet_main.cpp:43) [28]  (0.719 ns)
	'store' operation ('store_ln72', lenet_support.cpp:72->lenet_main.cpp:43) of variable 'add_ln72', lenet_support.cpp:72->lenet_main.cpp:43 on local variable 'j' [29]  (0.402 ns)

 <State 2>: 7.186ns
The critical path consists of the following:
	'load' operation ('pool2_output_load', lenet_support.cpp:74->lenet_main.cpp:43) on array 'pool2_output' [19]  (1.099 ns)
	multiplexor before operation 'fmul' with delay (0.796 ns)
'fmul' operation ('mul7_i', lenet_support.cpp:74->lenet_main.cpp:43) [20]  (5.291 ns)

 <State 3>: 6.087ns
The critical path consists of the following:
	'fmul' operation ('mul7_i', lenet_support.cpp:74->lenet_main.cpp:43) [20]  (6.087 ns)

 <State 4>: 6.087ns
The critical path consists of the following:
	'fmul' operation ('mul7_i', lenet_support.cpp:74->lenet_main.cpp:43) [20]  (6.087 ns)

 <State 5>: 6.087ns
The critical path consists of the following:
	'fmul' operation ('mul7_1_i', lenet_support.cpp:74->lenet_main.cpp:43) [26]  (6.087 ns)

 <State 6>: 5.714ns
The critical path consists of the following:
	'fadd' operation ('sum', lenet_support.cpp:74->lenet_main.cpp:43) [21]  (5.714 ns)

 <State 7>: 5.714ns
The critical path consists of the following:
	'fadd' operation ('sum', lenet_support.cpp:74->lenet_main.cpp:43) [21]  (5.714 ns)

 <State 8>: 5.714ns
The critical path consists of the following:
	'fadd' operation ('sum', lenet_support.cpp:74->lenet_main.cpp:43) [21]  (5.714 ns)

 <State 9>: 5.714ns
The critical path consists of the following:
	multiplexor before operation 'fadd' with delay (0.799 ns)
'fadd' operation ('sum', lenet_support.cpp:74->lenet_main.cpp:43) [27]  (4.915 ns)

 <State 10>: 5.714ns
The critical path consists of the following:
	'fadd' operation ('sum', lenet_support.cpp:74->lenet_main.cpp:43) [27]  (5.714 ns)

 <State 11>: 5.714ns
The critical path consists of the following:
	'fadd' operation ('sum', lenet_support.cpp:74->lenet_main.cpp:43) [27]  (5.714 ns)

 <State 12>: 6.116ns
The critical path consists of the following:
	'fadd' operation ('sum', lenet_support.cpp:74->lenet_main.cpp:43) [27]  (5.714 ns)
	'store' operation ('store_ln72', lenet_support.cpp:72->lenet_main.cpp:43) of variable 'sum', lenet_support.cpp:74->lenet_main.cpp:43 on local variable 'sum' [30]  (0.402 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
