

================================================================
== Vitis HLS Report for 'lenet_predict'
================================================================
* Date:           Thu Nov 21 22:03:11 2024

* Version:        2023.1 (Build 3854077 on May  4 2023)
* Project:        lenet_proj
* Solution:       lenet_predict (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu7ev-ffvf1517-3-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.427 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+---------+---------+---------+
    |  Latency (cycles) |   Latency (absolute)  |      Interval     | Pipeline|
    |   min   |   max   |    min    |    max    |   min   |   max   |   Type  |
    +---------+---------+-----------+-----------+---------+---------+---------+
    |  1233047|  1233047|  12.330 ms|  12.330 ms|  1233048|  1233048|       no|
    +---------+---------+-----------+-----------+---------+---------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_70_1  |   193560|   193560|      1613|          -|          -|   120|        no|
        |- VITIS_LOOP_70_1  |    41412|    41412|       493|          -|          -|    84|        no|
        |- VITIS_LOOP_70_1  |     3490|     3490|       349|          -|          -|    10|        no|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 44
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 17 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 9 
17 --> 18 25 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 17 
25 --> 26 33 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 25 
33 --> 34 
34 --> 35 
35 --> 36 
36 --> 37 
37 --> 38 
38 --> 39 
39 --> 40 
40 --> 41 
41 --> 42 
42 --> 43 
43 --> 44 
44 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 45 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (1.00ns)   --->   "%input_r_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %input_r"   --->   Operation 46 'read' 'input_r_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 122 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%i_023_loc = alloca i64 1"   --->   Operation 47 'alloca' 'i_023_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%sum_loc = alloca i64 1"   --->   Operation 48 'alloca' 'sum_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%max_1_loc = alloca i64 1"   --->   Operation 49 'alloca' 'max_1_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%sum_8_loc = alloca i64 1"   --->   Operation 50 'alloca' 'sum_8_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%sum_5_loc = alloca i64 1"   --->   Operation 51 'alloca' 'sum_5_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%sum_2_loc = alloca i64 1"   --->   Operation 52 'alloca' 'sum_2_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%conv1_output = alloca i64 1"   --->   Operation 53 'alloca' 'conv1_output' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%pool1_output = alloca i64 1" [lenet_main.cpp:32]   --->   Operation 54 'alloca' 'pool1_output' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%conv2_output = alloca i64 1"   --->   Operation 55 'alloca' 'conv2_output' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%pool2_output = alloca i64 1" [lenet_main.cpp:34]   --->   Operation 56 'alloca' 'pool2_output' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%fc1_output = alloca i64 1" [lenet_main.cpp:35]   --->   Operation 57 'alloca' 'fc1_output' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 120> <RAM>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%fc2_output = alloca i64 1" [lenet_main.cpp:36]   --->   Operation 58 'alloca' 'fc2_output' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 84> <RAM>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%fc3_output = alloca i64 1" [lenet_main.cpp:37]   --->   Operation 59 'alloca' 'fc3_output' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.61> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_1 : Operation 60 [2/2] (0.00ns)   --->   "%call_ln39 = call void @conv2d.3, i32 %gmem, i64 %input_r_read, i32 %conv1_output" [lenet_main.cpp:39]   --->   Operation 60 'call' 'call_ln39' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 61 [1/1] (0.40ns)   --->   "%store_ln70 = store i7 0, i7 %i" [lenet_support.cpp:70->lenet_main.cpp:43]   --->   Operation 61 'store' 'store_ln70' <Predicate = true> <Delay = 0.40>

State 2 <SV = 1> <Delay = 0.00>
ST_2 : Operation 62 [1/2] (0.00ns)   --->   "%call_ln39 = call void @conv2d.3, i32 %gmem, i64 %input_r_read, i32 %conv1_output" [lenet_main.cpp:39]   --->   Operation 62 'call' 'call_ln39' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 3 <SV = 2> <Delay = 0.00>
ST_3 : Operation 63 [2/2] (0.00ns)   --->   "%call_ln0 = call void @lenet_predict_Pipeline_VITIS_LOOP_52_1_VITIS_LOOP_53_2, i32 %conv1_output, i32 %pool1_output"   --->   Operation 63 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 4 <SV = 3> <Delay = 0.00>
ST_4 : Operation 64 [1/2] (0.00ns)   --->   "%call_ln0 = call void @lenet_predict_Pipeline_VITIS_LOOP_52_1_VITIS_LOOP_53_2, i32 %conv1_output, i32 %pool1_output"   --->   Operation 64 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 5 <SV = 4> <Delay = 0.00>
ST_5 : Operation 65 [2/2] (0.00ns)   --->   "%call_ln41 = call void @conv2d, i32 %pool1_output, i32 %conv2_output" [lenet_main.cpp:41]   --->   Operation 65 'call' 'call_ln41' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 6 <SV = 5> <Delay = 0.00>
ST_6 : Operation 66 [1/2] (0.00ns)   --->   "%call_ln41 = call void @conv2d, i32 %pool1_output, i32 %conv2_output" [lenet_main.cpp:41]   --->   Operation 66 'call' 'call_ln41' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 7 <SV = 6> <Delay = 0.00>
ST_7 : Operation 67 [2/2] (0.00ns)   --->   "%call_ln0 = call void @lenet_predict_Pipeline_VITIS_LOOP_52_1_VITIS_LOOP_53_22, i32 %conv2_output, i32 %pool2_output"   --->   Operation 67 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 8 <SV = 7> <Delay = 0.00>
ST_8 : Operation 68 [1/1] (0.00ns)   --->   "%spectopmodule_ln13 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_9" [lenet_main.cpp:13]   --->   Operation 68 'spectopmodule' 'spectopmodule_ln13' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 69 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %gmem, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_2, void @empty_0, i32 16, i32 16, i32 16, i32 16, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 69 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 70 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %gmem"   --->   Operation 70 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 71 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %input_r, void @empty_3, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_4, void @empty_5, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_6, i32 4294967295, i32 0"   --->   Operation 71 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 72 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %input_r, void @empty_7, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_6, i32 4294967295, i32 0"   --->   Operation 72 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 73 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %predicted_class"   --->   Operation 73 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 74 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %predicted_class, void @empty_3, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_8, void @empty_5, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 74 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 75 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %predicted_class, void @empty_7, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 75 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 76 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 0, void @empty_3, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_8, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 76 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 77 [1/2] (0.00ns)   --->   "%call_ln0 = call void @lenet_predict_Pipeline_VITIS_LOOP_52_1_VITIS_LOOP_53_22, i32 %conv2_output, i32 %pool2_output"   --->   Operation 77 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 78 [1/1] (0.00ns)   --->   "%br_ln70 = br void %VITIS_LOOP_72_2.i" [lenet_support.cpp:70->lenet_main.cpp:43]   --->   Operation 78 'br' 'br_ln70' <Predicate = true> <Delay = 0.00>

State 9 <SV = 8> <Delay = 1.10>
ST_9 : Operation 79 [1/1] (0.00ns)   --->   "%i_6 = load i7 %i" [lenet_support.cpp:70->lenet_main.cpp:43]   --->   Operation 79 'load' 'i_6' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 80 [1/1] (0.70ns)   --->   "%icmp_ln70 = icmp_eq  i7 %i_6, i7 120" [lenet_support.cpp:70->lenet_main.cpp:43]   --->   Operation 80 'icmp' 'icmp_ln70' <Predicate = true> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 81 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 120, i64 120, i64 120"   --->   Operation 81 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 82 [1/1] (0.70ns)   --->   "%add_ln70 = add i7 %i_6, i7 1" [lenet_support.cpp:70->lenet_main.cpp:43]   --->   Operation 82 'add' 'add_ln70' <Predicate = true> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 83 [1/1] (0.00ns)   --->   "%br_ln70 = br i1 %icmp_ln70, void %VITIS_LOOP_72_2.split.i, void %VITIS_LOOP_72_2.i21.preheader" [lenet_support.cpp:70->lenet_main.cpp:43]   --->   Operation 83 'br' 'br_ln70' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 84 [2/2] (0.00ns)   --->   "%call_ln0 = call void @lenet_predict_Pipeline_VITIS_LOOP_72_2, i32 %pool2_output, i32 %sum_2_loc"   --->   Operation 84 'call' 'call_ln0' <Predicate = (!icmp_ln70)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_9 : Operation 85 [1/1] (0.40ns)   --->   "%store_ln70 = store i7 %add_ln70, i7 %i" [lenet_support.cpp:70->lenet_main.cpp:43]   --->   Operation 85 'store' 'store_ln70' <Predicate = (!icmp_ln70)> <Delay = 0.40>
ST_9 : Operation 86 [1/1] (0.00ns)   --->   "%i_5 = alloca i32 1"   --->   Operation 86 'alloca' 'i_5' <Predicate = (icmp_ln70)> <Delay = 0.00>
ST_9 : Operation 87 [1/1] (0.40ns)   --->   "%store_ln70 = store i7 0, i7 %i_5" [lenet_support.cpp:70->lenet_main.cpp:44]   --->   Operation 87 'store' 'store_ln70' <Predicate = (icmp_ln70)> <Delay = 0.40>
ST_9 : Operation 88 [1/1] (0.00ns)   --->   "%br_ln70 = br void %VITIS_LOOP_72_2.i21" [lenet_support.cpp:70->lenet_main.cpp:44]   --->   Operation 88 'br' 'br_ln70' <Predicate = (icmp_ln70)> <Delay = 0.00>

State 10 <SV = 9> <Delay = 0.00>
ST_10 : Operation 89 [1/2] (0.00ns)   --->   "%call_ln0 = call void @lenet_predict_Pipeline_VITIS_LOOP_72_2, i32 %pool2_output, i32 %sum_2_loc"   --->   Operation 89 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 11 <SV = 10> <Delay = 5.71>
ST_11 : Operation 90 [1/1] (0.00ns)   --->   "%sum_2_loc_load = load i32 %sum_2_loc"   --->   Operation 90 'load' 'sum_2_loc_load' <Predicate = true> <Delay = 0.00>
ST_11 : [1/1] (0.79ns)   --->   Input mux for Operation 91 '%x_assign_1 = fadd i32 %sum_2_loc_load, i32 0'
ST_11 : Operation 91 [4/4] (4.91ns)   --->   "%x_assign_1 = fadd i32 %sum_2_loc_load, i32 0" [lenet_support.cpp:76->lenet_main.cpp:43]   --->   Operation 91 'fadd' 'x_assign_1' <Predicate = true> <Delay = 4.91> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 5.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 5.71>
ST_12 : Operation 92 [3/4] (5.71ns)   --->   "%x_assign_1 = fadd i32 %sum_2_loc_load, i32 0" [lenet_support.cpp:76->lenet_main.cpp:43]   --->   Operation 92 'fadd' 'x_assign_1' <Predicate = true> <Delay = 5.71> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 5.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 13 <SV = 12> <Delay = 5.71>
ST_13 : Operation 93 [2/4] (5.71ns)   --->   "%x_assign_1 = fadd i32 %sum_2_loc_load, i32 0" [lenet_support.cpp:76->lenet_main.cpp:43]   --->   Operation 93 'fadd' 'x_assign_1' <Predicate = true> <Delay = 5.71> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 5.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 13> <Delay = 5.71>
ST_14 : Operation 94 [1/4] (5.71ns)   --->   "%x_assign_1 = fadd i32 %sum_2_loc_load, i32 0" [lenet_support.cpp:76->lenet_main.cpp:43]   --->   Operation 94 'fadd' 'x_assign_1' <Predicate = true> <Delay = 5.71> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 5.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 14> <Delay = 2.57>
ST_15 : [1/1] (0.71ns)   --->   Input mux for Operation 95 '%tmp_17 = fcmp_ogt  i32 %x_assign_1, i32 0'
ST_15 : Operation 95 [2/2] (1.85ns)   --->   "%tmp_17 = fcmp_ogt  i32 %x_assign_1, i32 0" [lenet_support.cpp:6->lenet_support.cpp:76->lenet_main.cpp:43]   --->   Operation 95 'fcmp' 'tmp_17' <Predicate = true> <Delay = 1.85> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.57> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 16 <SV = 15> <Delay = 4.08>
ST_16 : Operation 96 [1/1] (0.00ns)   --->   "%zext_ln70 = zext i7 %i_6" [lenet_support.cpp:70->lenet_main.cpp:43]   --->   Operation 96 'zext' 'zext_ln70' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 97 [1/1] (0.00ns)   --->   "%specloopname_ln70 = specloopname void @_ssdm_op_SpecLoopName, void @empty_18" [lenet_support.cpp:70->lenet_main.cpp:43]   --->   Operation 97 'specloopname' 'specloopname_ln70' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 98 [1/1] (0.00ns)   --->   "%bitcast_ln6 = bitcast i32 %x_assign_1" [lenet_support.cpp:6->lenet_support.cpp:76->lenet_main.cpp:43]   --->   Operation 98 'bitcast' 'bitcast_ln6' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 99 [1/1] (0.00ns)   --->   "%tmp_s = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln6, i32 23, i32 30" [lenet_support.cpp:6->lenet_support.cpp:76->lenet_main.cpp:43]   --->   Operation 99 'partselect' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 100 [1/1] (0.00ns)   --->   "%trunc_ln6 = trunc i32 %bitcast_ln6" [lenet_support.cpp:6->lenet_support.cpp:76->lenet_main.cpp:43]   --->   Operation 100 'trunc' 'trunc_ln6' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 101 [1/1] (0.70ns)   --->   "%icmp_ln6 = icmp_ne  i8 %tmp_s, i8 255" [lenet_support.cpp:6->lenet_support.cpp:76->lenet_main.cpp:43]   --->   Operation 101 'icmp' 'icmp_ln6' <Predicate = true> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 102 [1/1] (0.88ns)   --->   "%icmp_ln6_1 = icmp_eq  i23 %trunc_ln6, i23 0" [lenet_support.cpp:6->lenet_support.cpp:76->lenet_main.cpp:43]   --->   Operation 102 'icmp' 'icmp_ln6_1' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 103 [1/1] (0.00ns) (grouped into LUT with out node select_ln6)   --->   "%or_ln6 = or i1 %icmp_ln6_1, i1 %icmp_ln6" [lenet_support.cpp:6->lenet_support.cpp:76->lenet_main.cpp:43]   --->   Operation 103 'or' 'or_ln6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 104 [1/2] (2.57ns)   --->   "%tmp_17 = fcmp_ogt  i32 %x_assign_1, i32 0" [lenet_support.cpp:6->lenet_support.cpp:76->lenet_main.cpp:43]   --->   Operation 104 'fcmp' 'tmp_17' <Predicate = true> <Delay = 2.57> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.57> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 105 [1/1] (0.00ns) (grouped into LUT with out node select_ln6)   --->   "%and_ln6 = and i1 %or_ln6, i1 %tmp_17" [lenet_support.cpp:6->lenet_support.cpp:76->lenet_main.cpp:43]   --->   Operation 105 'and' 'and_ln6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 106 [1/1] (0.41ns) (out node of the LUT)   --->   "%select_ln6 = select i1 %and_ln6, i32 %x_assign_1, i32 0" [lenet_support.cpp:6->lenet_support.cpp:76->lenet_main.cpp:43]   --->   Operation 106 'select' 'select_ln6' <Predicate = true> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_16 : Operation 107 [1/1] (0.00ns)   --->   "%fc1_output_addr = getelementptr i32 %fc1_output, i64 0, i64 %zext_ln70" [lenet_support.cpp:76->lenet_main.cpp:43]   --->   Operation 107 'getelementptr' 'fc1_output_addr' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 108 [1/1] (1.09ns)   --->   "%store_ln76 = store i32 %select_ln6, i7 %fc1_output_addr" [lenet_support.cpp:76->lenet_main.cpp:43]   --->   Operation 108 'store' 'store_ln76' <Predicate = true> <Delay = 1.09> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 120> <RAM>
ST_16 : Operation 109 [1/1] (0.00ns)   --->   "%br_ln70 = br void %VITIS_LOOP_72_2.i" [lenet_support.cpp:70->lenet_main.cpp:43]   --->   Operation 109 'br' 'br_ln70' <Predicate = true> <Delay = 0.00>

State 17 <SV = 9> <Delay = 1.10>
ST_17 : Operation 110 [1/1] (0.00ns)   --->   "%i_8 = load i7 %i_5" [lenet_support.cpp:70->lenet_main.cpp:44]   --->   Operation 110 'load' 'i_8' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 111 [1/1] (0.70ns)   --->   "%icmp_ln70_1 = icmp_eq  i7 %i_8, i7 84" [lenet_support.cpp:70->lenet_main.cpp:44]   --->   Operation 111 'icmp' 'icmp_ln70_1' <Predicate = true> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 112 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 84, i64 84, i64 84"   --->   Operation 112 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 113 [1/1] (0.70ns)   --->   "%add_ln70_1 = add i7 %i_8, i7 1" [lenet_support.cpp:70->lenet_main.cpp:44]   --->   Operation 113 'add' 'add_ln70_1' <Predicate = true> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 114 [1/1] (0.00ns)   --->   "%br_ln70 = br i1 %icmp_ln70_1, void %VITIS_LOOP_72_2.split.i22, void %fully_connected.1.exit" [lenet_support.cpp:70->lenet_main.cpp:44]   --->   Operation 114 'br' 'br_ln70' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 115 [2/2] (0.00ns)   --->   "%call_ln0 = call void @lenet_predict_Pipeline_VITIS_LOOP_72_23, i32 %fc1_output, i32 %sum_5_loc"   --->   Operation 115 'call' 'call_ln0' <Predicate = (!icmp_ln70_1)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_17 : Operation 116 [1/1] (0.40ns)   --->   "%store_ln70 = store i7 %add_ln70_1, i7 %i_5" [lenet_support.cpp:70->lenet_main.cpp:44]   --->   Operation 116 'store' 'store_ln70' <Predicate = (!icmp_ln70_1)> <Delay = 0.40>
ST_17 : Operation 117 [1/1] (0.00ns)   --->   "%i_7 = alloca i32 1"   --->   Operation 117 'alloca' 'i_7' <Predicate = (icmp_ln70_1)> <Delay = 0.00>
ST_17 : Operation 118 [1/1] (0.00ns)   --->   "%fc3_output_addr = getelementptr i32 %fc3_output, i64 0, i64 0" [lenet_main.cpp:45]   --->   Operation 118 'getelementptr' 'fc3_output_addr' <Predicate = (icmp_ln70_1)> <Delay = 0.00>
ST_17 : Operation 119 [1/1] (0.40ns)   --->   "%store_ln70 = store i4 0, i4 %i_7" [lenet_support.cpp:70->lenet_main.cpp:45]   --->   Operation 119 'store' 'store_ln70' <Predicate = (icmp_ln70_1)> <Delay = 0.40>
ST_17 : Operation 120 [1/1] (0.00ns)   --->   "%br_ln70 = br void %VITIS_LOOP_72_2.i42" [lenet_support.cpp:70->lenet_main.cpp:45]   --->   Operation 120 'br' 'br_ln70' <Predicate = (icmp_ln70_1)> <Delay = 0.00>

State 18 <SV = 10> <Delay = 0.00>
ST_18 : Operation 121 [1/2] (0.00ns)   --->   "%call_ln0 = call void @lenet_predict_Pipeline_VITIS_LOOP_72_23, i32 %fc1_output, i32 %sum_5_loc"   --->   Operation 121 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 19 <SV = 11> <Delay = 5.71>
ST_19 : Operation 122 [1/1] (0.00ns)   --->   "%sum_5_loc_load = load i32 %sum_5_loc"   --->   Operation 122 'load' 'sum_5_loc_load' <Predicate = true> <Delay = 0.00>
ST_19 : [1/1] (0.79ns)   --->   Input mux for Operation 123 '%x_assign_2 = fadd i32 %sum_5_loc_load, i32 0'
ST_19 : Operation 123 [4/4] (4.91ns)   --->   "%x_assign_2 = fadd i32 %sum_5_loc_load, i32 0" [lenet_support.cpp:76->lenet_main.cpp:44]   --->   Operation 123 'fadd' 'x_assign_2' <Predicate = true> <Delay = 4.91> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 5.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 20 <SV = 12> <Delay = 5.71>
ST_20 : Operation 124 [3/4] (5.71ns)   --->   "%x_assign_2 = fadd i32 %sum_5_loc_load, i32 0" [lenet_support.cpp:76->lenet_main.cpp:44]   --->   Operation 124 'fadd' 'x_assign_2' <Predicate = true> <Delay = 5.71> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 5.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 21 <SV = 13> <Delay = 5.71>
ST_21 : Operation 125 [2/4] (5.71ns)   --->   "%x_assign_2 = fadd i32 %sum_5_loc_load, i32 0" [lenet_support.cpp:76->lenet_main.cpp:44]   --->   Operation 125 'fadd' 'x_assign_2' <Predicate = true> <Delay = 5.71> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 5.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 22 <SV = 14> <Delay = 5.71>
ST_22 : Operation 126 [1/4] (5.71ns)   --->   "%x_assign_2 = fadd i32 %sum_5_loc_load, i32 0" [lenet_support.cpp:76->lenet_main.cpp:44]   --->   Operation 126 'fadd' 'x_assign_2' <Predicate = true> <Delay = 5.71> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 5.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 23 <SV = 15> <Delay = 2.57>
ST_23 : [1/1] (0.71ns)   --->   Input mux for Operation 127 '%tmp_19 = fcmp_ogt  i32 %x_assign_2, i32 0'
ST_23 : Operation 127 [2/2] (1.85ns)   --->   "%tmp_19 = fcmp_ogt  i32 %x_assign_2, i32 0" [lenet_support.cpp:6->lenet_support.cpp:76->lenet_main.cpp:44]   --->   Operation 127 'fcmp' 'tmp_19' <Predicate = true> <Delay = 1.85> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.57> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 24 <SV = 16> <Delay = 4.08>
ST_24 : Operation 128 [1/1] (0.00ns)   --->   "%zext_ln70_1 = zext i7 %i_8" [lenet_support.cpp:70->lenet_main.cpp:44]   --->   Operation 128 'zext' 'zext_ln70_1' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 129 [1/1] (0.00ns)   --->   "%specloopname_ln70 = specloopname void @_ssdm_op_SpecLoopName, void @empty_18" [lenet_support.cpp:70->lenet_main.cpp:44]   --->   Operation 129 'specloopname' 'specloopname_ln70' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 130 [1/1] (0.00ns)   --->   "%bitcast_ln6_1 = bitcast i32 %x_assign_2" [lenet_support.cpp:6->lenet_support.cpp:76->lenet_main.cpp:44]   --->   Operation 130 'bitcast' 'bitcast_ln6_1' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 131 [1/1] (0.00ns)   --->   "%tmp_18 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln6_1, i32 23, i32 30" [lenet_support.cpp:6->lenet_support.cpp:76->lenet_main.cpp:44]   --->   Operation 131 'partselect' 'tmp_18' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 132 [1/1] (0.00ns)   --->   "%trunc_ln6_1 = trunc i32 %bitcast_ln6_1" [lenet_support.cpp:6->lenet_support.cpp:76->lenet_main.cpp:44]   --->   Operation 132 'trunc' 'trunc_ln6_1' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 133 [1/1] (0.70ns)   --->   "%icmp_ln6_2 = icmp_ne  i8 %tmp_18, i8 255" [lenet_support.cpp:6->lenet_support.cpp:76->lenet_main.cpp:44]   --->   Operation 133 'icmp' 'icmp_ln6_2' <Predicate = true> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 134 [1/1] (0.88ns)   --->   "%icmp_ln6_3 = icmp_eq  i23 %trunc_ln6_1, i23 0" [lenet_support.cpp:6->lenet_support.cpp:76->lenet_main.cpp:44]   --->   Operation 134 'icmp' 'icmp_ln6_3' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 135 [1/1] (0.00ns) (grouped into LUT with out node select_ln6_1)   --->   "%or_ln6_1 = or i1 %icmp_ln6_3, i1 %icmp_ln6_2" [lenet_support.cpp:6->lenet_support.cpp:76->lenet_main.cpp:44]   --->   Operation 135 'or' 'or_ln6_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 136 [1/2] (2.57ns)   --->   "%tmp_19 = fcmp_ogt  i32 %x_assign_2, i32 0" [lenet_support.cpp:6->lenet_support.cpp:76->lenet_main.cpp:44]   --->   Operation 136 'fcmp' 'tmp_19' <Predicate = true> <Delay = 2.57> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.57> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 137 [1/1] (0.00ns) (grouped into LUT with out node select_ln6_1)   --->   "%and_ln6_1 = and i1 %or_ln6_1, i1 %tmp_19" [lenet_support.cpp:6->lenet_support.cpp:76->lenet_main.cpp:44]   --->   Operation 137 'and' 'and_ln6_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 138 [1/1] (0.41ns) (out node of the LUT)   --->   "%select_ln6_1 = select i1 %and_ln6_1, i32 %x_assign_2, i32 0" [lenet_support.cpp:6->lenet_support.cpp:76->lenet_main.cpp:44]   --->   Operation 138 'select' 'select_ln6_1' <Predicate = true> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 139 [1/1] (0.00ns)   --->   "%fc2_output_addr = getelementptr i32 %fc2_output, i64 0, i64 %zext_ln70_1" [lenet_support.cpp:76->lenet_main.cpp:44]   --->   Operation 139 'getelementptr' 'fc2_output_addr' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 140 [1/1] (1.09ns)   --->   "%store_ln76 = store i32 %select_ln6_1, i7 %fc2_output_addr" [lenet_support.cpp:76->lenet_main.cpp:44]   --->   Operation 140 'store' 'store_ln76' <Predicate = true> <Delay = 1.09> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 84> <RAM>
ST_24 : Operation 141 [1/1] (0.00ns)   --->   "%br_ln70 = br void %VITIS_LOOP_72_2.i21" [lenet_support.cpp:70->lenet_main.cpp:44]   --->   Operation 141 'br' 'br_ln70' <Predicate = true> <Delay = 0.00>

State 25 <SV = 10> <Delay = 1.12>
ST_25 : Operation 142 [1/1] (0.00ns)   --->   "%i_9 = load i4 %i_7" [lenet_support.cpp:70->lenet_main.cpp:45]   --->   Operation 142 'load' 'i_9' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 143 [1/1] (0.72ns)   --->   "%icmp_ln70_2 = icmp_eq  i4 %i_9, i4 10" [lenet_support.cpp:70->lenet_main.cpp:45]   --->   Operation 143 'icmp' 'icmp_ln70_2' <Predicate = true> <Delay = 0.72> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 144 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 10, i64 10, i64 10"   --->   Operation 144 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 145 [1/1] (0.72ns)   --->   "%add_ln70_2 = add i4 %i_9, i4 1" [lenet_support.cpp:70->lenet_main.cpp:45]   --->   Operation 145 'add' 'add_ln70_2' <Predicate = true> <Delay = 0.72> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 146 [1/1] (0.00ns)   --->   "%br_ln70 = br i1 %icmp_ln70_2, void %VITIS_LOOP_72_2.split.i43, void %fully_connected.2.exit" [lenet_support.cpp:70->lenet_main.cpp:45]   --->   Operation 146 'br' 'br_ln70' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 147 [2/2] (0.00ns)   --->   "%call_ln0 = call void @lenet_predict_Pipeline_VITIS_LOOP_72_24, i32 %fc2_output, i32 %sum_8_loc"   --->   Operation 147 'call' 'call_ln0' <Predicate = (!icmp_ln70_2)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_25 : Operation 148 [1/1] (0.40ns)   --->   "%store_ln70 = store i4 %add_ln70_2, i4 %i_7" [lenet_support.cpp:70->lenet_main.cpp:45]   --->   Operation 148 'store' 'store_ln70' <Predicate = (!icmp_ln70_2)> <Delay = 0.40>
ST_25 : Operation 149 [2/2] (0.61ns)   --->   "%max = load i4 %fc3_output_addr" [lenet_support.cpp:11->lenet_main.cpp:47]   --->   Operation 149 'load' 'max' <Predicate = (icmp_ln70_2)> <Delay = 0.61> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.61> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>

State 26 <SV = 11> <Delay = 0.00>
ST_26 : Operation 150 [1/2] (0.00ns)   --->   "%call_ln0 = call void @lenet_predict_Pipeline_VITIS_LOOP_72_24, i32 %fc2_output, i32 %sum_8_loc"   --->   Operation 150 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 27 <SV = 12> <Delay = 5.71>
ST_27 : Operation 151 [1/1] (0.00ns)   --->   "%sum_8_loc_load = load i32 %sum_8_loc"   --->   Operation 151 'load' 'sum_8_loc_load' <Predicate = true> <Delay = 0.00>
ST_27 : [1/1] (0.79ns)   --->   Input mux for Operation 152 '%x_assign_3 = fadd i32 %sum_8_loc_load, i32 0'
ST_27 : Operation 152 [4/4] (4.91ns)   --->   "%x_assign_3 = fadd i32 %sum_8_loc_load, i32 0" [lenet_support.cpp:76->lenet_main.cpp:45]   --->   Operation 152 'fadd' 'x_assign_3' <Predicate = true> <Delay = 4.91> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 5.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 28 <SV = 13> <Delay = 5.71>
ST_28 : Operation 153 [3/4] (5.71ns)   --->   "%x_assign_3 = fadd i32 %sum_8_loc_load, i32 0" [lenet_support.cpp:76->lenet_main.cpp:45]   --->   Operation 153 'fadd' 'x_assign_3' <Predicate = true> <Delay = 5.71> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 5.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 29 <SV = 14> <Delay = 5.71>
ST_29 : Operation 154 [2/4] (5.71ns)   --->   "%x_assign_3 = fadd i32 %sum_8_loc_load, i32 0" [lenet_support.cpp:76->lenet_main.cpp:45]   --->   Operation 154 'fadd' 'x_assign_3' <Predicate = true> <Delay = 5.71> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 5.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 30 <SV = 15> <Delay = 5.71>
ST_30 : Operation 155 [1/4] (5.71ns)   --->   "%x_assign_3 = fadd i32 %sum_8_loc_load, i32 0" [lenet_support.cpp:76->lenet_main.cpp:45]   --->   Operation 155 'fadd' 'x_assign_3' <Predicate = true> <Delay = 5.71> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 5.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 31 <SV = 16> <Delay = 2.57>
ST_31 : [1/1] (0.71ns)   --->   Input mux for Operation 156 '%tmp_21 = fcmp_ogt  i32 %x_assign_3, i32 0'
ST_31 : Operation 156 [2/2] (1.85ns)   --->   "%tmp_21 = fcmp_ogt  i32 %x_assign_3, i32 0" [lenet_support.cpp:6->lenet_support.cpp:76->lenet_main.cpp:45]   --->   Operation 156 'fcmp' 'tmp_21' <Predicate = true> <Delay = 1.85> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.57> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 32 <SV = 17> <Delay = 3.60>
ST_32 : Operation 157 [1/1] (0.00ns)   --->   "%zext_ln70_2 = zext i4 %i_9" [lenet_support.cpp:70->lenet_main.cpp:45]   --->   Operation 157 'zext' 'zext_ln70_2' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 158 [1/1] (0.00ns)   --->   "%specloopname_ln70 = specloopname void @_ssdm_op_SpecLoopName, void @empty_18" [lenet_support.cpp:70->lenet_main.cpp:45]   --->   Operation 158 'specloopname' 'specloopname_ln70' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 159 [1/1] (0.00ns)   --->   "%bitcast_ln6_2 = bitcast i32 %x_assign_3" [lenet_support.cpp:6->lenet_support.cpp:76->lenet_main.cpp:45]   --->   Operation 159 'bitcast' 'bitcast_ln6_2' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 160 [1/1] (0.00ns)   --->   "%tmp_20 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln6_2, i32 23, i32 30" [lenet_support.cpp:6->lenet_support.cpp:76->lenet_main.cpp:45]   --->   Operation 160 'partselect' 'tmp_20' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 161 [1/1] (0.00ns)   --->   "%trunc_ln6_2 = trunc i32 %bitcast_ln6_2" [lenet_support.cpp:6->lenet_support.cpp:76->lenet_main.cpp:45]   --->   Operation 161 'trunc' 'trunc_ln6_2' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 162 [1/1] (0.70ns)   --->   "%icmp_ln6_4 = icmp_ne  i8 %tmp_20, i8 255" [lenet_support.cpp:6->lenet_support.cpp:76->lenet_main.cpp:45]   --->   Operation 162 'icmp' 'icmp_ln6_4' <Predicate = true> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 163 [1/1] (0.88ns)   --->   "%icmp_ln6_5 = icmp_eq  i23 %trunc_ln6_2, i23 0" [lenet_support.cpp:6->lenet_support.cpp:76->lenet_main.cpp:45]   --->   Operation 163 'icmp' 'icmp_ln6_5' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 164 [1/1] (0.00ns) (grouped into LUT with out node select_ln6_2)   --->   "%or_ln6_2 = or i1 %icmp_ln6_5, i1 %icmp_ln6_4" [lenet_support.cpp:6->lenet_support.cpp:76->lenet_main.cpp:45]   --->   Operation 164 'or' 'or_ln6_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 165 [1/2] (2.57ns)   --->   "%tmp_21 = fcmp_ogt  i32 %x_assign_3, i32 0" [lenet_support.cpp:6->lenet_support.cpp:76->lenet_main.cpp:45]   --->   Operation 165 'fcmp' 'tmp_21' <Predicate = true> <Delay = 2.57> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.57> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 166 [1/1] (0.00ns) (grouped into LUT with out node select_ln6_2)   --->   "%and_ln6_2 = and i1 %or_ln6_2, i1 %tmp_21" [lenet_support.cpp:6->lenet_support.cpp:76->lenet_main.cpp:45]   --->   Operation 166 'and' 'and_ln6_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 167 [1/1] (0.41ns) (out node of the LUT)   --->   "%select_ln6_2 = select i1 %and_ln6_2, i32 %x_assign_3, i32 0" [lenet_support.cpp:6->lenet_support.cpp:76->lenet_main.cpp:45]   --->   Operation 167 'select' 'select_ln6_2' <Predicate = true> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_32 : Operation 168 [1/1] (0.00ns)   --->   "%fc3_output_addr_1 = getelementptr i32 %fc3_output, i64 0, i64 %zext_ln70_2" [lenet_support.cpp:76->lenet_main.cpp:45]   --->   Operation 168 'getelementptr' 'fc3_output_addr_1' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 169 [1/1] (0.61ns)   --->   "%store_ln76 = store i32 %select_ln6_2, i4 %fc3_output_addr_1" [lenet_support.cpp:76->lenet_main.cpp:45]   --->   Operation 169 'store' 'store_ln76' <Predicate = true> <Delay = 0.61> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.61> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_32 : Operation 170 [1/1] (0.00ns)   --->   "%br_ln70 = br void %VITIS_LOOP_72_2.i42" [lenet_support.cpp:70->lenet_main.cpp:45]   --->   Operation 170 'br' 'br_ln70' <Predicate = true> <Delay = 0.00>

State 33 <SV = 11> <Delay = 0.61>
ST_33 : Operation 171 [1/2] (0.61ns)   --->   "%max = load i4 %fc3_output_addr" [lenet_support.cpp:11->lenet_main.cpp:47]   --->   Operation 171 'load' 'max' <Predicate = true> <Delay = 0.61> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.61> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>

State 34 <SV = 12> <Delay = 0.40>
ST_34 : Operation 172 [2/2] (0.40ns)   --->   "%call_ln11 = call void @lenet_predict_Pipeline_VITIS_LOOP_12_1, i32 %max, i32 %fc3_output, i32 %max_1_loc" [lenet_support.cpp:11->lenet_main.cpp:47]   --->   Operation 172 'call' 'call_ln11' <Predicate = true> <Delay = 0.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 35 <SV = 13> <Delay = 0.00>
ST_35 : Operation 173 [1/2] (0.00ns)   --->   "%call_ln11 = call void @lenet_predict_Pipeline_VITIS_LOOP_12_1, i32 %max, i32 %fc3_output, i32 %max_1_loc" [lenet_support.cpp:11->lenet_main.cpp:47]   --->   Operation 173 'call' 'call_ln11' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 36 <SV = 14> <Delay = 0.00>
ST_36 : Operation 174 [1/1] (0.00ns)   --->   "%max_1_loc_load = load i32 %max_1_loc"   --->   Operation 174 'load' 'max_1_loc_load' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 175 [2/2] (0.00ns)   --->   "%call_ln0 = call void @lenet_predict_Pipeline_VITIS_LOOP_16_2, i32 %fc3_output, i32 %max_1_loc_load, i32 %sum_loc"   --->   Operation 175 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 37 <SV = 15> <Delay = 0.00>
ST_37 : Operation 176 [1/2] (0.00ns)   --->   "%call_ln0 = call void @lenet_predict_Pipeline_VITIS_LOOP_16_2, i32 %fc3_output, i32 %max_1_loc_load, i32 %sum_loc"   --->   Operation 176 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 38 <SV = 16> <Delay = 0.00>
ST_38 : Operation 177 [1/1] (0.00ns)   --->   "%sum_loc_load = load i32 %sum_loc"   --->   Operation 177 'load' 'sum_loc_load' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 178 [2/2] (0.00ns)   --->   "%call_ln0 = call void @lenet_predict_Pipeline_VITIS_LOOP_20_3, i32 %fc3_output, i32 %sum_loc_load"   --->   Operation 178 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 39 <SV = 17> <Delay = 0.00>
ST_39 : Operation 179 [1/2] (0.00ns)   --->   "%call_ln0 = call void @lenet_predict_Pipeline_VITIS_LOOP_20_3, i32 %fc3_output, i32 %sum_loc_load"   --->   Operation 179 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 40 <SV = 18> <Delay = 0.61>
ST_40 : Operation 180 [2/2] (0.61ns)   --->   "%max_prob = load i4 %fc3_output_addr" [lenet_main.cpp:50]   --->   Operation 180 'load' 'max_prob' <Predicate = true> <Delay = 0.61> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.61> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>

State 41 <SV = 19> <Delay = 0.61>
ST_41 : Operation 181 [1/2] (0.61ns)   --->   "%max_prob = load i4 %fc3_output_addr" [lenet_main.cpp:50]   --->   Operation 181 'load' 'max_prob' <Predicate = true> <Delay = 0.61> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.61> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>

State 42 <SV = 20> <Delay = 0.40>
ST_42 : Operation 182 [2/2] (0.40ns)   --->   "%call_ln50 = call void @lenet_predict_Pipeline_VITIS_LOOP_51_1, i32 %max_prob, i32 %fc3_output, i32 %i_023_loc" [lenet_main.cpp:50]   --->   Operation 182 'call' 'call_ln50' <Predicate = true> <Delay = 0.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 43 <SV = 21> <Delay = 0.00>
ST_43 : Operation 183 [1/2] (0.00ns)   --->   "%call_ln50 = call void @lenet_predict_Pipeline_VITIS_LOOP_51_1, i32 %max_prob, i32 %fc3_output, i32 %i_023_loc" [lenet_main.cpp:50]   --->   Operation 183 'call' 'call_ln50' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 44 <SV = 22> <Delay = 1.00>
ST_44 : Operation 184 [1/1] (0.00ns)   --->   "%i_023_loc_load = load i32 %i_023_loc"   --->   Operation 184 'load' 'i_023_loc_load' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 185 [1/1] (1.00ns)   --->   "%write_ln54 = write void @_ssdm_op_Write.s_axilite.i32P0A, i32 %predicted_class, i32 %i_023_loc_load" [lenet_main.cpp:54]   --->   Operation 185 'write' 'write_ln54' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 122 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_44 : Operation 186 [1/1] (0.00ns)   --->   "%ret_ln57 = ret" [lenet_main.cpp:57]   --->   Operation 186 'ret' 'ret_ln57' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 1.000ns
The critical path consists of the following:
	s_axi read operation ('input_r_read') on port 'input_r' [5]  (1.000 ns)

 <State 2>: 0.000ns
The critical path consists of the following:

 <State 3>: 0.000ns
The critical path consists of the following:

 <State 4>: 0.000ns
The critical path consists of the following:

 <State 5>: 0.000ns
The critical path consists of the following:

 <State 6>: 0.000ns
The critical path consists of the following:

 <State 7>: 0.000ns
The critical path consists of the following:

 <State 8>: 0.000ns
The critical path consists of the following:

 <State 9>: 1.109ns
The critical path consists of the following:
	'load' operation ('i', lenet_support.cpp:70->lenet_main.cpp:43) on local variable 'i' [35]  (0.000 ns)
	'add' operation ('add_ln70', lenet_support.cpp:70->lenet_main.cpp:43) [38]  (0.707 ns)
	'store' operation ('store_ln70', lenet_support.cpp:70->lenet_main.cpp:43) of variable 'add_ln70', lenet_support.cpp:70->lenet_main.cpp:43 on local variable 'i' [57]  (0.402 ns)

 <State 10>: 0.000ns
The critical path consists of the following:

 <State 11>: 5.714ns
The critical path consists of the following:
	'load' operation ('sum_2_loc_load') on local variable 'sum_2_loc' [44]  (0.000 ns)
	multiplexor before operation 'fadd' with delay (0.799 ns)
'fadd' operation ('x', lenet_support.cpp:76->lenet_main.cpp:43) [45]  (4.915 ns)

 <State 12>: 5.714ns
The critical path consists of the following:
	'fadd' operation ('x', lenet_support.cpp:76->lenet_main.cpp:43) [45]  (5.714 ns)

 <State 13>: 5.714ns
The critical path consists of the following:
	'fadd' operation ('x', lenet_support.cpp:76->lenet_main.cpp:43) [45]  (5.714 ns)

 <State 14>: 5.714ns
The critical path consists of the following:
	'fadd' operation ('x', lenet_support.cpp:76->lenet_main.cpp:43) [45]  (5.714 ns)

 <State 15>: 2.574ns
The critical path consists of the following:
	multiplexor before operation 'fcmp' with delay (0.715 ns)
'fcmp' operation ('tmp_17', lenet_support.cpp:6->lenet_support.cpp:76->lenet_main.cpp:43) [52]  (1.859 ns)

 <State 16>: 4.085ns
The critical path consists of the following:
	'fcmp' operation ('tmp_17', lenet_support.cpp:6->lenet_support.cpp:76->lenet_main.cpp:43) [52]  (2.574 ns)
	'and' operation ('and_ln6', lenet_support.cpp:6->lenet_support.cpp:76->lenet_main.cpp:43) [53]  (0.000 ns)
	'select' operation ('select_ln6', lenet_support.cpp:6->lenet_support.cpp:76->lenet_main.cpp:43) [54]  (0.412 ns)
	'store' operation ('store_ln76', lenet_support.cpp:76->lenet_main.cpp:43) of variable 'select_ln6', lenet_support.cpp:6->lenet_support.cpp:76->lenet_main.cpp:43 on array 'fc1_output', lenet_main.cpp:35 [56]  (1.099 ns)

 <State 17>: 1.109ns
The critical path consists of the following:
	'load' operation ('i', lenet_support.cpp:70->lenet_main.cpp:44) on local variable 'i' [64]  (0.000 ns)
	'add' operation ('add_ln70_1', lenet_support.cpp:70->lenet_main.cpp:44) [67]  (0.707 ns)
	'store' operation ('store_ln70', lenet_support.cpp:70->lenet_main.cpp:44) of variable 'add_ln70_1', lenet_support.cpp:70->lenet_main.cpp:44 on local variable 'i' [86]  (0.402 ns)

 <State 18>: 0.000ns
The critical path consists of the following:

 <State 19>: 5.714ns
The critical path consists of the following:
	'load' operation ('sum_5_loc_load') on local variable 'sum_5_loc' [73]  (0.000 ns)
	multiplexor before operation 'fadd' with delay (0.799 ns)
'fadd' operation ('x', lenet_support.cpp:76->lenet_main.cpp:44) [74]  (4.915 ns)

 <State 20>: 5.714ns
The critical path consists of the following:
	'fadd' operation ('x', lenet_support.cpp:76->lenet_main.cpp:44) [74]  (5.714 ns)

 <State 21>: 5.714ns
The critical path consists of the following:
	'fadd' operation ('x', lenet_support.cpp:76->lenet_main.cpp:44) [74]  (5.714 ns)

 <State 22>: 5.714ns
The critical path consists of the following:
	'fadd' operation ('x', lenet_support.cpp:76->lenet_main.cpp:44) [74]  (5.714 ns)

 <State 23>: 2.574ns
The critical path consists of the following:
	multiplexor before operation 'fcmp' with delay (0.715 ns)
'fcmp' operation ('tmp_19', lenet_support.cpp:6->lenet_support.cpp:76->lenet_main.cpp:44) [81]  (1.859 ns)

 <State 24>: 4.085ns
The critical path consists of the following:
	'fcmp' operation ('tmp_19', lenet_support.cpp:6->lenet_support.cpp:76->lenet_main.cpp:44) [81]  (2.574 ns)
	'and' operation ('and_ln6_1', lenet_support.cpp:6->lenet_support.cpp:76->lenet_main.cpp:44) [82]  (0.000 ns)
	'select' operation ('select_ln6_1', lenet_support.cpp:6->lenet_support.cpp:76->lenet_main.cpp:44) [83]  (0.412 ns)
	'store' operation ('store_ln76', lenet_support.cpp:76->lenet_main.cpp:44) of variable 'select_ln6_1', lenet_support.cpp:6->lenet_support.cpp:76->lenet_main.cpp:44 on array 'fc2_output', lenet_main.cpp:36 [85]  (1.099 ns)

 <State 25>: 1.125ns
The critical path consists of the following:
	'load' operation ('i', lenet_support.cpp:70->lenet_main.cpp:45) on local variable 'i' [94]  (0.000 ns)
	'add' operation ('add_ln70_2', lenet_support.cpp:70->lenet_main.cpp:45) [97]  (0.723 ns)
	'store' operation ('store_ln70', lenet_support.cpp:70->lenet_main.cpp:45) of variable 'add_ln70_2', lenet_support.cpp:70->lenet_main.cpp:45 on local variable 'i' [116]  (0.402 ns)

 <State 26>: 0.000ns
The critical path consists of the following:

 <State 27>: 5.714ns
The critical path consists of the following:
	'load' operation ('sum_8_loc_load') on local variable 'sum_8_loc' [103]  (0.000 ns)
	multiplexor before operation 'fadd' with delay (0.799 ns)
'fadd' operation ('x', lenet_support.cpp:76->lenet_main.cpp:45) [104]  (4.915 ns)

 <State 28>: 5.714ns
The critical path consists of the following:
	'fadd' operation ('x', lenet_support.cpp:76->lenet_main.cpp:45) [104]  (5.714 ns)

 <State 29>: 5.714ns
The critical path consists of the following:
	'fadd' operation ('x', lenet_support.cpp:76->lenet_main.cpp:45) [104]  (5.714 ns)

 <State 30>: 5.714ns
The critical path consists of the following:
	'fadd' operation ('x', lenet_support.cpp:76->lenet_main.cpp:45) [104]  (5.714 ns)

 <State 31>: 2.574ns
The critical path consists of the following:
	multiplexor before operation 'fcmp' with delay (0.715 ns)
'fcmp' operation ('tmp_21', lenet_support.cpp:6->lenet_support.cpp:76->lenet_main.cpp:45) [111]  (1.859 ns)

 <State 32>: 3.600ns
The critical path consists of the following:
	'fcmp' operation ('tmp_21', lenet_support.cpp:6->lenet_support.cpp:76->lenet_main.cpp:45) [111]  (2.574 ns)
	'and' operation ('and_ln6_2', lenet_support.cpp:6->lenet_support.cpp:76->lenet_main.cpp:45) [112]  (0.000 ns)
	'select' operation ('select_ln6_2', lenet_support.cpp:6->lenet_support.cpp:76->lenet_main.cpp:45) [113]  (0.412 ns)
	'store' operation ('store_ln76', lenet_support.cpp:76->lenet_main.cpp:45) of variable 'select_ln6_2', lenet_support.cpp:6->lenet_support.cpp:76->lenet_main.cpp:45 on array 'fc3_output', lenet_main.cpp:37 [115]  (0.614 ns)

 <State 33>: 0.614ns
The critical path consists of the following:
	'load' operation ('max', lenet_support.cpp:11->lenet_main.cpp:47) on array 'fc3_output', lenet_main.cpp:37 [119]  (0.614 ns)

 <State 34>: 0.402ns
The critical path consists of the following:
	'call' operation ('call_ln11', lenet_support.cpp:11->lenet_main.cpp:47) to 'lenet_predict_Pipeline_VITIS_LOOP_12_1' [120]  (0.402 ns)

 <State 35>: 0.000ns
The critical path consists of the following:

 <State 36>: 0.000ns
The critical path consists of the following:

 <State 37>: 0.000ns
The critical path consists of the following:

 <State 38>: 0.000ns
The critical path consists of the following:

 <State 39>: 0.000ns
The critical path consists of the following:

 <State 40>: 0.614ns
The critical path consists of the following:
	'load' operation ('max_prob', lenet_main.cpp:50) on array 'fc3_output', lenet_main.cpp:37 [125]  (0.614 ns)

 <State 41>: 0.614ns
The critical path consists of the following:
	'load' operation ('max_prob', lenet_main.cpp:50) on array 'fc3_output', lenet_main.cpp:37 [125]  (0.614 ns)

 <State 42>: 0.402ns
The critical path consists of the following:
	'call' operation ('call_ln50', lenet_main.cpp:50) to 'lenet_predict_Pipeline_VITIS_LOOP_51_1' [126]  (0.402 ns)

 <State 43>: 0.000ns
The critical path consists of the following:

 <State 44>: 1.000ns
The critical path consists of the following:
	'load' operation ('i_023_loc_load') on local variable 'i_023_loc' [127]  (0.000 ns)
	s_axi write operation ('write_ln54', lenet_main.cpp:54) on port 'predicted_class' (lenet_main.cpp:54) [128]  (1.000 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
