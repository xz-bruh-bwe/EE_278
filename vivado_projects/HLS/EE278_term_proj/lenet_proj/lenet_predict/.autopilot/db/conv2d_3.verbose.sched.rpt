

================================================================
== Vitis HLS Report for 'conv2d_3'
================================================================
* Date:           Fri Nov 22 20:00:40 2024

* Version:        2023.1 (Build 3854077 on May  4 2023)
* Project:        lenet_proj
* Solution:       lenet_predict (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu7ev-ffvf1517-3-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+--------+--------+---------+
    |  Latency (cycles) |  Latency (absolute) |     Interval    | Pipeline|
    |   min   |   max   |    min   |    max   |   min  |   max  |   Type  |
    +---------+---------+----------+----------+--------+--------+---------+
    |   752641|   752641|  7.526 ms|  7.526 ms|  752641|  752641|       no|
    +---------+---------+----------+----------+--------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                                                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |                     Loop Name                     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_30_1_VITIS_LOOP_31_2_VITIS_LOOP_32_3  |   752640|   752640|       320|          -|          -|  2352|        no|
        +---------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 11
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.40>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%j = alloca i32 1"   --->   Operation 12 'alloca' 'j' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 13 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%indvar_flatten = alloca i32 1"   --->   Operation 14 'alloca' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%f = alloca i32 1"   --->   Operation 15 'alloca' 'f' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%indvar_flatten39 = alloca i32 1"   --->   Operation 16 'alloca' 'indvar_flatten39' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%input_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %input_r"   --->   Operation 17 'read' 'input_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%sum_16_4_loc = alloca i64 1"   --->   Operation 18 'alloca' 'sum_16_4_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%sum_9_loc = alloca i64 1"   --->   Operation 19 'alloca' 'sum_9_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%sum_8_4_loc = alloca i64 1"   --->   Operation 20 'alloca' 'sum_8_4_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%sum_loc = alloca i64 1"   --->   Operation 21 'alloca' 'sum_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %gmem, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_2, void @empty_0, i32 16, i32 16, i32 16, i32 16, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 22 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.40ns)   --->   "%store_ln30 = store i12 0, i12 %indvar_flatten39" [lenet_support.cpp:30]   --->   Operation 23 'store' 'store_ln30' <Predicate = true> <Delay = 0.40>
ST_1 : Operation 24 [1/1] (0.40ns)   --->   "%store_ln30 = store i3 0, i3 %f" [lenet_support.cpp:30]   --->   Operation 24 'store' 'store_ln30' <Predicate = true> <Delay = 0.40>
ST_1 : Operation 25 [1/1] (0.40ns)   --->   "%store_ln30 = store i9 0, i9 %indvar_flatten" [lenet_support.cpp:30]   --->   Operation 25 'store' 'store_ln30' <Predicate = true> <Delay = 0.40>
ST_1 : Operation 26 [1/1] (0.40ns)   --->   "%store_ln30 = store i5 0, i5 %i" [lenet_support.cpp:30]   --->   Operation 26 'store' 'store_ln30' <Predicate = true> <Delay = 0.40>
ST_1 : Operation 27 [1/1] (0.40ns)   --->   "%store_ln30 = store i5 0, i5 %j" [lenet_support.cpp:30]   --->   Operation 27 'store' 'store_ln30' <Predicate = true> <Delay = 0.40>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%br_ln30 = br void %VITIS_LOOP_35_4.0" [lenet_support.cpp:30]   --->   Operation 28 'br' 'br_ln30' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 3.76>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%i_10 = load i5 %i"   --->   Operation 29 'load' 'i_10' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%f_1 = load i3 %f" [lenet_support.cpp:30]   --->   Operation 30 'load' 'f_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%indvar_flatten39_load = load i12 %indvar_flatten39" [lenet_support.cpp:30]   --->   Operation 31 'load' 'indvar_flatten39_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%zext_ln30 = zext i3 %f_1" [lenet_support.cpp:30]   --->   Operation 32 'zext' 'zext_ln30' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (1.98ns)   --->   "%empty = mul i13 %zext_ln30, i13 784" [lenet_support.cpp:30]   --->   Operation 33 'mul' 'empty' <Predicate = true> <Delay = 1.98> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 1.98> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%tmp_s = bitconcatenate i10 @_ssdm_op_BitConcatenate.i10.i5.i5, i5 %i_10, i5 0"   --->   Operation 34 'bitconcatenate' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%p_cast = zext i10 %tmp_s"   --->   Operation 35 'zext' 'p_cast' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%p_shl1 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i5.i2, i5 %i_10, i2 0"   --->   Operation 36 'bitconcatenate' 'p_shl1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%p_shl1_cast = zext i7 %p_shl1"   --->   Operation 37 'zext' 'p_shl1_cast' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.73ns)   --->   "%empty_43 = sub i11 %p_cast, i11 %p_shl1_cast"   --->   Operation 38 'sub' 'empty_43' <Predicate = true> <Delay = 0.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%p_cast9 = sext i11 %empty_43"   --->   Operation 39 'sext' 'p_cast9' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.78ns)   --->   "%empty_44 = add i13 %p_cast9, i13 %empty" [lenet_support.cpp:30]   --->   Operation 40 'add' 'empty_44' <Predicate = true> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.77ns)   --->   "%icmp_ln30 = icmp_eq  i12 %indvar_flatten39_load, i12 2352" [lenet_support.cpp:30]   --->   Operation 41 'icmp' 'icmp_ln30' <Predicate = true> <Delay = 0.77> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.77ns)   --->   "%add_ln30 = add i12 %indvar_flatten39_load, i12 1" [lenet_support.cpp:30]   --->   Operation 42 'add' 'add_ln30' <Predicate = true> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%br_ln30 = br i1 %icmp_ln30, void %for.inc48, void %for.end50" [lenet_support.cpp:30]   --->   Operation 43 'br' 'br_ln30' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%j_load = load i5 %j" [lenet_support.cpp:32]   --->   Operation 44 'load' 'j_load' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%indvar_flatten_load = load i9 %indvar_flatten" [lenet_support.cpp:31]   --->   Operation 45 'load' 'indvar_flatten_load' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.71ns)   --->   "%icmp_ln31 = icmp_eq  i9 %indvar_flatten_load, i9 392" [lenet_support.cpp:31]   --->   Operation 46 'icmp' 'icmp_ln31' <Predicate = (!icmp_ln30)> <Delay = 0.71> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (0.19ns)   --->   "%select_ln30 = select i1 %icmp_ln31, i5 0, i5 %i_10" [lenet_support.cpp:30]   --->   Operation 47 'select' 'select_ln30' <Predicate = (!icmp_ln30)> <Delay = 0.19> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.19> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (0.00ns) (grouped into LUT with out node select_ln31)   --->   "%select_ln30_1 = select i1 %icmp_ln31, i5 0, i5 %j_load" [lenet_support.cpp:30]   --->   Operation 48 'select' 'select_ln30_1' <Predicate = (!icmp_ln30)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.19> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (0.61ns)   --->   "%add_ln30_1 = add i3 %f_1, i3 1" [lenet_support.cpp:30]   --->   Operation 49 'add' 'add_ln30_1' <Predicate = (!icmp_ln30)> <Delay = 0.61> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%zext_ln30_1 = zext i3 %add_ln30_1" [lenet_support.cpp:30]   --->   Operation 50 'zext' 'zext_ln30_1' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (1.98ns)   --->   "%p_mid115 = mul i13 %zext_ln30_1, i13 784" [lenet_support.cpp:30]   --->   Operation 51 'mul' 'p_mid115' <Predicate = (!icmp_ln30)> <Delay = 1.98> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 1.98> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 52 [1/1] (0.00ns) (grouped into LUT with out node p_mid16)   --->   "%select_ln30_2 = select i1 %icmp_ln31, i13 %p_mid115, i13 %empty" [lenet_support.cpp:30]   --->   Operation 52 'select' 'select_ln30_2' <Predicate = (!icmp_ln30)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.38> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 53 [1/1] (0.00ns) (grouped into LUT with out node select_ln31_1)   --->   "%select_ln30_3 = select i1 %icmp_ln31, i10 0, i10 %tmp_s" [lenet_support.cpp:30]   --->   Operation 53 'select' 'select_ln30_3' <Predicate = (!icmp_ln30)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.36> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (0.00ns) (grouped into LUT with out node select_ln31_2)   --->   "%select_ln30_4 = select i1 %icmp_ln31, i13 %p_mid115, i13 %empty_44" [lenet_support.cpp:30]   --->   Operation 54 'select' 'select_ln30_4' <Predicate = (!icmp_ln30)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.38> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 55 [1/1] (0.71ns)   --->   "%icmp_ln32 = icmp_ult  i5 %j_load, i5 28" [lenet_support.cpp:32]   --->   Operation 55 'icmp' 'icmp_ln32' <Predicate = (!icmp_ln30)> <Delay = 0.71> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 56 [1/1] (0.25ns)   --->   "%or_ln30 = or i1 %icmp_ln31, i1 %icmp_ln32" [lenet_support.cpp:30]   --->   Operation 56 'or' 'or_ln30' <Predicate = (!icmp_ln30)> <Delay = 0.25> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 57 [1/1] (0.18ns)   --->   "%select_ln30_5 = select i1 %icmp_ln31, i3 %add_ln30_1, i3 %f_1" [lenet_support.cpp:30]   --->   Operation 57 'select' 'select_ln30_5' <Predicate = (!icmp_ln30)> <Delay = 0.18> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 58 [1/1] (0.71ns)   --->   "%add_ln31 = add i5 %select_ln30, i5 1" [lenet_support.cpp:31]   --->   Operation 58 'add' 'add_ln31' <Predicate = (!icmp_ln30)> <Delay = 0.71> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 59 [1/1] (0.19ns) (out node of the LUT)   --->   "%select_ln31 = select i1 %or_ln30, i5 %select_ln30_1, i5 0" [lenet_support.cpp:31]   --->   Operation 59 'select' 'select_ln31' <Predicate = (!icmp_ln30)> <Delay = 0.19> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.19> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 60 [1/1] (0.00ns)   --->   "%p_mid1 = bitconcatenate i10 @_ssdm_op_BitConcatenate.i10.i5.i5, i5 %add_ln31, i5 0" [lenet_support.cpp:31]   --->   Operation 60 'bitconcatenate' 'p_mid1' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_2 : Operation 61 [1/1] (0.36ns) (out node of the LUT)   --->   "%select_ln31_1 = select i1 %or_ln30, i10 %select_ln30_3, i10 %p_mid1" [lenet_support.cpp:31]   --->   Operation 61 'select' 'select_ln31_1' <Predicate = (!icmp_ln30)> <Delay = 0.36> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.36> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "%p_cast_mid1 = zext i10 %p_mid1" [lenet_support.cpp:31]   --->   Operation 62 'zext' 'p_cast_mid1' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "%p_shl1_mid1 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i5.i2, i5 %add_ln31, i2 0" [lenet_support.cpp:31]   --->   Operation 63 'bitconcatenate' 'p_shl1_mid1' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_2 : Operation 64 [1/1] (0.00ns)   --->   "%p_shl1_cast_mid1 = zext i7 %p_shl1_mid1" [lenet_support.cpp:31]   --->   Operation 64 'zext' 'p_shl1_cast_mid1' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_2 : Operation 65 [1/1] (0.73ns)   --->   "%p_mid14 = sub i11 %p_cast_mid1, i11 %p_shl1_cast_mid1" [lenet_support.cpp:31]   --->   Operation 65 'sub' 'p_mid14' <Predicate = (!icmp_ln30)> <Delay = 0.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 66 [1/1] (0.00ns) (grouped into LUT with out node p_mid16)   --->   "%p_cast9_mid1 = sext i11 %p_mid14" [lenet_support.cpp:31]   --->   Operation 66 'sext' 'p_cast9_mid1' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_2 : Operation 67 [1/1] (0.78ns) (out node of the LUT)   --->   "%p_mid16 = add i13 %p_cast9_mid1, i13 %select_ln30_2" [lenet_support.cpp:31]   --->   Operation 67 'add' 'p_mid16' <Predicate = (!icmp_ln30)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 68 [1/1] (0.38ns) (out node of the LUT)   --->   "%select_ln31_2 = select i1 %or_ln30, i13 %select_ln30_4, i13 %p_mid16" [lenet_support.cpp:31]   --->   Operation 68 'select' 'select_ln31_2' <Predicate = (!icmp_ln30)> <Delay = 0.38> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.38> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 69 [1/1] (0.19ns)   --->   "%select_ln31_3 = select i1 %or_ln30, i5 %select_ln30, i5 %add_ln31" [lenet_support.cpp:31]   --->   Operation 69 'select' 'select_ln31_3' <Predicate = (!icmp_ln30)> <Delay = 0.19> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.19> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 70 [2/2] (0.00ns)   --->   "%targetBlock = call i1 @conv2d.3_Pipeline_VITIS_LOOP_35_4, i32 %gmem, i10 %select_ln31_1, i5 %select_ln31, i64 %input_read, i5 %select_ln31_3, i32 %sum_loc, i32 %sum_8_4_loc" [lenet_support.cpp:31]   --->   Operation 70 'call' 'targetBlock' <Predicate = (!icmp_ln30)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 71 [1/1] (0.71ns)   --->   "%add_ln32 = add i5 %select_ln31, i5 2" [lenet_support.cpp:32]   --->   Operation 71 'add' 'add_ln32' <Predicate = (!icmp_ln30)> <Delay = 0.71> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 72 [1/1] (0.71ns)   --->   "%add_ln31_1 = add i9 %indvar_flatten_load, i9 1" [lenet_support.cpp:31]   --->   Operation 72 'add' 'add_ln31_1' <Predicate = (!icmp_ln30)> <Delay = 0.71> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 73 [1/1] (0.36ns)   --->   "%select_ln31_4 = select i1 %icmp_ln31, i9 1, i9 %add_ln31_1" [lenet_support.cpp:31]   --->   Operation 73 'select' 'select_ln31_4' <Predicate = (!icmp_ln30)> <Delay = 0.36> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.36> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 74 [1/1] (0.40ns)   --->   "%store_ln32 = store i12 %add_ln30, i12 %indvar_flatten39" [lenet_support.cpp:32]   --->   Operation 74 'store' 'store_ln32' <Predicate = (!icmp_ln30)> <Delay = 0.40>
ST_2 : Operation 75 [1/1] (0.40ns)   --->   "%store_ln32 = store i3 %select_ln30_5, i3 %f" [lenet_support.cpp:32]   --->   Operation 75 'store' 'store_ln32' <Predicate = (!icmp_ln30)> <Delay = 0.40>
ST_2 : Operation 76 [1/1] (0.40ns)   --->   "%store_ln32 = store i9 %select_ln31_4, i9 %indvar_flatten" [lenet_support.cpp:32]   --->   Operation 76 'store' 'store_ln32' <Predicate = (!icmp_ln30)> <Delay = 0.40>
ST_2 : Operation 77 [1/1] (0.40ns)   --->   "%store_ln32 = store i5 %select_ln31_3, i5 %i" [lenet_support.cpp:32]   --->   Operation 77 'store' 'store_ln32' <Predicate = (!icmp_ln30)> <Delay = 0.40>
ST_2 : Operation 78 [1/1] (0.40ns)   --->   "%store_ln32 = store i5 %add_ln32, i5 %j" [lenet_support.cpp:32]   --->   Operation 78 'store' 'store_ln32' <Predicate = (!icmp_ln30)> <Delay = 0.40>
ST_2 : Operation 79 [1/1] (0.00ns)   --->   "%ret_ln46 = ret" [lenet_support.cpp:46]   --->   Operation 79 'ret' 'ret_ln46' <Predicate = (icmp_ln30)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 0.00>
ST_3 : Operation 80 [1/2] (0.00ns)   --->   "%targetBlock = call i1 @conv2d.3_Pipeline_VITIS_LOOP_35_4, i32 %gmem, i10 %select_ln31_1, i5 %select_ln31, i64 %input_read, i5 %select_ln31_3, i32 %sum_loc, i32 %sum_8_4_loc" [lenet_support.cpp:31]   --->   Operation 80 'call' 'targetBlock' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 4 <SV = 3> <Delay = 6.12>
ST_4 : Operation 81 [1/1] (0.00ns)   --->   "%sum_loc_load = load i32 %sum_loc"   --->   Operation 81 'load' 'sum_loc_load' <Predicate = (targetBlock)> <Delay = 0.00>
ST_4 : Operation 82 [1/1] (0.00ns)   --->   "%sum_8_4_loc_load = load i32 %sum_8_4_loc"   --->   Operation 82 'load' 'sum_8_4_loc_load' <Predicate = (!targetBlock)> <Delay = 0.00>
ST_4 : Operation 83 [1/1] (0.41ns)   --->   "%select_ln35 = select i1 %targetBlock, i32 %sum_loc_load, i32 %sum_8_4_loc_load" [lenet_support.cpp:35]   --->   Operation 83 'select' 'select_ln35' <Predicate = true> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : [1/1] (0.79ns)   --->   Input mux for Operation 84 '%x_assign = fadd i32 %select_ln35, i32 0'
ST_4 : Operation 84 [4/4] (4.91ns)   --->   "%x_assign = fadd i32 %select_ln35, i32 0" [lenet_support.cpp:42]   --->   Operation 84 'fadd' 'x_assign' <Predicate = true> <Delay = 4.91> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 5.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 85 [1/1] (0.00ns)   --->   "%or_ln32 = or i5 %select_ln31, i5 1" [lenet_support.cpp:32]   --->   Operation 85 'or' 'or_ln32' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 86 [2/2] (0.00ns)   --->   "%targetBlock1 = call i1 @conv2d.3_Pipeline_VITIS_LOOP_35_45, i32 %gmem, i10 %select_ln31_1, i5 %or_ln32, i64 %input_read, i5 %select_ln31_3, i5 %select_ln31, i32 %sum_9_loc, i32 %sum_16_4_loc" [lenet_support.cpp:31]   --->   Operation 86 'call' 'targetBlock1' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 5 <SV = 4> <Delay = 5.71>
ST_5 : Operation 87 [3/4] (5.71ns)   --->   "%x_assign = fadd i32 %select_ln35, i32 0" [lenet_support.cpp:42]   --->   Operation 87 'fadd' 'x_assign' <Predicate = true> <Delay = 5.71> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 5.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 88 [1/2] (0.00ns)   --->   "%targetBlock1 = call i1 @conv2d.3_Pipeline_VITIS_LOOP_35_45, i32 %gmem, i10 %select_ln31_1, i5 %or_ln32, i64 %input_read, i5 %select_ln31_3, i5 %select_ln31, i32 %sum_9_loc, i32 %sum_16_4_loc" [lenet_support.cpp:31]   --->   Operation 88 'call' 'targetBlock1' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 6 <SV = 5> <Delay = 6.12>
ST_6 : Operation 89 [2/4] (5.71ns)   --->   "%x_assign = fadd i32 %select_ln35, i32 0" [lenet_support.cpp:42]   --->   Operation 89 'fadd' 'x_assign' <Predicate = true> <Delay = 5.71> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 5.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 90 [1/1] (0.00ns)   --->   "%sum_9_loc_load = load i32 %sum_9_loc"   --->   Operation 90 'load' 'sum_9_loc_load' <Predicate = (targetBlock1)> <Delay = 0.00>
ST_6 : Operation 91 [1/1] (0.00ns)   --->   "%sum_16_4_loc_load = load i32 %sum_16_4_loc"   --->   Operation 91 'load' 'sum_16_4_loc_load' <Predicate = (!targetBlock1)> <Delay = 0.00>
ST_6 : Operation 92 [1/1] (0.41ns)   --->   "%select_ln35_1 = select i1 %targetBlock1, i32 %sum_9_loc_load, i32 %sum_16_4_loc_load" [lenet_support.cpp:35]   --->   Operation 92 'select' 'select_ln35_1' <Predicate = true> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : [1/1] (0.79ns)   --->   Input mux for Operation 93 '%x_assign_1 = fadd i32 %select_ln35_1, i32 0'
ST_6 : Operation 93 [4/4] (4.91ns)   --->   "%x_assign_1 = fadd i32 %select_ln35_1, i32 0" [lenet_support.cpp:42]   --->   Operation 93 'fadd' 'x_assign_1' <Predicate = true> <Delay = 4.91> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 5.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 5.71>
ST_7 : Operation 94 [1/4] (5.71ns)   --->   "%x_assign = fadd i32 %select_ln35, i32 0" [lenet_support.cpp:42]   --->   Operation 94 'fadd' 'x_assign' <Predicate = true> <Delay = 5.71> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 5.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 95 [3/4] (5.71ns)   --->   "%x_assign_1 = fadd i32 %select_ln35_1, i32 0" [lenet_support.cpp:42]   --->   Operation 95 'fadd' 'x_assign_1' <Predicate = true> <Delay = 5.71> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 5.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 5.71>
ST_8 : [1/1] (0.71ns)   --->   Input mux for Operation 96 '%tmp_29 = fcmp_ogt  i32 %x_assign, i32 0'
ST_8 : Operation 96 [2/2] (1.85ns)   --->   "%tmp_29 = fcmp_ogt  i32 %x_assign, i32 0" [lenet_support.cpp:6->lenet_support.cpp:42]   --->   Operation 96 'fcmp' 'tmp_29' <Predicate = true> <Delay = 1.85> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.57> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 97 [2/4] (5.71ns)   --->   "%x_assign_1 = fadd i32 %select_ln35_1, i32 0" [lenet_support.cpp:42]   --->   Operation 97 'fadd' 'x_assign_1' <Predicate = true> <Delay = 5.71> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 5.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 5.71>
ST_9 : Operation 98 [1/1] (0.00ns)   --->   "%zext_ln32 = zext i5 %select_ln31" [lenet_support.cpp:32]   --->   Operation 98 'zext' 'zext_ln32' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 99 [1/1] (0.00ns)   --->   "%bitcast_ln6 = bitcast i32 %x_assign" [lenet_support.cpp:6->lenet_support.cpp:42]   --->   Operation 99 'bitcast' 'bitcast_ln6' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 100 [1/1] (0.00ns)   --->   "%tmp_28 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln6, i32 23, i32 30" [lenet_support.cpp:6->lenet_support.cpp:42]   --->   Operation 100 'partselect' 'tmp_28' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 101 [1/1] (0.00ns)   --->   "%trunc_ln6 = trunc i32 %bitcast_ln6" [lenet_support.cpp:6->lenet_support.cpp:42]   --->   Operation 101 'trunc' 'trunc_ln6' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 102 [1/1] (0.70ns)   --->   "%icmp_ln6 = icmp_ne  i8 %tmp_28, i8 255" [lenet_support.cpp:6->lenet_support.cpp:42]   --->   Operation 102 'icmp' 'icmp_ln6' <Predicate = true> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 103 [1/1] (0.88ns)   --->   "%icmp_ln6_6 = icmp_eq  i23 %trunc_ln6, i23 0" [lenet_support.cpp:6->lenet_support.cpp:42]   --->   Operation 103 'icmp' 'icmp_ln6_6' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 104 [1/1] (0.00ns) (grouped into LUT with out node select_ln6)   --->   "%or_ln6 = or i1 %icmp_ln6_6, i1 %icmp_ln6" [lenet_support.cpp:6->lenet_support.cpp:42]   --->   Operation 104 'or' 'or_ln6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 105 [1/2] (2.57ns)   --->   "%tmp_29 = fcmp_ogt  i32 %x_assign, i32 0" [lenet_support.cpp:6->lenet_support.cpp:42]   --->   Operation 105 'fcmp' 'tmp_29' <Predicate = true> <Delay = 2.57> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.57> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 106 [1/1] (0.00ns) (grouped into LUT with out node select_ln6)   --->   "%and_ln6 = and i1 %or_ln6, i1 %tmp_29" [lenet_support.cpp:6->lenet_support.cpp:42]   --->   Operation 106 'and' 'and_ln6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 107 [1/1] (0.41ns) (out node of the LUT)   --->   "%select_ln6 = select i1 %and_ln6, i32 %x_assign, i32 0" [lenet_support.cpp:6->lenet_support.cpp:42]   --->   Operation 107 'select' 'select_ln6' <Predicate = true> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 108 [1/1] (0.78ns)   --->   "%add_ln42 = add i13 %zext_ln32, i13 %select_ln31_2" [lenet_support.cpp:42]   --->   Operation 108 'add' 'add_ln42' <Predicate = true> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 109 [1/1] (0.00ns)   --->   "%zext_ln42 = zext i13 %add_ln42" [lenet_support.cpp:42]   --->   Operation 109 'zext' 'zext_ln42' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 110 [1/1] (0.00ns)   --->   "%output_addr = getelementptr i32 %output_r, i64 0, i64 %zext_ln42" [lenet_support.cpp:42]   --->   Operation 110 'getelementptr' 'output_addr' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 111 [1/1] (1.09ns)   --->   "%store_ln42 = store i32 %select_ln6, i13 %output_addr" [lenet_support.cpp:42]   --->   Operation 111 'store' 'store_ln42' <Predicate = true> <Delay = 1.09> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 4704> <RAM>
ST_9 : Operation 112 [1/1] (0.00ns)   --->   "%zext_ln35 = zext i5 %or_ln32" [lenet_support.cpp:35]   --->   Operation 112 'zext' 'zext_ln35' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 113 [1/4] (5.71ns)   --->   "%x_assign_1 = fadd i32 %select_ln35_1, i32 0" [lenet_support.cpp:42]   --->   Operation 113 'fadd' 'x_assign_1' <Predicate = true> <Delay = 5.71> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 5.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 114 [1/1] (0.78ns)   --->   "%add_ln42_1 = add i13 %zext_ln35, i13 %select_ln31_2" [lenet_support.cpp:42]   --->   Operation 114 'add' 'add_ln42_1' <Predicate = true> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 2.57>
ST_10 : [1/1] (0.71ns)   --->   Input mux for Operation 115 '%tmp_31 = fcmp_ogt  i32 %x_assign_1, i32 0'
ST_10 : Operation 115 [2/2] (1.85ns)   --->   "%tmp_31 = fcmp_ogt  i32 %x_assign_1, i32 0" [lenet_support.cpp:6->lenet_support.cpp:42]   --->   Operation 115 'fcmp' 'tmp_31' <Predicate = true> <Delay = 1.85> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.57> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 4.08>
ST_11 : Operation 116 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @VITIS_LOOP_30_1_VITIS_LOOP_31_2_VITIS_LOOP_32_3_str"   --->   Operation 116 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 117 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 2352, i64 2352, i64 2352"   --->   Operation 117 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 118 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @VITIS_LOOP_31_2_VITIS_LOOP_32_3_str"   --->   Operation 118 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 119 [1/1] (0.00ns)   --->   "%specloopname_ln32 = specloopname void @_ssdm_op_SpecLoopName, void @empty_16" [lenet_support.cpp:32]   --->   Operation 119 'specloopname' 'specloopname_ln32' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 120 [1/1] (0.00ns)   --->   "%bitcast_ln6_3 = bitcast i32 %x_assign_1" [lenet_support.cpp:6->lenet_support.cpp:42]   --->   Operation 120 'bitcast' 'bitcast_ln6_3' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 121 [1/1] (0.00ns)   --->   "%tmp_30 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln6_3, i32 23, i32 30" [lenet_support.cpp:6->lenet_support.cpp:42]   --->   Operation 121 'partselect' 'tmp_30' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 122 [1/1] (0.00ns)   --->   "%trunc_ln6_3 = trunc i32 %bitcast_ln6_3" [lenet_support.cpp:6->lenet_support.cpp:42]   --->   Operation 122 'trunc' 'trunc_ln6_3' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 123 [1/1] (0.70ns)   --->   "%icmp_ln6_7 = icmp_ne  i8 %tmp_30, i8 255" [lenet_support.cpp:6->lenet_support.cpp:42]   --->   Operation 123 'icmp' 'icmp_ln6_7' <Predicate = true> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 124 [1/1] (0.88ns)   --->   "%icmp_ln6_8 = icmp_eq  i23 %trunc_ln6_3, i23 0" [lenet_support.cpp:6->lenet_support.cpp:42]   --->   Operation 124 'icmp' 'icmp_ln6_8' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 125 [1/1] (0.00ns) (grouped into LUT with out node select_ln6_1)   --->   "%or_ln6_3 = or i1 %icmp_ln6_8, i1 %icmp_ln6_7" [lenet_support.cpp:6->lenet_support.cpp:42]   --->   Operation 125 'or' 'or_ln6_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 126 [1/2] (2.57ns)   --->   "%tmp_31 = fcmp_ogt  i32 %x_assign_1, i32 0" [lenet_support.cpp:6->lenet_support.cpp:42]   --->   Operation 126 'fcmp' 'tmp_31' <Predicate = true> <Delay = 2.57> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.57> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 127 [1/1] (0.00ns) (grouped into LUT with out node select_ln6_1)   --->   "%and_ln6_3 = and i1 %or_ln6_3, i1 %tmp_31" [lenet_support.cpp:6->lenet_support.cpp:42]   --->   Operation 127 'and' 'and_ln6_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 128 [1/1] (0.41ns) (out node of the LUT)   --->   "%select_ln6_1 = select i1 %and_ln6_3, i32 %x_assign_1, i32 0" [lenet_support.cpp:6->lenet_support.cpp:42]   --->   Operation 128 'select' 'select_ln6_1' <Predicate = true> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 129 [1/1] (0.00ns)   --->   "%zext_ln42_1 = zext i13 %add_ln42_1" [lenet_support.cpp:42]   --->   Operation 129 'zext' 'zext_ln42_1' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 130 [1/1] (0.00ns)   --->   "%output_addr_1 = getelementptr i32 %output_r, i64 0, i64 %zext_ln42_1" [lenet_support.cpp:42]   --->   Operation 130 'getelementptr' 'output_addr_1' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 131 [1/1] (1.09ns)   --->   "%store_ln42 = store i32 %select_ln6_1, i13 %output_addr_1" [lenet_support.cpp:42]   --->   Operation 131 'store' 'store_ln42' <Predicate = true> <Delay = 1.09> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 4704> <RAM>
ST_11 : Operation 132 [1/1] (0.00ns)   --->   "%br_ln32 = br void %VITIS_LOOP_35_4.0" [lenet_support.cpp:32]   --->   Operation 132 'br' 'br_ln32' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 0.402ns
The critical path consists of the following:
	'alloca' operation ('indvar_flatten39') [8]  (0.000 ns)
	'store' operation ('store_ln30', lenet_support.cpp:30) of constant 0 on local variable 'indvar_flatten39' [15]  (0.402 ns)

 <State 2>: 3.764ns
The critical path consists of the following:
	'load' operation ('f', lenet_support.cpp:30) on local variable 'f' [23]  (0.000 ns)
	'add' operation ('add_ln30_1', lenet_support.cpp:30) [45]  (0.615 ns)
	'mul' operation ('p_mid115', lenet_support.cpp:30) [47]  (1.980 ns)
	'select' operation ('select_ln30_2', lenet_support.cpp:30) [48]  (0.000 ns)
	'add' operation ('p_mid16', lenet_support.cpp:31) [64]  (0.787 ns)
	'select' operation ('select_ln31_2', lenet_support.cpp:31) [65]  (0.383 ns)

 <State 3>: 0.000ns
The critical path consists of the following:

 <State 4>: 6.126ns
The critical path consists of the following:
	'load' operation ('sum_loc_load') on local variable 'sum_loc' [70]  (0.000 ns)
	'select' operation ('select_ln35', lenet_support.cpp:35) [72]  (0.412 ns)
	multiplexor before operation 'fadd' with delay (0.799 ns)
'fadd' operation ('x', lenet_support.cpp:42) [73]  (4.915 ns)

 <State 5>: 5.714ns
The critical path consists of the following:
	'fadd' operation ('x', lenet_support.cpp:42) [73]  (5.714 ns)

 <State 6>: 6.126ns
The critical path consists of the following:
	'load' operation ('sum_9_loc_load') on local variable 'sum_9_loc' [90]  (0.000 ns)
	'select' operation ('select_ln35_1', lenet_support.cpp:35) [92]  (0.412 ns)
	multiplexor before operation 'fadd' with delay (0.799 ns)
'fadd' operation ('x', lenet_support.cpp:42) [93]  (4.915 ns)

 <State 7>: 5.714ns
The critical path consists of the following:
	'fadd' operation ('x', lenet_support.cpp:42) [73]  (5.714 ns)

 <State 8>: 5.714ns
The critical path consists of the following:
	'fadd' operation ('x', lenet_support.cpp:42) [93]  (5.714 ns)

 <State 9>: 5.714ns
The critical path consists of the following:
	'fadd' operation ('x', lenet_support.cpp:42) [93]  (5.714 ns)

 <State 10>: 2.574ns
The critical path consists of the following:
	multiplexor before operation 'fcmp' with delay (0.715 ns)
'fcmp' operation ('tmp_31', lenet_support.cpp:6->lenet_support.cpp:42) [100]  (1.859 ns)

 <State 11>: 4.085ns
The critical path consists of the following:
	'fcmp' operation ('tmp_31', lenet_support.cpp:6->lenet_support.cpp:42) [100]  (2.574 ns)
	'and' operation ('and_ln6_3', lenet_support.cpp:6->lenet_support.cpp:42) [101]  (0.000 ns)
	'select' operation ('select_ln6_1', lenet_support.cpp:6->lenet_support.cpp:42) [102]  (0.412 ns)
	'store' operation ('store_ln42', lenet_support.cpp:42) of variable 'select_ln6_1', lenet_support.cpp:6->lenet_support.cpp:42 on array 'output_r' [106]  (1.099 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
