

================================================================
== Vitis HLS Report for 'conv2d'
================================================================
* Date:           Sat Dec  7 11:05:50 2024

* Version:        2023.1 (Build 3854077 on May  4 2023)
* Project:        lenet_proj
* Solution:       lenet_predict (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu7ev-ffvf1517-3-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+--------+--------+---------+
    |  Latency (cycles) |  Latency (absolute) |     Interval    | Pipeline|
    |   min   |   max   |    min   |    max   |   min  |   max  |   Type  |
    +---------+---------+----------+----------+--------+--------+---------+
    |   747937|   747937|  7.479 ms|  7.479 ms|  747937|  747937|       no|
    +---------+---------+----------+----------+--------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                                                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |                     Loop Name                     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_32_1_VITIS_LOOP_33_2_VITIS_LOOP_34_3  |   747936|   747936|       318|          -|          -|  2352|        no|
        +---------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 7
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.40>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%j = alloca i32 1"   --->   Operation 8 'alloca' 'j' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 9 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%indvar_flatten = alloca i32 1"   --->   Operation 10 'alloca' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%f = alloca i32 1"   --->   Operation 11 'alloca' 'f' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%indvar_flatten45 = alloca i32 1"   --->   Operation 12 'alloca' 'indvar_flatten45' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%filters_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %filters"   --->   Operation 13 'read' 'filters_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%input_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %input_r"   --->   Operation 14 'read' 'input_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%sum_36_4_loc = alloca i64 1"   --->   Operation 15 'alloca' 'sum_36_4_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%sum_12_loc = alloca i64 1"   --->   Operation 16 'alloca' 'sum_12_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%sum_29_4_loc = alloca i64 1"   --->   Operation 17 'alloca' 'sum_29_4_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%sum_loc = alloca i64 1"   --->   Operation 18 'alloca' 'sum_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %gmem, void @empty_9, i32 0, i32 0, void @empty_22, i32 0, i32 0, void @empty_23, void @empty_25, void @empty_22, i32 16, i32 16, i32 16, i32 16, void @empty_22, void @empty_22, i32 4294967295, i32 0"   --->   Operation 19 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.40ns)   --->   "%store_ln32 = store i12 0, i12 %indvar_flatten45" [lenet_support.cpp:32]   --->   Operation 20 'store' 'store_ln32' <Predicate = true> <Delay = 0.40>
ST_1 : Operation 21 [1/1] (0.40ns)   --->   "%store_ln32 = store i3 0, i3 %f" [lenet_support.cpp:32]   --->   Operation 21 'store' 'store_ln32' <Predicate = true> <Delay = 0.40>
ST_1 : Operation 22 [1/1] (0.40ns)   --->   "%store_ln32 = store i9 0, i9 %indvar_flatten" [lenet_support.cpp:32]   --->   Operation 22 'store' 'store_ln32' <Predicate = true> <Delay = 0.40>
ST_1 : Operation 23 [1/1] (0.40ns)   --->   "%store_ln32 = store i5 0, i5 %i" [lenet_support.cpp:32]   --->   Operation 23 'store' 'store_ln32' <Predicate = true> <Delay = 0.40>
ST_1 : Operation 24 [1/1] (0.40ns)   --->   "%store_ln32 = store i5 0, i5 %j" [lenet_support.cpp:32]   --->   Operation 24 'store' 'store_ln32' <Predicate = true> <Delay = 0.40>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%br_ln32 = br void %VITIS_LOOP_38_4.0" [lenet_support.cpp:32]   --->   Operation 25 'br' 'br_ln32' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 3.76>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%i_9 = load i5 %i"   --->   Operation 26 'load' 'i_9' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%f_2 = load i3 %f" [lenet_support.cpp:32]   --->   Operation 27 'load' 'f_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%indvar_flatten45_load = load i12 %indvar_flatten45" [lenet_support.cpp:32]   --->   Operation 28 'load' 'indvar_flatten45_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%zext_ln32 = zext i3 %f_2" [lenet_support.cpp:32]   --->   Operation 29 'zext' 'zext_ln32' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (1.98ns)   --->   "%empty = mul i13 %zext_ln32, i13 784" [lenet_support.cpp:32]   --->   Operation 30 'mul' 'empty' <Predicate = true> <Delay = 1.98> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 1.98> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%tmp_5 = bitconcatenate i10 @_ssdm_op_BitConcatenate.i10.i5.i5, i5 %i_9, i5 0"   --->   Operation 31 'bitconcatenate' 'tmp_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%p_cast14 = zext i10 %tmp_5"   --->   Operation 32 'zext' 'p_cast14' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%p_shl1 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i5.i2, i5 %i_9, i2 0"   --->   Operation 33 'bitconcatenate' 'p_shl1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%p_shl1_cast = zext i7 %p_shl1"   --->   Operation 34 'zext' 'p_shl1_cast' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.73ns)   --->   "%empty_71 = sub i11 %p_cast14, i11 %p_shl1_cast"   --->   Operation 35 'sub' 'empty_71' <Predicate = true> <Delay = 0.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%p_cast15 = sext i11 %empty_71"   --->   Operation 36 'sext' 'p_cast15' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.78ns)   --->   "%empty_72 = add i13 %p_cast15, i13 %empty" [lenet_support.cpp:32]   --->   Operation 37 'add' 'empty_72' <Predicate = true> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.77ns)   --->   "%icmp_ln32 = icmp_eq  i12 %indvar_flatten45_load, i12 2352" [lenet_support.cpp:32]   --->   Operation 38 'icmp' 'icmp_ln32' <Predicate = true> <Delay = 0.77> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.77ns)   --->   "%add_ln32 = add i12 %indvar_flatten45_load, i12 1" [lenet_support.cpp:32]   --->   Operation 39 'add' 'add_ln32' <Predicate = true> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%br_ln32 = br i1 %icmp_ln32, void %for.inc45, void %for.end47" [lenet_support.cpp:32]   --->   Operation 40 'br' 'br_ln32' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%j_load = load i5 %j" [lenet_support.cpp:34]   --->   Operation 41 'load' 'j_load' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%indvar_flatten_load = load i9 %indvar_flatten" [lenet_support.cpp:33]   --->   Operation 42 'load' 'indvar_flatten_load' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.71ns)   --->   "%icmp_ln33 = icmp_eq  i9 %indvar_flatten_load, i9 392" [lenet_support.cpp:33]   --->   Operation 43 'icmp' 'icmp_ln33' <Predicate = (!icmp_ln32)> <Delay = 0.71> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.19ns)   --->   "%select_ln32 = select i1 %icmp_ln33, i5 0, i5 %i_9" [lenet_support.cpp:32]   --->   Operation 44 'select' 'select_ln32' <Predicate = (!icmp_ln32)> <Delay = 0.19> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.19> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.00ns) (grouped into LUT with out node select_ln33)   --->   "%select_ln32_1 = select i1 %icmp_ln33, i5 0, i5 %j_load" [lenet_support.cpp:32]   --->   Operation 45 'select' 'select_ln32_1' <Predicate = (!icmp_ln32)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.19> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.61ns)   --->   "%add_ln32_3 = add i3 %f_2, i3 1" [lenet_support.cpp:32]   --->   Operation 46 'add' 'add_ln32_3' <Predicate = (!icmp_ln32)> <Delay = 0.61> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%zext_ln32_1 = zext i3 %add_ln32_3" [lenet_support.cpp:32]   --->   Operation 47 'zext' 'zext_ln32_1' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.18ns)   --->   "%select_ln32_2 = select i1 %icmp_ln33, i3 %add_ln32_3, i3 %f_2" [lenet_support.cpp:32]   --->   Operation 48 'select' 'select_ln32_2' <Predicate = (!icmp_ln32)> <Delay = 0.18> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%zext_ln32_2 = zext i3 %select_ln32_2" [lenet_support.cpp:32]   --->   Operation 49 'zext' 'zext_ln32_2' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (1.08ns)   --->   "%mul_ln32 = mul i8 %zext_ln32_2, i8 25" [lenet_support.cpp:32]   --->   Operation 50 'mul' 'mul_ln32' <Predicate = (!icmp_ln32)> <Delay = 1.08> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (1.98ns)   --->   "%p_mid119 = mul i13 %zext_ln32_1, i13 784" [lenet_support.cpp:32]   --->   Operation 51 'mul' 'p_mid119' <Predicate = (!icmp_ln32)> <Delay = 1.98> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 1.98> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 52 [1/1] (0.00ns) (grouped into LUT with out node p_mid16)   --->   "%select_ln32_3 = select i1 %icmp_ln33, i13 %p_mid119, i13 %empty" [lenet_support.cpp:32]   --->   Operation 52 'select' 'select_ln32_3' <Predicate = (!icmp_ln32)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.38> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%trunc_ln32 = trunc i8 %mul_ln32" [lenet_support.cpp:32]   --->   Operation 53 'trunc' 'trunc_ln32' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%zext_ln32_3 = zext i7 %trunc_ln32" [lenet_support.cpp:32]   --->   Operation 54 'zext' 'zext_ln32_3' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (0.70ns)   --->   "%add_ln32_2 = add i8 %zext_ln32_3, i8 5" [lenet_support.cpp:32]   --->   Operation 55 'add' 'add_ln32_2' <Predicate = (!icmp_ln32)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 56 [1/1] (0.00ns) (grouped into LUT with out node select_ln33_4)   --->   "%select_ln32_4 = select i1 %icmp_ln33, i10 0, i10 %tmp_5" [lenet_support.cpp:32]   --->   Operation 56 'select' 'select_ln32_4' <Predicate = (!icmp_ln32)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.36> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 57 [1/1] (0.00ns) (grouped into LUT with out node select_ln33_5)   --->   "%select_ln32_5 = select i1 %icmp_ln33, i13 %p_mid119, i13 %empty_72" [lenet_support.cpp:32]   --->   Operation 57 'select' 'select_ln32_5' <Predicate = (!icmp_ln32)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.38> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 58 [1/1] (0.71ns)   --->   "%icmp_ln34 = icmp_ult  i5 %j_load, i5 28" [lenet_support.cpp:34]   --->   Operation 58 'icmp' 'icmp_ln34' <Predicate = (!icmp_ln32)> <Delay = 0.71> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 59 [1/1] (0.25ns)   --->   "%or_ln32 = or i1 %icmp_ln33, i1 %icmp_ln34" [lenet_support.cpp:32]   --->   Operation 59 'or' 'or_ln32' <Predicate = (!icmp_ln32)> <Delay = 0.25> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 60 [1/1] (0.71ns)   --->   "%add_ln33 = add i5 %select_ln32, i5 1" [lenet_support.cpp:33]   --->   Operation 60 'add' 'add_ln33' <Predicate = (!icmp_ln32)> <Delay = 0.71> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 61 [1/1] (0.19ns) (out node of the LUT)   --->   "%select_ln33 = select i1 %or_ln32, i5 %select_ln32_1, i5 0" [lenet_support.cpp:33]   --->   Operation 61 'select' 'select_ln33' <Predicate = (!icmp_ln32)> <Delay = 0.19> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.19> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "%p_mid1 = bitconcatenate i10 @_ssdm_op_BitConcatenate.i10.i5.i5, i5 %add_ln33, i5 0" [lenet_support.cpp:33]   --->   Operation 62 'bitconcatenate' 'p_mid1' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 63 [1/1] (0.36ns) (out node of the LUT)   --->   "%select_ln33_4 = select i1 %or_ln32, i10 %select_ln32_4, i10 %p_mid1" [lenet_support.cpp:33]   --->   Operation 63 'select' 'select_ln33_4' <Predicate = (!icmp_ln32)> <Delay = 0.36> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.36> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 64 [1/1] (0.00ns)   --->   "%p_cast14_mid1 = zext i10 %p_mid1" [lenet_support.cpp:33]   --->   Operation 64 'zext' 'p_cast14_mid1' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 65 [1/1] (0.00ns)   --->   "%p_shl1_mid1 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i5.i2, i5 %add_ln33, i2 0" [lenet_support.cpp:33]   --->   Operation 65 'bitconcatenate' 'p_shl1_mid1' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 66 [1/1] (0.00ns)   --->   "%p_shl1_cast_mid1 = zext i7 %p_shl1_mid1" [lenet_support.cpp:33]   --->   Operation 66 'zext' 'p_shl1_cast_mid1' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 67 [1/1] (0.73ns)   --->   "%p_mid14 = sub i11 %p_cast14_mid1, i11 %p_shl1_cast_mid1" [lenet_support.cpp:33]   --->   Operation 67 'sub' 'p_mid14' <Predicate = (!icmp_ln32)> <Delay = 0.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 68 [1/1] (0.00ns) (grouped into LUT with out node p_mid16)   --->   "%p_cast15_mid1 = sext i11 %p_mid14" [lenet_support.cpp:33]   --->   Operation 68 'sext' 'p_cast15_mid1' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 69 [1/1] (0.78ns) (out node of the LUT)   --->   "%p_mid16 = add i13 %p_cast15_mid1, i13 %select_ln32_3" [lenet_support.cpp:33]   --->   Operation 69 'add' 'p_mid16' <Predicate = (!icmp_ln32)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 70 [1/1] (0.38ns) (out node of the LUT)   --->   "%select_ln33_5 = select i1 %or_ln32, i13 %select_ln32_5, i13 %p_mid16" [lenet_support.cpp:33]   --->   Operation 70 'select' 'select_ln33_5' <Predicate = (!icmp_ln32)> <Delay = 0.38> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.38> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 71 [1/1] (0.19ns)   --->   "%select_ln33_6 = select i1 %or_ln32, i5 %select_ln32, i5 %add_ln33" [lenet_support.cpp:33]   --->   Operation 71 'select' 'select_ln33_6' <Predicate = (!icmp_ln32)> <Delay = 0.19> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.19> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 72 [2/2] (0.00ns)   --->   "%targetBlock = call i1 @conv2d_Pipeline_VITIS_LOOP_38_4, i32 %gmem, i8 %mul_ln32, i64 %filters_read, i10 %select_ln33_4, i5 %select_ln33, i64 %input_read, i8 %add_ln32_2, i5 %select_ln33_6, i32 %sum_loc, i32 %sum_29_4_loc" [lenet_support.cpp:32]   --->   Operation 72 'call' 'targetBlock' <Predicate = (!icmp_ln32)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 73 [1/1] (0.71ns)   --->   "%add_ln34 = add i5 %select_ln33, i5 2" [lenet_support.cpp:34]   --->   Operation 73 'add' 'add_ln34' <Predicate = (!icmp_ln32)> <Delay = 0.71> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 74 [1/1] (0.71ns)   --->   "%add_ln33_2 = add i9 %indvar_flatten_load, i9 1" [lenet_support.cpp:33]   --->   Operation 74 'add' 'add_ln33_2' <Predicate = (!icmp_ln32)> <Delay = 0.71> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 75 [1/1] (0.36ns)   --->   "%select_ln33_7 = select i1 %icmp_ln33, i9 1, i9 %add_ln33_2" [lenet_support.cpp:33]   --->   Operation 75 'select' 'select_ln33_7' <Predicate = (!icmp_ln32)> <Delay = 0.36> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.36> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 76 [1/1] (0.40ns)   --->   "%store_ln34 = store i12 %add_ln32, i12 %indvar_flatten45" [lenet_support.cpp:34]   --->   Operation 76 'store' 'store_ln34' <Predicate = (!icmp_ln32)> <Delay = 0.40>
ST_2 : Operation 77 [1/1] (0.40ns)   --->   "%store_ln34 = store i3 %select_ln32_2, i3 %f" [lenet_support.cpp:34]   --->   Operation 77 'store' 'store_ln34' <Predicate = (!icmp_ln32)> <Delay = 0.40>
ST_2 : Operation 78 [1/1] (0.40ns)   --->   "%store_ln34 = store i9 %select_ln33_7, i9 %indvar_flatten" [lenet_support.cpp:34]   --->   Operation 78 'store' 'store_ln34' <Predicate = (!icmp_ln32)> <Delay = 0.40>
ST_2 : Operation 79 [1/1] (0.40ns)   --->   "%store_ln34 = store i5 %select_ln33_6, i5 %i" [lenet_support.cpp:34]   --->   Operation 79 'store' 'store_ln34' <Predicate = (!icmp_ln32)> <Delay = 0.40>
ST_2 : Operation 80 [1/1] (0.40ns)   --->   "%store_ln34 = store i5 %add_ln34, i5 %j" [lenet_support.cpp:34]   --->   Operation 80 'store' 'store_ln34' <Predicate = (!icmp_ln32)> <Delay = 0.40>
ST_2 : Operation 81 [1/1] (0.00ns)   --->   "%ret_ln51 = ret" [lenet_support.cpp:51]   --->   Operation 81 'ret' 'ret_ln51' <Predicate = (icmp_ln32)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 0.00>
ST_3 : Operation 82 [1/2] (0.00ns)   --->   "%targetBlock = call i1 @conv2d_Pipeline_VITIS_LOOP_38_4, i32 %gmem, i8 %mul_ln32, i64 %filters_read, i10 %select_ln33_4, i5 %select_ln33, i64 %input_read, i8 %add_ln32_2, i5 %select_ln33_6, i32 %sum_loc, i32 %sum_29_4_loc" [lenet_support.cpp:32]   --->   Operation 82 'call' 'targetBlock' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 4 <SV = 3> <Delay = 2.98>
ST_4 : Operation 83 [1/1] (0.00ns)   --->   "%sum_loc_load = load i32 %sum_loc"   --->   Operation 83 'load' 'sum_loc_load' <Predicate = (targetBlock)> <Delay = 0.00>
ST_4 : Operation 84 [1/1] (0.00ns)   --->   "%sum_29_4_loc_load = load i32 %sum_29_4_loc"   --->   Operation 84 'load' 'sum_29_4_loc_load' <Predicate = (!targetBlock)> <Delay = 0.00>
ST_4 : Operation 85 [1/1] (0.41ns)   --->   "%select_ln38 = select i1 %targetBlock, i32 %sum_loc_load, i32 %sum_29_4_loc_load" [lenet_support.cpp:38]   --->   Operation 85 'select' 'select_ln38' <Predicate = true> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : [1/1] (0.71ns)   --->   Input mux for Operation 86 '%tmp_14 = fcmp_ogt  i32 %select_ln38, i32 0'
ST_4 : Operation 86 [2/2] (1.85ns)   --->   "%tmp_14 = fcmp_ogt  i32 %select_ln38, i32 0" [lenet_support.cpp:7->lenet_support.cpp:47]   --->   Operation 86 'fcmp' 'tmp_14' <Predicate = true> <Delay = 1.85> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.57> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 87 [1/1] (0.00ns)   --->   "%or_ln34 = or i5 %select_ln33, i5 1" [lenet_support.cpp:34]   --->   Operation 87 'or' 'or_ln34' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 88 [2/2] (0.00ns)   --->   "%targetBlock2 = call i1 @conv2d_Pipeline_VITIS_LOOP_38_45, i32 %gmem, i8 %mul_ln32, i64 %filters_read, i10 %select_ln33_4, i5 %or_ln34, i64 %input_read, i8 %add_ln32_2, i5 %select_ln33_6, i5 %select_ln33, i32 %sum_12_loc, i32 %sum_36_4_loc" [lenet_support.cpp:32]   --->   Operation 88 'call' 'targetBlock2' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 5 <SV = 4> <Delay = 4.08>
ST_5 : Operation 89 [1/1] (0.00ns)   --->   "%zext_ln34 = zext i5 %select_ln33" [lenet_support.cpp:34]   --->   Operation 89 'zext' 'zext_ln34' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 90 [1/1] (0.00ns)   --->   "%bitcast_ln7 = bitcast i32 %select_ln38" [lenet_support.cpp:7->lenet_support.cpp:47]   --->   Operation 90 'bitcast' 'bitcast_ln7' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 91 [1/1] (0.00ns)   --->   "%tmp_s = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln7, i32 23, i32 30" [lenet_support.cpp:7->lenet_support.cpp:47]   --->   Operation 91 'partselect' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 92 [1/1] (0.00ns)   --->   "%trunc_ln7 = trunc i32 %bitcast_ln7" [lenet_support.cpp:7->lenet_support.cpp:47]   --->   Operation 92 'trunc' 'trunc_ln7' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 93 [1/1] (0.70ns)   --->   "%icmp_ln7 = icmp_ne  i8 %tmp_s, i8 255" [lenet_support.cpp:7->lenet_support.cpp:47]   --->   Operation 93 'icmp' 'icmp_ln7' <Predicate = true> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 94 [1/1] (0.88ns)   --->   "%icmp_ln7_9 = icmp_eq  i23 %trunc_ln7, i23 0" [lenet_support.cpp:7->lenet_support.cpp:47]   --->   Operation 94 'icmp' 'icmp_ln7_9' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 95 [1/1] (0.00ns) (grouped into LUT with out node select_ln7)   --->   "%or_ln7 = or i1 %icmp_ln7_9, i1 %icmp_ln7" [lenet_support.cpp:7->lenet_support.cpp:47]   --->   Operation 95 'or' 'or_ln7' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 96 [1/2] (2.57ns)   --->   "%tmp_14 = fcmp_ogt  i32 %select_ln38, i32 0" [lenet_support.cpp:7->lenet_support.cpp:47]   --->   Operation 96 'fcmp' 'tmp_14' <Predicate = true> <Delay = 2.57> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.57> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 97 [1/1] (0.00ns) (grouped into LUT with out node select_ln7)   --->   "%and_ln7 = and i1 %or_ln7, i1 %tmp_14" [lenet_support.cpp:7->lenet_support.cpp:47]   --->   Operation 97 'and' 'and_ln7' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 98 [1/1] (0.41ns) (out node of the LUT)   --->   "%select_ln7 = select i1 %and_ln7, i32 %select_ln38, i32 0" [lenet_support.cpp:7->lenet_support.cpp:47]   --->   Operation 98 'select' 'select_ln7' <Predicate = true> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 99 [1/1] (0.78ns)   --->   "%add_ln47 = add i13 %zext_ln34, i13 %select_ln33_5" [lenet_support.cpp:47]   --->   Operation 99 'add' 'add_ln47' <Predicate = true> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 100 [1/1] (0.00ns)   --->   "%zext_ln47 = zext i13 %add_ln47" [lenet_support.cpp:47]   --->   Operation 100 'zext' 'zext_ln47' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 101 [1/1] (0.00ns)   --->   "%output_addr = getelementptr i32 %output_r, i64 0, i64 %zext_ln47" [lenet_support.cpp:47]   --->   Operation 101 'getelementptr' 'output_addr' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 102 [1/1] (1.09ns)   --->   "%store_ln47 = store i32 %select_ln7, i13 %output_addr" [lenet_support.cpp:47]   --->   Operation 102 'store' 'store_ln47' <Predicate = true> <Delay = 1.09> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4704> <RAM>
ST_5 : Operation 103 [1/1] (0.00ns)   --->   "%zext_ln38 = zext i5 %or_ln34" [lenet_support.cpp:38]   --->   Operation 103 'zext' 'zext_ln38' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 104 [1/2] (0.00ns)   --->   "%targetBlock2 = call i1 @conv2d_Pipeline_VITIS_LOOP_38_45, i32 %gmem, i8 %mul_ln32, i64 %filters_read, i10 %select_ln33_4, i5 %or_ln34, i64 %input_read, i8 %add_ln32_2, i5 %select_ln33_6, i5 %select_ln33, i32 %sum_12_loc, i32 %sum_36_4_loc" [lenet_support.cpp:32]   --->   Operation 104 'call' 'targetBlock2' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 105 [1/1] (0.78ns)   --->   "%add_ln47_2 = add i13 %zext_ln38, i13 %select_ln33_5" [lenet_support.cpp:47]   --->   Operation 105 'add' 'add_ln47_2' <Predicate = true> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 2.98>
ST_6 : Operation 106 [1/1] (0.00ns)   --->   "%sum_12_loc_load = load i32 %sum_12_loc"   --->   Operation 106 'load' 'sum_12_loc_load' <Predicate = (targetBlock2)> <Delay = 0.00>
ST_6 : Operation 107 [1/1] (0.00ns)   --->   "%sum_36_4_loc_load = load i32 %sum_36_4_loc"   --->   Operation 107 'load' 'sum_36_4_loc_load' <Predicate = (!targetBlock2)> <Delay = 0.00>
ST_6 : Operation 108 [1/1] (0.41ns)   --->   "%select_ln38_2 = select i1 %targetBlock2, i32 %sum_12_loc_load, i32 %sum_36_4_loc_load" [lenet_support.cpp:38]   --->   Operation 108 'select' 'select_ln38_2' <Predicate = true> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : [1/1] (0.71ns)   --->   Input mux for Operation 109 '%tmp_16 = fcmp_ogt  i32 %select_ln38_2, i32 0'
ST_6 : Operation 109 [2/2] (1.85ns)   --->   "%tmp_16 = fcmp_ogt  i32 %select_ln38_2, i32 0" [lenet_support.cpp:7->lenet_support.cpp:47]   --->   Operation 109 'fcmp' 'tmp_16' <Predicate = true> <Delay = 1.85> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.57> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 4.08>
ST_7 : Operation 110 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @VITIS_LOOP_32_1_VITIS_LOOP_33_2_VITIS_LOOP_34_3_str"   --->   Operation 110 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 111 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 2352, i64 2352, i64 2352"   --->   Operation 111 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 112 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @VITIS_LOOP_33_2_VITIS_LOOP_34_3_str"   --->   Operation 112 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 113 [1/1] (0.00ns)   --->   "%specloopname_ln34 = specloopname void @_ssdm_op_SpecLoopName, void @empty_20" [lenet_support.cpp:34]   --->   Operation 113 'specloopname' 'specloopname_ln34' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 114 [1/1] (0.00ns)   --->   "%bitcast_ln7_4 = bitcast i32 %select_ln38_2" [lenet_support.cpp:7->lenet_support.cpp:47]   --->   Operation 114 'bitcast' 'bitcast_ln7_4' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 115 [1/1] (0.00ns)   --->   "%tmp_15 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln7_4, i32 23, i32 30" [lenet_support.cpp:7->lenet_support.cpp:47]   --->   Operation 115 'partselect' 'tmp_15' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 116 [1/1] (0.00ns)   --->   "%trunc_ln7_4 = trunc i32 %bitcast_ln7_4" [lenet_support.cpp:7->lenet_support.cpp:47]   --->   Operation 116 'trunc' 'trunc_ln7_4' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 117 [1/1] (0.70ns)   --->   "%icmp_ln7_10 = icmp_ne  i8 %tmp_15, i8 255" [lenet_support.cpp:7->lenet_support.cpp:47]   --->   Operation 117 'icmp' 'icmp_ln7_10' <Predicate = true> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 118 [1/1] (0.88ns)   --->   "%icmp_ln7_11 = icmp_eq  i23 %trunc_ln7_4, i23 0" [lenet_support.cpp:7->lenet_support.cpp:47]   --->   Operation 118 'icmp' 'icmp_ln7_11' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 119 [1/1] (0.00ns) (grouped into LUT with out node select_ln7_4)   --->   "%or_ln7_4 = or i1 %icmp_ln7_11, i1 %icmp_ln7_10" [lenet_support.cpp:7->lenet_support.cpp:47]   --->   Operation 119 'or' 'or_ln7_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 120 [1/2] (2.57ns)   --->   "%tmp_16 = fcmp_ogt  i32 %select_ln38_2, i32 0" [lenet_support.cpp:7->lenet_support.cpp:47]   --->   Operation 120 'fcmp' 'tmp_16' <Predicate = true> <Delay = 2.57> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.57> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 121 [1/1] (0.00ns) (grouped into LUT with out node select_ln7_4)   --->   "%and_ln7_4 = and i1 %or_ln7_4, i1 %tmp_16" [lenet_support.cpp:7->lenet_support.cpp:47]   --->   Operation 121 'and' 'and_ln7_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 122 [1/1] (0.41ns) (out node of the LUT)   --->   "%select_ln7_4 = select i1 %and_ln7_4, i32 %select_ln38_2, i32 0" [lenet_support.cpp:7->lenet_support.cpp:47]   --->   Operation 122 'select' 'select_ln7_4' <Predicate = true> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 123 [1/1] (0.00ns)   --->   "%zext_ln47_2 = zext i13 %add_ln47_2" [lenet_support.cpp:47]   --->   Operation 123 'zext' 'zext_ln47_2' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 124 [1/1] (0.00ns)   --->   "%output_addr_2 = getelementptr i32 %output_r, i64 0, i64 %zext_ln47_2" [lenet_support.cpp:47]   --->   Operation 124 'getelementptr' 'output_addr_2' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 125 [1/1] (1.09ns)   --->   "%store_ln47 = store i32 %select_ln7_4, i13 %output_addr_2" [lenet_support.cpp:47]   --->   Operation 125 'store' 'store_ln47' <Predicate = true> <Delay = 1.09> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4704> <RAM>
ST_7 : Operation 126 [1/1] (0.00ns)   --->   "%br_ln34 = br void %VITIS_LOOP_38_4.0" [lenet_support.cpp:34]   --->   Operation 126 'br' 'br_ln34' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 0.402ns
The critical path consists of the following:
	'alloca' operation ('indvar_flatten45') [9]  (0.000 ns)
	'store' operation ('store_ln32', lenet_support.cpp:32) of constant 0 on local variable 'indvar_flatten45' [17]  (0.402 ns)

 <State 2>: 3.764ns
The critical path consists of the following:
	'load' operation ('f', lenet_support.cpp:32) on local variable 'f' [25]  (0.000 ns)
	'add' operation ('add_ln32_3', lenet_support.cpp:32) [47]  (0.615 ns)
	'mul' operation ('p_mid119', lenet_support.cpp:32) [52]  (1.980 ns)
	'select' operation ('select_ln32_3', lenet_support.cpp:32) [53]  (0.000 ns)
	'add' operation ('p_mid16', lenet_support.cpp:33) [71]  (0.787 ns)
	'select' operation ('select_ln33_5', lenet_support.cpp:33) [72]  (0.383 ns)

 <State 3>: 0.000ns
The critical path consists of the following:

 <State 4>: 2.986ns
The critical path consists of the following:
	'load' operation ('sum_loc_load') on local variable 'sum_loc' [77]  (0.000 ns)
	'select' operation ('x', lenet_support.cpp:38) [79]  (0.412 ns)
	multiplexor before operation 'fcmp' with delay (0.718 ns)
'fcmp' operation ('tmp_14', lenet_support.cpp:7->lenet_support.cpp:47) [86]  (1.856 ns)

 <State 5>: 4.085ns
The critical path consists of the following:
	'fcmp' operation ('tmp_14', lenet_support.cpp:7->lenet_support.cpp:47) [86]  (2.574 ns)
	'and' operation ('and_ln7', lenet_support.cpp:7->lenet_support.cpp:47) [87]  (0.000 ns)
	'select' operation ('select_ln7', lenet_support.cpp:7->lenet_support.cpp:47) [88]  (0.412 ns)
	'store' operation ('store_ln47', lenet_support.cpp:47) of variable 'select_ln7', lenet_support.cpp:7->lenet_support.cpp:47 on array 'output_r' [92]  (1.099 ns)

 <State 6>: 2.986ns
The critical path consists of the following:
	'load' operation ('sum_12_loc_load') on local variable 'sum_12_loc' [96]  (0.000 ns)
	'select' operation ('x', lenet_support.cpp:38) [98]  (0.412 ns)
	multiplexor before operation 'fcmp' with delay (0.718 ns)
'fcmp' operation ('tmp_16', lenet_support.cpp:7->lenet_support.cpp:47) [105]  (1.856 ns)

 <State 7>: 4.085ns
The critical path consists of the following:
	'fcmp' operation ('tmp_16', lenet_support.cpp:7->lenet_support.cpp:47) [105]  (2.574 ns)
	'and' operation ('and_ln7_4', lenet_support.cpp:7->lenet_support.cpp:47) [106]  (0.000 ns)
	'select' operation ('select_ln7_4', lenet_support.cpp:7->lenet_support.cpp:47) [107]  (0.412 ns)
	'store' operation ('store_ln47', lenet_support.cpp:47) of variable 'select_ln7_4', lenet_support.cpp:7->lenet_support.cpp:47 on array 'output_r' [111]  (1.099 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
