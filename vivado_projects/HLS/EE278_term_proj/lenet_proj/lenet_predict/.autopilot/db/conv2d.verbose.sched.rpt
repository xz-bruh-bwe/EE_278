

================================================================
== Vitis HLS Report for 'conv2d'
================================================================
* Date:           Thu Nov 21 22:02:59 2024

* Version:        2023.1 (Build 3854077 on May  4 2023)
* Project:        lenet_proj
* Solution:       lenet_predict (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu7ev-ffvf1517-3-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.427 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+--------+--------+---------+
    |  Latency (cycles) |  Latency (absolute) |     Interval    | Pipeline|
    |   min   |   max   |    min   |    max   |   min  |   max  |   Type  |
    +---------+---------+----------+----------+--------+--------+---------+
    |   241601|   241601|  2.416 ms|  2.416 ms|  241601|  241601|       no|
    +---------+---------+----------+----------+--------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                                                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |                     Loop Name                     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_30_1_VITIS_LOOP_31_2_VITIS_LOOP_32_3  |   241600|   241600|       302|          -|          -|   800|        no|
        +---------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 11
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.40>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%j = alloca i32 1"   --->   Operation 12 'alloca' 'j' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 13 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%indvar_flatten = alloca i32 1"   --->   Operation 14 'alloca' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%f = alloca i32 1"   --->   Operation 15 'alloca' 'f' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%indvar_flatten26 = alloca i32 1"   --->   Operation 16 'alloca' 'indvar_flatten26' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%sum_29_4_loc = alloca i64 1"   --->   Operation 17 'alloca' 'sum_29_4_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%sum_10_loc = alloca i64 1"   --->   Operation 18 'alloca' 'sum_10_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%sum_22_4_loc = alloca i64 1"   --->   Operation 19 'alloca' 'sum_22_4_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%sum_loc = alloca i64 1"   --->   Operation 20 'alloca' 'sum_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.40ns)   --->   "%store_ln30 = store i10 0, i10 %indvar_flatten26" [lenet_support.cpp:30]   --->   Operation 21 'store' 'store_ln30' <Predicate = true> <Delay = 0.40>
ST_1 : Operation 22 [1/1] (0.40ns)   --->   "%store_ln30 = store i5 0, i5 %f" [lenet_support.cpp:30]   --->   Operation 22 'store' 'store_ln30' <Predicate = true> <Delay = 0.40>
ST_1 : Operation 23 [1/1] (0.40ns)   --->   "%store_ln30 = store i7 0, i7 %indvar_flatten" [lenet_support.cpp:30]   --->   Operation 23 'store' 'store_ln30' <Predicate = true> <Delay = 0.40>
ST_1 : Operation 24 [1/1] (0.40ns)   --->   "%store_ln30 = store i4 0, i4 %i" [lenet_support.cpp:30]   --->   Operation 24 'store' 'store_ln30' <Predicate = true> <Delay = 0.40>
ST_1 : Operation 25 [1/1] (0.40ns)   --->   "%store_ln30 = store i4 0, i4 %j" [lenet_support.cpp:30]   --->   Operation 25 'store' 'store_ln30' <Predicate = true> <Delay = 0.40>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%br_ln30 = br void %VITIS_LOOP_35_4.0" [lenet_support.cpp:30]   --->   Operation 26 'br' 'br_ln30' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 3.86>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%i_11 = load i4 %i"   --->   Operation 27 'load' 'i_11' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%f_2 = load i5 %f" [lenet_support.cpp:30]   --->   Operation 28 'load' 'f_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%indvar_flatten26_load = load i10 %indvar_flatten26" [lenet_support.cpp:30]   --->   Operation 29 'load' 'indvar_flatten26_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%zext_ln31 = zext i5 %f_2" [lenet_support.cpp:31]   --->   Operation 30 'zext' 'zext_ln31' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (1.61ns)   --->   "%mul_ln31 = mul i11 %zext_ln31, i11 100" [lenet_support.cpp:31]   --->   Operation 31 'mul' 'mul_ln31' <Predicate = true> <Delay = 1.61> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 1.61> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%p_shl = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %i_11, i3 0"   --->   Operation 32 'bitconcatenate' 'p_shl' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%p_shl_cast = zext i7 %p_shl"   --->   Operation 33 'zext' 'p_shl_cast' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%p_shl1 = bitconcatenate i5 @_ssdm_op_BitConcatenate.i5.i4.i1, i4 %i_11, i1 0"   --->   Operation 34 'bitconcatenate' 'p_shl1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%p_shl1_cast = zext i5 %p_shl1"   --->   Operation 35 'zext' 'p_shl1_cast' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp = add i11 %p_shl1_cast, i11 %mul_ln31" [lenet_support.cpp:31]   --->   Operation 36 'add' 'tmp' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.41> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 37 [1/1] (0.83ns) (root node of TernaryAdder)   --->   "%empty = add i11 %tmp, i11 %p_shl_cast" [lenet_support.cpp:31]   --->   Operation 37 'add' 'empty' <Predicate = true> <Delay = 0.83> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.41> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 38 [1/1] (0.73ns)   --->   "%icmp_ln30 = icmp_eq  i10 %indvar_flatten26_load, i10 800" [lenet_support.cpp:30]   --->   Operation 38 'icmp' 'icmp_ln30' <Predicate = true> <Delay = 0.73> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.73ns)   --->   "%add_ln30 = add i10 %indvar_flatten26_load, i10 1" [lenet_support.cpp:30]   --->   Operation 39 'add' 'add_ln30' <Predicate = true> <Delay = 0.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%br_ln30 = br i1 %icmp_ln30, void %for.inc48, void %for.end50" [lenet_support.cpp:30]   --->   Operation 40 'br' 'br_ln30' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%j_load = load i4 %j" [lenet_support.cpp:32]   --->   Operation 41 'load' 'j_load' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%indvar_flatten_load = load i7 %indvar_flatten" [lenet_support.cpp:31]   --->   Operation 42 'load' 'indvar_flatten_load' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.70ns)   --->   "%icmp_ln31 = icmp_eq  i7 %indvar_flatten_load, i7 50" [lenet_support.cpp:31]   --->   Operation 43 'icmp' 'icmp_ln31' <Predicate = (!icmp_ln30)> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.18ns)   --->   "%select_ln31 = select i1 %icmp_ln31, i4 0, i4 %i_11" [lenet_support.cpp:31]   --->   Operation 44 'select' 'select_ln31' <Predicate = (!icmp_ln30)> <Delay = 0.18> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.00ns) (grouped into LUT with out node select_ln31_8)   --->   "%select_ln31_5 = select i1 %icmp_ln31, i4 0, i4 %j_load" [lenet_support.cpp:31]   --->   Operation 45 'select' 'select_ln31_5' <Predicate = (!icmp_ln30)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.71ns)   --->   "%add_ln30_2 = add i5 %f_2, i5 1" [lenet_support.cpp:30]   --->   Operation 46 'add' 'add_ln30_2' <Predicate = (!icmp_ln30)> <Delay = 0.71> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%zext_ln31_1 = zext i5 %add_ln30_2" [lenet_support.cpp:31]   --->   Operation 47 'zext' 'zext_ln31_1' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (1.61ns)   --->   "%mul_ln31_1 = mul i11 %zext_ln31_1, i11 100" [lenet_support.cpp:31]   --->   Operation 48 'mul' 'mul_ln31_1' <Predicate = (!icmp_ln30)> <Delay = 1.61> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 1.61> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (0.35ns)   --->   "%select_ln31_6 = select i1 %icmp_ln31, i11 %mul_ln31_1, i11 %mul_ln31" [lenet_support.cpp:31]   --->   Operation 49 'select' 'select_ln31_6' <Predicate = (!icmp_ln30)> <Delay = 0.35> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (0.00ns) (grouped into LUT with out node select_ln31_9)   --->   "%select_ln31_7 = select i1 %icmp_ln31, i11 %mul_ln31_1, i11 %empty" [lenet_support.cpp:31]   --->   Operation 50 'select' 'select_ln31_7' <Predicate = (!icmp_ln30)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (0.72ns)   --->   "%icmp_ln32 = icmp_ult  i4 %j_load, i4 10" [lenet_support.cpp:32]   --->   Operation 51 'icmp' 'icmp_ln32' <Predicate = (!icmp_ln30)> <Delay = 0.72> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 52 [1/1] (0.25ns)   --->   "%or_ln31 = or i1 %icmp_ln31, i1 %icmp_ln32" [lenet_support.cpp:31]   --->   Operation 52 'or' 'or_ln31' <Predicate = (!icmp_ln30)> <Delay = 0.25> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 53 [1/1] (0.19ns)   --->   "%select_ln30 = select i1 %icmp_ln31, i5 %add_ln30_2, i5 %f_2" [lenet_support.cpp:30]   --->   Operation 53 'select' 'select_ln30' <Predicate = (!icmp_ln30)> <Delay = 0.19> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.19> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (0.72ns)   --->   "%add_ln31 = add i4 %select_ln31, i4 1" [lenet_support.cpp:31]   --->   Operation 54 'add' 'add_ln31' <Predicate = (!icmp_ln30)> <Delay = 0.72> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 55 [1/1] (0.18ns) (out node of the LUT)   --->   "%select_ln31_8 = select i1 %or_ln31, i4 %select_ln31_5, i4 0" [lenet_support.cpp:31]   --->   Operation 55 'select' 'select_ln31_8' <Predicate = (!icmp_ln30)> <Delay = 0.18> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 56 [1/1] (0.00ns)   --->   "%p_shl_mid1 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %add_ln31, i3 0" [lenet_support.cpp:31]   --->   Operation 56 'bitconcatenate' 'p_shl_mid1' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%p_shl_cast_mid1 = zext i7 %p_shl_mid1" [lenet_support.cpp:31]   --->   Operation 57 'zext' 'p_shl_cast_mid1' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "%p_shl1_mid1 = bitconcatenate i5 @_ssdm_op_BitConcatenate.i5.i4.i1, i4 %add_ln31, i1 0" [lenet_support.cpp:31]   --->   Operation 58 'bitconcatenate' 'p_shl1_mid1' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_2 : Operation 59 [1/1] (0.00ns)   --->   "%p_shl1_cast_mid1 = zext i5 %p_shl1_mid1" [lenet_support.cpp:31]   --->   Operation 59 'zext' 'p_shl1_cast_mid1' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_2 : Operation 60 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp_mid1 = add i11 %p_shl1_cast_mid1, i11 %select_ln31_6" [lenet_support.cpp:31]   --->   Operation 60 'add' 'tmp_mid1' <Predicate = (!icmp_ln30)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.41> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 61 [1/1] (0.83ns) (root node of TernaryAdder)   --->   "%p_mid1 = add i11 %tmp_mid1, i11 %p_shl_cast_mid1" [lenet_support.cpp:31]   --->   Operation 61 'add' 'p_mid1' <Predicate = (!icmp_ln30)> <Delay = 0.83> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.41> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 62 [1/1] (0.35ns) (out node of the LUT)   --->   "%select_ln31_9 = select i1 %or_ln31, i11 %select_ln31_7, i11 %p_mid1" [lenet_support.cpp:31]   --->   Operation 62 'select' 'select_ln31_9' <Predicate = (!icmp_ln30)> <Delay = 0.35> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 63 [1/1] (0.18ns)   --->   "%select_ln31_10 = select i1 %or_ln31, i4 %select_ln31, i4 %add_ln31" [lenet_support.cpp:31]   --->   Operation 63 'select' 'select_ln31_10' <Predicate = (!icmp_ln30)> <Delay = 0.18> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 64 [2/2] (0.00ns)   --->   "%targetBlock = call i1 @conv2d_Pipeline_VITIS_LOOP_35_4, i4 %select_ln31_10, i4 %select_ln31_8, i32 %input_r, i32 %sum_loc, i32 %sum_22_4_loc" [lenet_support.cpp:31]   --->   Operation 64 'call' 'targetBlock' <Predicate = (!icmp_ln30)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 65 [1/1] (0.72ns)   --->   "%add_ln32 = add i4 %select_ln31_8, i4 2" [lenet_support.cpp:32]   --->   Operation 65 'add' 'add_ln32' <Predicate = (!icmp_ln30)> <Delay = 0.72> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 66 [1/1] (0.70ns)   --->   "%add_ln31_2 = add i7 %indvar_flatten_load, i7 1" [lenet_support.cpp:31]   --->   Operation 66 'add' 'add_ln31_2' <Predicate = (!icmp_ln30)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 67 [1/1] (0.32ns)   --->   "%select_ln31_11 = select i1 %icmp_ln31, i7 1, i7 %add_ln31_2" [lenet_support.cpp:31]   --->   Operation 67 'select' 'select_ln31_11' <Predicate = (!icmp_ln30)> <Delay = 0.32> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.32> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 68 [1/1] (0.40ns)   --->   "%store_ln32 = store i10 %add_ln30, i10 %indvar_flatten26" [lenet_support.cpp:32]   --->   Operation 68 'store' 'store_ln32' <Predicate = (!icmp_ln30)> <Delay = 0.40>
ST_2 : Operation 69 [1/1] (0.40ns)   --->   "%store_ln32 = store i5 %select_ln30, i5 %f" [lenet_support.cpp:32]   --->   Operation 69 'store' 'store_ln32' <Predicate = (!icmp_ln30)> <Delay = 0.40>
ST_2 : Operation 70 [1/1] (0.40ns)   --->   "%store_ln32 = store i7 %select_ln31_11, i7 %indvar_flatten" [lenet_support.cpp:32]   --->   Operation 70 'store' 'store_ln32' <Predicate = (!icmp_ln30)> <Delay = 0.40>
ST_2 : Operation 71 [1/1] (0.40ns)   --->   "%store_ln32 = store i4 %select_ln31_10, i4 %i" [lenet_support.cpp:32]   --->   Operation 71 'store' 'store_ln32' <Predicate = (!icmp_ln30)> <Delay = 0.40>
ST_2 : Operation 72 [1/1] (0.40ns)   --->   "%store_ln32 = store i4 %add_ln32, i4 %j" [lenet_support.cpp:32]   --->   Operation 72 'store' 'store_ln32' <Predicate = (!icmp_ln30)> <Delay = 0.40>
ST_2 : Operation 73 [1/1] (0.00ns)   --->   "%ret_ln46 = ret" [lenet_support.cpp:46]   --->   Operation 73 'ret' 'ret_ln46' <Predicate = (icmp_ln30)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 0.00>
ST_3 : Operation 74 [1/2] (0.00ns)   --->   "%targetBlock = call i1 @conv2d_Pipeline_VITIS_LOOP_35_4, i4 %select_ln31_10, i4 %select_ln31_8, i32 %input_r, i32 %sum_loc, i32 %sum_22_4_loc" [lenet_support.cpp:31]   --->   Operation 74 'call' 'targetBlock' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 4 <SV = 3> <Delay = 6.12>
ST_4 : Operation 75 [1/1] (0.00ns)   --->   "%sum_loc_load = load i32 %sum_loc"   --->   Operation 75 'load' 'sum_loc_load' <Predicate = (targetBlock)> <Delay = 0.00>
ST_4 : Operation 76 [1/1] (0.00ns)   --->   "%sum_22_4_loc_load = load i32 %sum_22_4_loc"   --->   Operation 76 'load' 'sum_22_4_loc_load' <Predicate = (!targetBlock)> <Delay = 0.00>
ST_4 : Operation 77 [1/1] (0.41ns)   --->   "%select_ln35 = select i1 %targetBlock, i32 %sum_loc_load, i32 %sum_22_4_loc_load" [lenet_support.cpp:35]   --->   Operation 77 'select' 'select_ln35' <Predicate = true> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : [1/1] (0.79ns)   --->   Input mux for Operation 78 '%x_assign = fadd i32 %select_ln35, i32 0'
ST_4 : Operation 78 [4/4] (4.91ns)   --->   "%x_assign = fadd i32 %select_ln35, i32 0" [lenet_support.cpp:42]   --->   Operation 78 'fadd' 'x_assign' <Predicate = true> <Delay = 4.91> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 5.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 79 [1/1] (0.00ns)   --->   "%or_ln32 = or i4 %select_ln31_8, i4 1" [lenet_support.cpp:32]   --->   Operation 79 'or' 'or_ln32' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 80 [2/2] (0.00ns)   --->   "%targetBlock2 = call i1 @conv2d_Pipeline_VITIS_LOOP_35_46, i4 %select_ln31_10, i4 %or_ln32, i32 %input_r, i32 %sum_10_loc, i32 %sum_29_4_loc" [lenet_support.cpp:31]   --->   Operation 80 'call' 'targetBlock2' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 5 <SV = 4> <Delay = 5.71>
ST_5 : Operation 81 [3/4] (5.71ns)   --->   "%x_assign = fadd i32 %select_ln35, i32 0" [lenet_support.cpp:42]   --->   Operation 81 'fadd' 'x_assign' <Predicate = true> <Delay = 5.71> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 5.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 82 [1/2] (0.00ns)   --->   "%targetBlock2 = call i1 @conv2d_Pipeline_VITIS_LOOP_35_46, i4 %select_ln31_10, i4 %or_ln32, i32 %input_r, i32 %sum_10_loc, i32 %sum_29_4_loc" [lenet_support.cpp:31]   --->   Operation 82 'call' 'targetBlock2' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 6 <SV = 5> <Delay = 6.12>
ST_6 : Operation 83 [2/4] (5.71ns)   --->   "%x_assign = fadd i32 %select_ln35, i32 0" [lenet_support.cpp:42]   --->   Operation 83 'fadd' 'x_assign' <Predicate = true> <Delay = 5.71> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 5.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 84 [1/1] (0.00ns)   --->   "%sum_10_loc_load = load i32 %sum_10_loc"   --->   Operation 84 'load' 'sum_10_loc_load' <Predicate = (targetBlock2)> <Delay = 0.00>
ST_6 : Operation 85 [1/1] (0.00ns)   --->   "%sum_29_4_loc_load = load i32 %sum_29_4_loc"   --->   Operation 85 'load' 'sum_29_4_loc_load' <Predicate = (!targetBlock2)> <Delay = 0.00>
ST_6 : Operation 86 [1/1] (0.41ns)   --->   "%select_ln35_2 = select i1 %targetBlock2, i32 %sum_10_loc_load, i32 %sum_29_4_loc_load" [lenet_support.cpp:35]   --->   Operation 86 'select' 'select_ln35_2' <Predicate = true> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : [1/1] (0.79ns)   --->   Input mux for Operation 87 '%x_assign_2 = fadd i32 %select_ln35_2, i32 0'
ST_6 : Operation 87 [4/4] (4.91ns)   --->   "%x_assign_2 = fadd i32 %select_ln35_2, i32 0" [lenet_support.cpp:42]   --->   Operation 87 'fadd' 'x_assign_2' <Predicate = true> <Delay = 4.91> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 5.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 5.71>
ST_7 : Operation 88 [1/4] (5.71ns)   --->   "%x_assign = fadd i32 %select_ln35, i32 0" [lenet_support.cpp:42]   --->   Operation 88 'fadd' 'x_assign' <Predicate = true> <Delay = 5.71> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 5.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 89 [3/4] (5.71ns)   --->   "%x_assign_2 = fadd i32 %select_ln35_2, i32 0" [lenet_support.cpp:42]   --->   Operation 89 'fadd' 'x_assign_2' <Predicate = true> <Delay = 5.71> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 5.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 5.71>
ST_8 : [1/1] (0.71ns)   --->   Input mux for Operation 90 '%tmp_32 = fcmp_ogt  i32 %x_assign, i32 0'
ST_8 : Operation 90 [2/2] (1.85ns)   --->   "%tmp_32 = fcmp_ogt  i32 %x_assign, i32 0" [lenet_support.cpp:6->lenet_support.cpp:42]   --->   Operation 90 'fcmp' 'tmp_32' <Predicate = true> <Delay = 1.85> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.57> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 91 [2/4] (5.71ns)   --->   "%x_assign_2 = fadd i32 %select_ln35_2, i32 0" [lenet_support.cpp:42]   --->   Operation 91 'fadd' 'x_assign_2' <Predicate = true> <Delay = 5.71> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 5.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 5.71>
ST_9 : Operation 92 [1/1] (0.00ns)   --->   "%zext_ln32 = zext i4 %select_ln31_8" [lenet_support.cpp:32]   --->   Operation 92 'zext' 'zext_ln32' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 93 [1/1] (0.00ns)   --->   "%bitcast_ln6 = bitcast i32 %x_assign" [lenet_support.cpp:6->lenet_support.cpp:42]   --->   Operation 93 'bitcast' 'bitcast_ln6' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 94 [1/1] (0.00ns)   --->   "%tmp_s = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln6, i32 23, i32 30" [lenet_support.cpp:6->lenet_support.cpp:42]   --->   Operation 94 'partselect' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 95 [1/1] (0.00ns)   --->   "%trunc_ln6 = trunc i32 %bitcast_ln6" [lenet_support.cpp:6->lenet_support.cpp:42]   --->   Operation 95 'trunc' 'trunc_ln6' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 96 [1/1] (0.70ns)   --->   "%icmp_ln6 = icmp_ne  i8 %tmp_s, i8 255" [lenet_support.cpp:6->lenet_support.cpp:42]   --->   Operation 96 'icmp' 'icmp_ln6' <Predicate = true> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 97 [1/1] (0.88ns)   --->   "%icmp_ln6_9 = icmp_eq  i23 %trunc_ln6, i23 0" [lenet_support.cpp:6->lenet_support.cpp:42]   --->   Operation 97 'icmp' 'icmp_ln6_9' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 98 [1/1] (0.00ns) (grouped into LUT with out node select_ln6)   --->   "%or_ln6 = or i1 %icmp_ln6_9, i1 %icmp_ln6" [lenet_support.cpp:6->lenet_support.cpp:42]   --->   Operation 98 'or' 'or_ln6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 99 [1/2] (2.57ns)   --->   "%tmp_32 = fcmp_ogt  i32 %x_assign, i32 0" [lenet_support.cpp:6->lenet_support.cpp:42]   --->   Operation 99 'fcmp' 'tmp_32' <Predicate = true> <Delay = 2.57> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.57> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 100 [1/1] (0.00ns) (grouped into LUT with out node select_ln6)   --->   "%and_ln6 = and i1 %or_ln6, i1 %tmp_32" [lenet_support.cpp:6->lenet_support.cpp:42]   --->   Operation 100 'and' 'and_ln6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 101 [1/1] (0.41ns) (out node of the LUT)   --->   "%select_ln6 = select i1 %and_ln6, i32 %x_assign, i32 0" [lenet_support.cpp:6->lenet_support.cpp:42]   --->   Operation 101 'select' 'select_ln6' <Predicate = true> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 102 [1/1] (0.75ns)   --->   "%add_ln42 = add i11 %zext_ln32, i11 %select_ln31_9" [lenet_support.cpp:42]   --->   Operation 102 'add' 'add_ln42' <Predicate = true> <Delay = 0.75> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 103 [1/1] (0.00ns)   --->   "%zext_ln42 = zext i11 %add_ln42" [lenet_support.cpp:42]   --->   Operation 103 'zext' 'zext_ln42' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 104 [1/1] (0.00ns)   --->   "%output_addr = getelementptr i32 %output_r, i64 0, i64 %zext_ln42" [lenet_support.cpp:42]   --->   Operation 104 'getelementptr' 'output_addr' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 105 [1/1] (1.09ns)   --->   "%store_ln42 = store i32 %select_ln6, i11 %output_addr" [lenet_support.cpp:42]   --->   Operation 105 'store' 'store_ln42' <Predicate = true> <Delay = 1.09> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 1600> <RAM>
ST_9 : Operation 106 [1/1] (0.00ns)   --->   "%zext_ln35 = zext i4 %or_ln32" [lenet_support.cpp:35]   --->   Operation 106 'zext' 'zext_ln35' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 107 [1/4] (5.71ns)   --->   "%x_assign_2 = fadd i32 %select_ln35_2, i32 0" [lenet_support.cpp:42]   --->   Operation 107 'fadd' 'x_assign_2' <Predicate = true> <Delay = 5.71> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 5.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 108 [1/1] (0.75ns)   --->   "%add_ln42_2 = add i11 %zext_ln35, i11 %select_ln31_9" [lenet_support.cpp:42]   --->   Operation 108 'add' 'add_ln42_2' <Predicate = true> <Delay = 0.75> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 2.57>
ST_10 : [1/1] (0.71ns)   --->   Input mux for Operation 109 '%tmp_34 = fcmp_ogt  i32 %x_assign_2, i32 0'
ST_10 : Operation 109 [2/2] (1.85ns)   --->   "%tmp_34 = fcmp_ogt  i32 %x_assign_2, i32 0" [lenet_support.cpp:6->lenet_support.cpp:42]   --->   Operation 109 'fcmp' 'tmp_34' <Predicate = true> <Delay = 1.85> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.57> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 4.08>
ST_11 : Operation 110 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @VITIS_LOOP_30_1_VITIS_LOOP_31_2_VITIS_LOOP_32_3_str"   --->   Operation 110 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 111 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 800, i64 800, i64 800"   --->   Operation 111 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 112 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @VITIS_LOOP_31_2_VITIS_LOOP_32_3_str"   --->   Operation 112 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 113 [1/1] (0.00ns)   --->   "%specloopname_ln32 = specloopname void @_ssdm_op_SpecLoopName, void @empty_16" [lenet_support.cpp:32]   --->   Operation 113 'specloopname' 'specloopname_ln32' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 114 [1/1] (0.00ns)   --->   "%bitcast_ln6_4 = bitcast i32 %x_assign_2" [lenet_support.cpp:6->lenet_support.cpp:42]   --->   Operation 114 'bitcast' 'bitcast_ln6_4' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 115 [1/1] (0.00ns)   --->   "%tmp_33 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln6_4, i32 23, i32 30" [lenet_support.cpp:6->lenet_support.cpp:42]   --->   Operation 115 'partselect' 'tmp_33' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 116 [1/1] (0.00ns)   --->   "%trunc_ln6_4 = trunc i32 %bitcast_ln6_4" [lenet_support.cpp:6->lenet_support.cpp:42]   --->   Operation 116 'trunc' 'trunc_ln6_4' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 117 [1/1] (0.70ns)   --->   "%icmp_ln6_10 = icmp_ne  i8 %tmp_33, i8 255" [lenet_support.cpp:6->lenet_support.cpp:42]   --->   Operation 117 'icmp' 'icmp_ln6_10' <Predicate = true> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 118 [1/1] (0.88ns)   --->   "%icmp_ln6_11 = icmp_eq  i23 %trunc_ln6_4, i23 0" [lenet_support.cpp:6->lenet_support.cpp:42]   --->   Operation 118 'icmp' 'icmp_ln6_11' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 119 [1/1] (0.00ns) (grouped into LUT with out node select_ln6_2)   --->   "%or_ln6_4 = or i1 %icmp_ln6_11, i1 %icmp_ln6_10" [lenet_support.cpp:6->lenet_support.cpp:42]   --->   Operation 119 'or' 'or_ln6_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 120 [1/2] (2.57ns)   --->   "%tmp_34 = fcmp_ogt  i32 %x_assign_2, i32 0" [lenet_support.cpp:6->lenet_support.cpp:42]   --->   Operation 120 'fcmp' 'tmp_34' <Predicate = true> <Delay = 2.57> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.57> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 121 [1/1] (0.00ns) (grouped into LUT with out node select_ln6_2)   --->   "%and_ln6_4 = and i1 %or_ln6_4, i1 %tmp_34" [lenet_support.cpp:6->lenet_support.cpp:42]   --->   Operation 121 'and' 'and_ln6_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 122 [1/1] (0.41ns) (out node of the LUT)   --->   "%select_ln6_2 = select i1 %and_ln6_4, i32 %x_assign_2, i32 0" [lenet_support.cpp:6->lenet_support.cpp:42]   --->   Operation 122 'select' 'select_ln6_2' <Predicate = true> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 123 [1/1] (0.00ns)   --->   "%zext_ln42_2 = zext i11 %add_ln42_2" [lenet_support.cpp:42]   --->   Operation 123 'zext' 'zext_ln42_2' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 124 [1/1] (0.00ns)   --->   "%output_addr_2 = getelementptr i32 %output_r, i64 0, i64 %zext_ln42_2" [lenet_support.cpp:42]   --->   Operation 124 'getelementptr' 'output_addr_2' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 125 [1/1] (1.09ns)   --->   "%store_ln42 = store i32 %select_ln6_2, i11 %output_addr_2" [lenet_support.cpp:42]   --->   Operation 125 'store' 'store_ln42' <Predicate = true> <Delay = 1.09> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 1600> <RAM>
ST_11 : Operation 126 [1/1] (0.00ns)   --->   "%br_ln32 = br void %VITIS_LOOP_35_4.0" [lenet_support.cpp:32]   --->   Operation 126 'br' 'br_ln32' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 0.402ns
The critical path consists of the following:
	'alloca' operation ('indvar_flatten26') [7]  (0.000 ns)
	'store' operation ('store_ln30', lenet_support.cpp:30) of constant 0 on local variable 'indvar_flatten26' [12]  (0.402 ns)

 <State 2>: 3.863ns
The critical path consists of the following:
	'load' operation ('f', lenet_support.cpp:30) on local variable 'f' [20]  (0.000 ns)
	'add' operation ('add_ln30_2', lenet_support.cpp:30) [41]  (0.718 ns)
	'mul' operation ('mul_ln31_1', lenet_support.cpp:31) [43]  (1.610 ns)
	'select' operation ('select_ln31_6', lenet_support.cpp:31) [44]  (0.352 ns)
	'add' operation ('tmp_mid1', lenet_support.cpp:31) [56]  (0.000 ns)
	'add' operation ('p_mid1', lenet_support.cpp:31) [57]  (0.832 ns)
	'select' operation ('select_ln31_9', lenet_support.cpp:31) [58]  (0.352 ns)

 <State 3>: 0.000ns
The critical path consists of the following:

 <State 4>: 6.126ns
The critical path consists of the following:
	'load' operation ('sum_loc_load') on local variable 'sum_loc' [63]  (0.000 ns)
	'select' operation ('select_ln35', lenet_support.cpp:35) [65]  (0.412 ns)
	multiplexor before operation 'fadd' with delay (0.799 ns)
'fadd' operation ('x', lenet_support.cpp:42) [66]  (4.915 ns)

 <State 5>: 5.714ns
The critical path consists of the following:
	'fadd' operation ('x', lenet_support.cpp:42) [66]  (5.714 ns)

 <State 6>: 6.126ns
The critical path consists of the following:
	'load' operation ('sum_10_loc_load') on local variable 'sum_10_loc' [83]  (0.000 ns)
	'select' operation ('select_ln35_2', lenet_support.cpp:35) [85]  (0.412 ns)
	multiplexor before operation 'fadd' with delay (0.799 ns)
'fadd' operation ('x', lenet_support.cpp:42) [86]  (4.915 ns)

 <State 7>: 5.714ns
The critical path consists of the following:
	'fadd' operation ('x', lenet_support.cpp:42) [66]  (5.714 ns)

 <State 8>: 5.714ns
The critical path consists of the following:
	'fadd' operation ('x', lenet_support.cpp:42) [86]  (5.714 ns)

 <State 9>: 5.714ns
The critical path consists of the following:
	'fadd' operation ('x', lenet_support.cpp:42) [86]  (5.714 ns)

 <State 10>: 2.574ns
The critical path consists of the following:
	multiplexor before operation 'fcmp' with delay (0.715 ns)
'fcmp' operation ('tmp_34', lenet_support.cpp:6->lenet_support.cpp:42) [93]  (1.859 ns)

 <State 11>: 4.085ns
The critical path consists of the following:
	'fcmp' operation ('tmp_34', lenet_support.cpp:6->lenet_support.cpp:42) [93]  (2.574 ns)
	'and' operation ('and_ln6_4', lenet_support.cpp:6->lenet_support.cpp:42) [94]  (0.000 ns)
	'select' operation ('select_ln6_2', lenet_support.cpp:6->lenet_support.cpp:42) [95]  (0.412 ns)
	'store' operation ('store_ln42', lenet_support.cpp:42) of variable 'select_ln6_2', lenet_support.cpp:6->lenet_support.cpp:42 on array 'output_r' [99]  (1.099 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
