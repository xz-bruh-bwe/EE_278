-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity lenet_predict_conv2d is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_r_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    input_r_ce0 : OUT STD_LOGIC;
    input_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_r_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    input_r_ce1 : OUT STD_LOGIC;
    input_r_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_r_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    output_r_ce0 : OUT STD_LOGIC;
    output_r_we0 : OUT STD_LOGIC;
    output_r_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_694_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_694_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_694_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_694_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_694_p_ce : OUT STD_LOGIC;
    grp_fu_308_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_308_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_308_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_308_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_308_p_ce : OUT STD_LOGIC;
    grp_fu_303_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_303_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_303_p_opcode : OUT STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_303_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_303_p_ce : OUT STD_LOGIC;
    grp_fu_698_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_698_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_698_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_698_p_ce : OUT STD_LOGIC );
end;


architecture behav of lenet_predict_conv2d is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (10 downto 0) := "00000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (10 downto 0) := "00001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (10 downto 0) := "00010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (10 downto 0) := "00100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv11_64 : STD_LOGIC_VECTOR (10 downto 0) := "00001100100";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv10_320 : STD_LOGIC_VECTOR (9 downto 0) := "1100100000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv7_32 : STD_LOGIC_VECTOR (6 downto 0) := "0110010";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal reg_159 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal select_ln31_8_fu_342_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln31_8_reg_672 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln30_fu_244_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln31_9_fu_387_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln31_9_reg_679 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln31_10_fu_395_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln31_10_reg_685 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_ap_return : STD_LOGIC_VECTOR (0 downto 0);
    signal targetBlock_reg_691 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal select_ln35_fu_455_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal or_ln32_fu_463_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln32_reg_701 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_ap_return : STD_LOGIC_VECTOR (0 downto 0);
    signal targetBlock2_reg_707 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal select_ln35_2_fu_475_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal add_ln42_2_fu_550_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln42_2_reg_717 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_ap_start : STD_LOGIC;
    signal grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_ap_done : STD_LOGIC;
    signal grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_ap_idle : STD_LOGIC;
    signal grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_ap_ready : STD_LOGIC;
    signal grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_input_r_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_input_r_ce0 : STD_LOGIC;
    signal grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_input_r_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_input_r_ce1 : STD_LOGIC;
    signal grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_sum_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_sum_out_ap_vld : STD_LOGIC;
    signal grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_sum_22_4_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_sum_22_4_out_ap_vld : STD_LOGIC;
    signal grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_grp_fu_722_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_grp_fu_722_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_grp_fu_722_p_opcode : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_grp_fu_722_p_ce : STD_LOGIC;
    signal grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_grp_fu_726_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_grp_fu_726_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_grp_fu_726_p_ce : STD_LOGIC;
    signal grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_ap_start : STD_LOGIC;
    signal grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_ap_done : STD_LOGIC;
    signal grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_ap_idle : STD_LOGIC;
    signal grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_ap_ready : STD_LOGIC;
    signal grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_input_r_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_input_r_ce0 : STD_LOGIC;
    signal grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_input_r_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_input_r_ce1 : STD_LOGIC;
    signal grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_sum_10_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_sum_10_out_ap_vld : STD_LOGIC;
    signal grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_sum_29_4_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_sum_29_4_out_ap_vld : STD_LOGIC;
    signal grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_grp_fu_722_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_grp_fu_722_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_grp_fu_722_p_opcode : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_grp_fu_722_p_ce : STD_LOGIC;
    signal grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_grp_fu_726_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_grp_fu_726_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_grp_fu_726_p_ce : STD_LOGIC;
    signal grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_ap_start_reg : STD_LOGIC := '0';
    signal sum_loc_fu_104 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_22_4_loc_fu_100 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_ap_start_reg : STD_LOGIC := '0';
    signal sum_10_loc_fu_96 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_29_4_loc_fu_92 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln42_fu_542_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln42_2_fu_606_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal j_fu_72 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln32_fu_404_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_fu_76 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten_fu_80 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln31_11_fu_416_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal f_fu_84 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln30_fu_328_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten26_fu_88 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln30_fu_250_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln6_fu_528_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln6_2_fu_597_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_149_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal mul_ln31_fu_202_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln31_fu_202_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl_fu_208_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl1_fu_220_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_shl1_cast_fu_228_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln31_fu_202_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_fu_232_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl_cast_fu_216_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln31_fu_262_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln30_2_fu_284_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln31_1_fu_294_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln31_1_fu_294_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln31_1_fu_294_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_fu_238_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln32_fu_316_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln31_fu_268_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln31_fu_322_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln31_5_fu_276_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln31_fu_336_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl_mid1_fu_351_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl1_mid1_fu_363_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_shl1_cast_mid1_fu_371_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln31_6_fu_300_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_mid1_fu_375_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl_cast_mid1_fu_359_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln31_7_fu_308_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_mid1_fu_381_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln31_2_fu_410_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal bitcast_ln6_fu_486_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_490_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln6_fu_500_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln6_9_fu_510_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln6_fu_504_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln6_fu_516_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln6_fu_522_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln32_fu_483_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln42_fu_537_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln35_fu_547_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal bitcast_ln6_4_fu_555_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_33_fu_559_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln6_4_fu_569_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln6_11_fu_579_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln6_10_fu_573_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln6_4_fu_585_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln6_4_fu_591_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_149_ce : STD_LOGIC;
    signal grp_fu_722_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_722_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_722_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_722_ce : STD_LOGIC;
    signal grp_fu_726_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_726_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_726_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal mul_ln31_1_fu_294_p00 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln31_fu_202_p00 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component lenet_predict_conv2d_Pipeline_VITIS_LOOP_35_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        select_ln31_11 : IN STD_LOGIC_VECTOR (3 downto 0);
        zext_ln32_1 : IN STD_LOGIC_VECTOR (3 downto 0);
        input_r_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        input_r_ce0 : OUT STD_LOGIC;
        input_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_r_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        input_r_ce1 : OUT STD_LOGIC;
        input_r_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        sum_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        sum_out_ap_vld : OUT STD_LOGIC;
        sum_22_4_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        sum_22_4_out_ap_vld : OUT STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_722_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_722_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_722_p_opcode : OUT STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_722_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_722_p_ce : OUT STD_LOGIC;
        grp_fu_726_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_726_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_726_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_726_p_ce : OUT STD_LOGIC );
    end component;


    component lenet_predict_conv2d_Pipeline_VITIS_LOOP_35_46 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        select_ln31_11 : IN STD_LOGIC_VECTOR (3 downto 0);
        zext_ln35_2 : IN STD_LOGIC_VECTOR (3 downto 0);
        input_r_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        input_r_ce0 : OUT STD_LOGIC;
        input_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_r_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        input_r_ce1 : OUT STD_LOGIC;
        input_r_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        sum_10_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        sum_10_out_ap_vld : OUT STD_LOGIC;
        sum_29_4_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        sum_29_4_out_ap_vld : OUT STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_722_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_722_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_722_p_opcode : OUT STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_722_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_722_p_ce : OUT STD_LOGIC;
        grp_fu_726_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_726_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_726_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_726_p_ce : OUT STD_LOGIC );
    end component;


    component lenet_predict_fadd_32ns_32ns_32_4_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component lenet_predict_fcmp_32ns_32ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component lenet_predict_mul_5ns_8ns_11_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (4 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component lenet_predict_faddfsub_32ns_32ns_32_4_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component lenet_predict_fmul_32ns_32ns_32_3_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129 : component lenet_predict_conv2d_Pipeline_VITIS_LOOP_35_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_ap_start,
        ap_done => grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_ap_done,
        ap_idle => grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_ap_idle,
        ap_ready => grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_ap_ready,
        select_ln31_11 => select_ln31_10_reg_685,
        zext_ln32_1 => select_ln31_8_reg_672,
        input_r_address0 => grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_input_r_address0,
        input_r_ce0 => grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_input_r_ce0,
        input_r_q0 => input_r_q0,
        input_r_address1 => grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_input_r_address1,
        input_r_ce1 => grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_input_r_ce1,
        input_r_q1 => input_r_q1,
        sum_out => grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_sum_out,
        sum_out_ap_vld => grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_sum_out_ap_vld,
        sum_22_4_out => grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_sum_22_4_out,
        sum_22_4_out_ap_vld => grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_sum_22_4_out_ap_vld,
        ap_return => grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_ap_return,
        grp_fu_722_p_din0 => grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_grp_fu_722_p_din0,
        grp_fu_722_p_din1 => grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_grp_fu_722_p_din1,
        grp_fu_722_p_opcode => grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_grp_fu_722_p_opcode,
        grp_fu_722_p_dout0 => grp_fu_303_p_dout0,
        grp_fu_722_p_ce => grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_grp_fu_722_p_ce,
        grp_fu_726_p_din0 => grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_grp_fu_726_p_din0,
        grp_fu_726_p_din1 => grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_grp_fu_726_p_din1,
        grp_fu_726_p_dout0 => grp_fu_698_p_dout0,
        grp_fu_726_p_ce => grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_grp_fu_726_p_ce);

    grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139 : component lenet_predict_conv2d_Pipeline_VITIS_LOOP_35_46
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_ap_start,
        ap_done => grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_ap_done,
        ap_idle => grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_ap_idle,
        ap_ready => grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_ap_ready,
        select_ln31_11 => select_ln31_10_reg_685,
        zext_ln35_2 => or_ln32_reg_701,
        input_r_address0 => grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_input_r_address0,
        input_r_ce0 => grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_input_r_ce0,
        input_r_q0 => input_r_q0,
        input_r_address1 => grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_input_r_address1,
        input_r_ce1 => grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_input_r_ce1,
        input_r_q1 => input_r_q1,
        sum_10_out => grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_sum_10_out,
        sum_10_out_ap_vld => grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_sum_10_out_ap_vld,
        sum_29_4_out => grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_sum_29_4_out,
        sum_29_4_out_ap_vld => grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_sum_29_4_out_ap_vld,
        ap_return => grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_ap_return,
        grp_fu_722_p_din0 => grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_grp_fu_722_p_din0,
        grp_fu_722_p_din1 => grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_grp_fu_722_p_din1,
        grp_fu_722_p_opcode => grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_grp_fu_722_p_opcode,
        grp_fu_722_p_dout0 => grp_fu_303_p_dout0,
        grp_fu_722_p_ce => grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_grp_fu_722_p_ce,
        grp_fu_726_p_din0 => grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_grp_fu_726_p_din0,
        grp_fu_726_p_din1 => grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_grp_fu_726_p_din1,
        grp_fu_726_p_dout0 => grp_fu_698_p_dout0,
        grp_fu_726_p_ce => grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_grp_fu_726_p_ce);

    mul_5ns_8ns_11_1_1_U52 : component lenet_predict_mul_5ns_8ns_11_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 8,
        dout_WIDTH => 11)
    port map (
        din0 => mul_ln31_fu_202_p0,
        din1 => mul_ln31_fu_202_p1,
        dout => mul_ln31_fu_202_p2);

    mul_5ns_8ns_11_1_1_U53 : component lenet_predict_mul_5ns_8ns_11_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 8,
        dout_WIDTH => 11)
    port map (
        din0 => mul_ln31_1_fu_294_p0,
        din1 => mul_ln31_1_fu_294_p1,
        dout => mul_ln31_1_fu_294_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_ap_ready = ap_const_logic_1)) then 
                    grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln30_fu_244_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_ap_ready = ap_const_logic_1)) then 
                    grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    f_fu_84_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                f_fu_84 <= ap_const_lv5_0;
            elsif (((icmp_ln30_fu_244_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                f_fu_84 <= select_ln30_fu_328_p3;
            end if; 
        end if;
    end process;

    i_fu_76_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_fu_76 <= ap_const_lv4_0;
            elsif (((icmp_ln30_fu_244_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_fu_76 <= select_ln31_10_fu_395_p3;
            end if; 
        end if;
    end process;

    indvar_flatten26_fu_88_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten26_fu_88 <= ap_const_lv10_0;
            elsif (((icmp_ln30_fu_244_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                indvar_flatten26_fu_88 <= add_ln30_fu_250_p2;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_80_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten_fu_80 <= ap_const_lv7_0;
            elsif (((icmp_ln30_fu_244_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                indvar_flatten_fu_80 <= select_ln31_11_fu_416_p3;
            end if; 
        end if;
    end process;

    j_fu_72_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                j_fu_72 <= ap_const_lv4_0;
            elsif (((icmp_ln30_fu_244_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                j_fu_72 <= add_ln32_fu_404_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                add_ln42_2_reg_717 <= add_ln42_2_fu_550_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                    or_ln32_reg_701(3 downto 1) <= or_ln32_fu_463_p2(3 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state7))) then
                reg_159 <= grp_fu_694_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln30_fu_244_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                select_ln31_10_reg_685 <= select_ln31_10_fu_395_p3;
                select_ln31_8_reg_672 <= select_ln31_8_fu_342_p3;
                select_ln31_9_reg_679 <= select_ln31_9_fu_387_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_sum_10_out_ap_vld = ap_const_logic_1))) then
                sum_10_loc_fu_96 <= grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_sum_10_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_sum_22_4_out_ap_vld = ap_const_logic_1))) then
                sum_22_4_loc_fu_100 <= grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_sum_22_4_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_sum_29_4_out_ap_vld = ap_const_logic_1))) then
                sum_29_4_loc_fu_92 <= grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_sum_29_4_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_sum_out_ap_vld = ap_const_logic_1))) then
                sum_loc_fu_104 <= grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_sum_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                targetBlock2_reg_707 <= grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                targetBlock_reg_691 <= grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_ap_return;
            end if;
        end if;
    end process;
    or_ln32_reg_701(0) <= '1';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln30_fu_244_p2, ap_CS_fsm_state3, ap_CS_fsm_state5, grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_ap_done, grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_ap_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln30_fu_244_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXX";
        end case;
    end process;
    add_ln30_2_fu_284_p2 <= std_logic_vector(unsigned(f_fu_84) + unsigned(ap_const_lv5_1));
    add_ln30_fu_250_p2 <= std_logic_vector(unsigned(indvar_flatten26_fu_88) + unsigned(ap_const_lv10_1));
    add_ln31_2_fu_410_p2 <= std_logic_vector(unsigned(indvar_flatten_fu_80) + unsigned(ap_const_lv7_1));
    add_ln31_fu_336_p2 <= std_logic_vector(unsigned(select_ln31_fu_268_p3) + unsigned(ap_const_lv4_1));
    add_ln32_fu_404_p2 <= std_logic_vector(unsigned(select_ln31_8_fu_342_p3) + unsigned(ap_const_lv4_2));
    add_ln42_2_fu_550_p2 <= std_logic_vector(unsigned(zext_ln35_fu_547_p1) + unsigned(select_ln31_9_reg_679));
    add_ln42_fu_537_p2 <= std_logic_vector(unsigned(zext_ln32_fu_483_p1) + unsigned(select_ln31_9_reg_679));
    and_ln6_4_fu_591_p2 <= (or_ln6_4_fu_585_p2 and grp_fu_308_p_dout0);
    and_ln6_fu_522_p2 <= (or_ln6_fu_516_p2 and grp_fu_308_p_dout0);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_ap_done)
    begin
        if ((grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_ap_done)
    begin
        if ((grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln30_fu_244_p2)
    begin
        if ((((icmp_ln30_fu_244_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln30_fu_244_p2)
    begin
        if (((icmp_ln30_fu_244_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln6_4_fu_555_p1 <= reg_159;
    bitcast_ln6_fu_486_p1 <= reg_159;
    empty_fu_238_p2 <= std_logic_vector(unsigned(tmp_fu_232_p2) + unsigned(p_shl_cast_fu_216_p1));
    grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_ap_start <= grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_ap_start_reg;
    grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_ap_start <= grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_ap_start_reg;

    grp_fu_149_ce_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_ap_done, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_ap_done = ap_const_logic_1)))) then 
            grp_fu_149_ce <= ap_const_logic_1;
        else 
            grp_fu_149_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_149_p0_assign_proc : process(select_ln35_fu_455_p3, ap_CS_fsm_state4, select_ln35_2_fu_475_p3, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_149_p0 <= select_ln35_2_fu_475_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_149_p0 <= select_ln35_fu_455_p3;
        else 
            grp_fu_149_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_303_p_ce <= grp_fu_722_ce;
    grp_fu_303_p_din0 <= grp_fu_722_p0;
    grp_fu_303_p_din1 <= grp_fu_722_p1;
    grp_fu_303_p_opcode <= grp_fu_722_opcode(1 - 1 downto 0);
    grp_fu_308_p_ce <= ap_const_logic_1;
    grp_fu_308_p_din0 <= reg_159;
    grp_fu_308_p_din1 <= ap_const_lv32_0;
    grp_fu_308_p_opcode <= ap_const_lv5_2;
    grp_fu_694_p_ce <= grp_fu_149_ce;
    grp_fu_694_p_din0 <= grp_fu_149_p0;
    grp_fu_694_p_din1 <= ap_const_lv32_0;
    grp_fu_694_p_opcode <= ap_const_lv2_0;
    grp_fu_698_p_ce <= grp_fu_726_ce;
    grp_fu_698_p_din0 <= grp_fu_726_p0;
    grp_fu_698_p_din1 <= grp_fu_726_p1;

    grp_fu_722_ce_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state5, grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_grp_fu_722_p_ce, grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_grp_fu_722_p_ce)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_722_ce <= grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_grp_fu_722_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_722_ce <= grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_grp_fu_722_p_ce;
        else 
            grp_fu_722_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_722_opcode_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state5, grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_grp_fu_722_p_opcode, grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_grp_fu_722_p_opcode)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_722_opcode <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_grp_fu_722_p_opcode),2));
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_722_opcode <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_grp_fu_722_p_opcode),2));
        else 
            grp_fu_722_opcode <= "XX";
        end if; 
    end process;


    grp_fu_722_p0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state5, grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_grp_fu_722_p_din0, grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_grp_fu_722_p_din0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_722_p0 <= grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_grp_fu_722_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_722_p0 <= grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_grp_fu_722_p_din0;
        else 
            grp_fu_722_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_722_p1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state5, grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_grp_fu_722_p_din1, grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_grp_fu_722_p_din1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_722_p1 <= grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_grp_fu_722_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_722_p1 <= grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_grp_fu_722_p_din1;
        else 
            grp_fu_722_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_726_ce_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state5, grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_grp_fu_726_p_ce, grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_grp_fu_726_p_ce)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_726_ce <= grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_grp_fu_726_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_726_ce <= grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_grp_fu_726_p_ce;
        else 
            grp_fu_726_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_726_p0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state5, grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_grp_fu_726_p_din0, grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_grp_fu_726_p_din0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_726_p0 <= grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_grp_fu_726_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_726_p0 <= grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_grp_fu_726_p_din0;
        else 
            grp_fu_726_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_726_p1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state5, grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_grp_fu_726_p_din1, grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_grp_fu_726_p_din1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_726_p1 <= grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_grp_fu_726_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_726_p1 <= grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_grp_fu_726_p_din1;
        else 
            grp_fu_726_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln30_fu_244_p2 <= "1" when (indvar_flatten26_fu_88 = ap_const_lv10_320) else "0";
    icmp_ln31_fu_262_p2 <= "1" when (indvar_flatten_fu_80 = ap_const_lv7_32) else "0";
    icmp_ln32_fu_316_p2 <= "1" when (unsigned(j_fu_72) < unsigned(ap_const_lv4_A)) else "0";
    icmp_ln6_10_fu_573_p2 <= "0" when (tmp_33_fu_559_p4 = ap_const_lv8_FF) else "1";
    icmp_ln6_11_fu_579_p2 <= "1" when (trunc_ln6_4_fu_569_p1 = ap_const_lv23_0) else "0";
    icmp_ln6_9_fu_510_p2 <= "1" when (trunc_ln6_fu_500_p1 = ap_const_lv23_0) else "0";
    icmp_ln6_fu_504_p2 <= "0" when (tmp_s_fu_490_p4 = ap_const_lv8_FF) else "1";

    input_r_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state5, grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_input_r_address0, grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_input_r_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            input_r_address0 <= grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_input_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_r_address0 <= grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_input_r_address0;
        else 
            input_r_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    input_r_address1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state5, grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_input_r_address1, grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_input_r_address1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            input_r_address1 <= grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_input_r_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_r_address1 <= grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_input_r_address1;
        else 
            input_r_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    input_r_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state5, grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_input_r_ce0, grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_input_r_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            input_r_ce0 <= grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_input_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_r_ce0 <= grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_input_r_ce0;
        else 
            input_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_r_ce1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state5, grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_input_r_ce1, grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_input_r_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            input_r_ce1 <= grp_conv2d_Pipeline_VITIS_LOOP_35_46_fu_139_input_r_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_r_ce1 <= grp_conv2d_Pipeline_VITIS_LOOP_35_4_fu_129_input_r_ce1;
        else 
            input_r_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    mul_ln31_1_fu_294_p0 <= mul_ln31_1_fu_294_p00(5 - 1 downto 0);
    mul_ln31_1_fu_294_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln30_2_fu_284_p2),11));
    mul_ln31_1_fu_294_p1 <= ap_const_lv11_64(8 - 1 downto 0);
    mul_ln31_fu_202_p0 <= mul_ln31_fu_202_p00(5 - 1 downto 0);
    mul_ln31_fu_202_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(f_fu_84),11));
    mul_ln31_fu_202_p1 <= ap_const_lv11_64(8 - 1 downto 0);
    or_ln31_fu_322_p2 <= (icmp_ln32_fu_316_p2 or icmp_ln31_fu_262_p2);
    or_ln32_fu_463_p2 <= (select_ln31_8_reg_672 or ap_const_lv4_1);
    or_ln6_4_fu_585_p2 <= (icmp_ln6_11_fu_579_p2 or icmp_ln6_10_fu_573_p2);
    or_ln6_fu_516_p2 <= (icmp_ln6_fu_504_p2 or icmp_ln6_9_fu_510_p2);

    output_r_address0_assign_proc : process(ap_CS_fsm_state9, zext_ln42_fu_542_p1, zext_ln42_2_fu_606_p1, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            output_r_address0 <= zext_ln42_2_fu_606_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            output_r_address0 <= zext_ln42_fu_542_p1(11 - 1 downto 0);
        else 
            output_r_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    output_r_ce0_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            output_r_ce0 <= ap_const_logic_1;
        else 
            output_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_r_d0_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state11, select_ln6_fu_528_p3, select_ln6_2_fu_597_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            output_r_d0 <= select_ln6_2_fu_597_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            output_r_d0 <= select_ln6_fu_528_p3;
        else 
            output_r_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_r_we0_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            output_r_we0 <= ap_const_logic_1;
        else 
            output_r_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_mid1_fu_381_p2 <= std_logic_vector(unsigned(tmp_mid1_fu_375_p2) + unsigned(p_shl_cast_mid1_fu_359_p1));
    p_shl1_cast_fu_228_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl1_fu_220_p3),11));
    p_shl1_cast_mid1_fu_371_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl1_mid1_fu_363_p3),11));
    p_shl1_fu_220_p3 <= (i_fu_76 & ap_const_lv1_0);
    p_shl1_mid1_fu_363_p3 <= (add_ln31_fu_336_p2 & ap_const_lv1_0);
    p_shl_cast_fu_216_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl_fu_208_p3),11));
    p_shl_cast_mid1_fu_359_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl_mid1_fu_351_p3),11));
    p_shl_fu_208_p3 <= (i_fu_76 & ap_const_lv3_0);
    p_shl_mid1_fu_351_p3 <= (add_ln31_fu_336_p2 & ap_const_lv3_0);
    select_ln30_fu_328_p3 <= 
        add_ln30_2_fu_284_p2 when (icmp_ln31_fu_262_p2(0) = '1') else 
        f_fu_84;
    select_ln31_10_fu_395_p3 <= 
        select_ln31_fu_268_p3 when (or_ln31_fu_322_p2(0) = '1') else 
        add_ln31_fu_336_p2;
    select_ln31_11_fu_416_p3 <= 
        ap_const_lv7_1 when (icmp_ln31_fu_262_p2(0) = '1') else 
        add_ln31_2_fu_410_p2;
    select_ln31_5_fu_276_p3 <= 
        ap_const_lv4_0 when (icmp_ln31_fu_262_p2(0) = '1') else 
        j_fu_72;
    select_ln31_6_fu_300_p3 <= 
        mul_ln31_1_fu_294_p2 when (icmp_ln31_fu_262_p2(0) = '1') else 
        mul_ln31_fu_202_p2;
    select_ln31_7_fu_308_p3 <= 
        mul_ln31_1_fu_294_p2 when (icmp_ln31_fu_262_p2(0) = '1') else 
        empty_fu_238_p2;
    select_ln31_8_fu_342_p3 <= 
        select_ln31_5_fu_276_p3 when (or_ln31_fu_322_p2(0) = '1') else 
        ap_const_lv4_0;
    select_ln31_9_fu_387_p3 <= 
        select_ln31_7_fu_308_p3 when (or_ln31_fu_322_p2(0) = '1') else 
        p_mid1_fu_381_p2;
    select_ln31_fu_268_p3 <= 
        ap_const_lv4_0 when (icmp_ln31_fu_262_p2(0) = '1') else 
        i_fu_76;
    select_ln35_2_fu_475_p3 <= 
        sum_10_loc_fu_96 when (targetBlock2_reg_707(0) = '1') else 
        sum_29_4_loc_fu_92;
    select_ln35_fu_455_p3 <= 
        sum_loc_fu_104 when (targetBlock_reg_691(0) = '1') else 
        sum_22_4_loc_fu_100;
    select_ln6_2_fu_597_p3 <= 
        reg_159 when (and_ln6_4_fu_591_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln6_fu_528_p3 <= 
        reg_159 when (and_ln6_fu_522_p2(0) = '1') else 
        ap_const_lv32_0;
    tmp_33_fu_559_p4 <= bitcast_ln6_4_fu_555_p1(30 downto 23);
    tmp_fu_232_p2 <= std_logic_vector(unsigned(p_shl1_cast_fu_228_p1) + unsigned(mul_ln31_fu_202_p2));
    tmp_mid1_fu_375_p2 <= std_logic_vector(unsigned(p_shl1_cast_mid1_fu_371_p1) + unsigned(select_ln31_6_fu_300_p3));
    tmp_s_fu_490_p4 <= bitcast_ln6_fu_486_p1(30 downto 23);
    trunc_ln6_4_fu_569_p1 <= bitcast_ln6_4_fu_555_p1(23 - 1 downto 0);
    trunc_ln6_fu_500_p1 <= bitcast_ln6_fu_486_p1(23 - 1 downto 0);
    zext_ln32_fu_483_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln31_8_reg_672),11));
    zext_ln35_fu_547_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln32_reg_701),11));
    zext_ln42_2_fu_606_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln42_2_reg_717),64));
    zext_ln42_fu_542_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln42_fu_537_p2),64));
end behav;
