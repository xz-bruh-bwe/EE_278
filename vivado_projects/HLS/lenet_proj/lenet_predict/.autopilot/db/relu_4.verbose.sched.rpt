

================================================================
== Vitis HLS Report for 'relu_4'
================================================================
* Date:           Tue Nov 26 16:15:35 2024

* Version:        2023.1 (Build 3854077 on May  4 2023)
* Project:        lenet_proj
* Solution:       lenet_predict (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu7ev-ffvf1517-3-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  4.085 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       87|       87|  0.870 us|  0.870 us|   87|   87|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_87_1  |       85|       85|         3|          1|          1|    84|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 1 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.10>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 6 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.40ns)   --->   "%store_ln87 = store i7 0, i7 %i" [lenet_proj/lenet_support_1.cpp:87]   --->   Operation 7 'store' 'store_ln87' <Predicate = true> <Delay = 0.40>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%br_ln87 = br void %for.body" [lenet_proj/lenet_support_1.cpp:87]   --->   Operation 8 'br' 'br_ln87' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%i_3 = load i7 %i" [lenet_proj/lenet_support_1.cpp:87]   --->   Operation 9 'load' 'i_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.70ns)   --->   "%icmp_ln87 = icmp_eq  i7 %i_3, i7 84" [lenet_proj/lenet_support_1.cpp:87]   --->   Operation 10 'icmp' 'icmp_ln87' <Predicate = true> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 84, i64 84, i64 84"   --->   Operation 11 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.70ns)   --->   "%add_ln87 = add i7 %i_3, i7 1" [lenet_proj/lenet_support_1.cpp:87]   --->   Operation 12 'add' 'add_ln87' <Predicate = true> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%br_ln87 = br i1 %icmp_ln87, void %for.body.split, void %for.end" [lenet_proj/lenet_support_1.cpp:87]   --->   Operation 13 'br' 'br_ln87' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%zext_ln87 = zext i7 %i_3" [lenet_proj/lenet_support_1.cpp:87]   --->   Operation 14 'zext' 'zext_ln87' <Predicate = (!icmp_ln87)> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%input_addr = getelementptr i32 %input_r, i64 0, i64 %zext_ln87" [lenet_proj/lenet_support_1.cpp:89]   --->   Operation 15 'getelementptr' 'input_addr' <Predicate = (!icmp_ln87)> <Delay = 0.00>
ST_1 : Operation 16 [2/2] (1.09ns)   --->   "%input_load = load i7 %input_addr" [lenet_proj/lenet_support_1.cpp:89]   --->   Operation 16 'load' 'input_load' <Predicate = (!icmp_ln87)> <Delay = 1.09> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 84> <RAM>
ST_1 : Operation 17 [1/1] (0.40ns)   --->   "%store_ln87 = store i7 %add_ln87, i7 %i" [lenet_proj/lenet_support_1.cpp:87]   --->   Operation 17 'store' 'store_ln87' <Predicate = (!icmp_ln87)> <Delay = 0.40>

State 2 <SV = 1> <Delay = 3.67>
ST_2 : Operation 18 [1/2] (1.09ns)   --->   "%input_load = load i7 %input_addr" [lenet_proj/lenet_support_1.cpp:89]   --->   Operation 18 'load' 'input_load' <Predicate = true> <Delay = 1.09> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 84> <RAM>
ST_2 : [1/1] (0.59ns)   --->   Input mux for Operation 19 '%tmp_4 = fcmp_ogt  i32 %input_load, i32 0'
ST_2 : Operation 19 [2/2] (1.98ns)   --->   "%tmp_4 = fcmp_ogt  i32 %input_load, i32 0" [lenet_proj/lenet_support_1.cpp:89]   --->   Operation 19 'fcmp' 'tmp_4' <Predicate = true> <Delay = 1.98> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.57> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%ret_ln91 = ret" [lenet_proj/lenet_support_1.cpp:91]   --->   Operation 33 'ret' 'ret_ln91' <Predicate = (icmp_ln87)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 4.08>
ST_3 : Operation 20 [1/1] (0.00ns)   --->   "%specpipeline_ln88 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_21" [lenet_proj/lenet_support_1.cpp:88]   --->   Operation 20 'specpipeline' 'specpipeline_ln88' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 21 [1/1] (0.00ns)   --->   "%specloopname_ln87 = specloopname void @_ssdm_op_SpecLoopName, void @empty_12" [lenet_proj/lenet_support_1.cpp:87]   --->   Operation 21 'specloopname' 'specloopname_ln87' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 22 [1/1] (0.00ns)   --->   "%bitcast_ln89 = bitcast i32 %input_load" [lenet_proj/lenet_support_1.cpp:89]   --->   Operation 22 'bitcast' 'bitcast_ln89' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 23 [1/1] (0.00ns)   --->   "%tmp = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln89, i32 23, i32 30" [lenet_proj/lenet_support_1.cpp:89]   --->   Operation 23 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 24 [1/1] (0.00ns)   --->   "%trunc_ln89 = trunc i32 %bitcast_ln89" [lenet_proj/lenet_support_1.cpp:89]   --->   Operation 24 'trunc' 'trunc_ln89' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 25 [1/1] (0.70ns)   --->   "%icmp_ln89 = icmp_ne  i8 %tmp, i8 255" [lenet_proj/lenet_support_1.cpp:89]   --->   Operation 25 'icmp' 'icmp_ln89' <Predicate = true> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 26 [1/1] (0.88ns)   --->   "%icmp_ln89_1 = icmp_eq  i23 %trunc_ln89, i23 0" [lenet_proj/lenet_support_1.cpp:89]   --->   Operation 26 'icmp' 'icmp_ln89_1' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 27 [1/1] (0.00ns) (grouped into LUT with out node select_ln89)   --->   "%or_ln89 = or i1 %icmp_ln89_1, i1 %icmp_ln89" [lenet_proj/lenet_support_1.cpp:89]   --->   Operation 27 'or' 'or_ln89' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 28 [1/2] (2.57ns)   --->   "%tmp_4 = fcmp_ogt  i32 %input_load, i32 0" [lenet_proj/lenet_support_1.cpp:89]   --->   Operation 28 'fcmp' 'tmp_4' <Predicate = true> <Delay = 2.57> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.57> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 29 [1/1] (0.00ns) (grouped into LUT with out node select_ln89)   --->   "%and_ln89 = and i1 %or_ln89, i1 %tmp_4" [lenet_proj/lenet_support_1.cpp:89]   --->   Operation 29 'and' 'and_ln89' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 30 [1/1] (0.41ns) (out node of the LUT)   --->   "%select_ln89 = select i1 %and_ln89, i32 %input_load, i32 0" [lenet_proj/lenet_support_1.cpp:89]   --->   Operation 30 'select' 'select_ln89' <Predicate = true> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 31 [1/1] (1.09ns)   --->   "%store_ln89 = store i32 %select_ln89, i7 %input_addr" [lenet_proj/lenet_support_1.cpp:89]   --->   Operation 31 'store' 'store_ln89' <Predicate = true> <Delay = 1.09> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 84> <RAM>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "%br_ln87 = br void %for.body" [lenet_proj/lenet_support_1.cpp:87]   --->   Operation 32 'br' 'br_ln87' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 1.109ns
The critical path consists of the following:
	'alloca' operation ('i') [2]  (0.000 ns)
	'load' operation ('i', lenet_proj/lenet_support_1.cpp:87) on local variable 'i' [6]  (0.000 ns)
	'add' operation ('add_ln87', lenet_proj/lenet_support_1.cpp:87) [9]  (0.707 ns)
	'store' operation ('store_ln87', lenet_proj/lenet_support_1.cpp:87) of variable 'add_ln87', lenet_proj/lenet_support_1.cpp:87 on local variable 'i' [27]  (0.402 ns)

 <State 2>: 3.673ns
The critical path consists of the following:
	'load' operation ('input_load', lenet_proj/lenet_support_1.cpp:89) on array 'input_r' [16]  (1.099 ns)
	multiplexor before operation 'fcmp' with delay (0.591 ns)
'fcmp' operation ('tmp_4', lenet_proj/lenet_support_1.cpp:89) [23]  (1.983 ns)

 <State 3>: 4.085ns
The critical path consists of the following:
	'fcmp' operation ('tmp_4', lenet_proj/lenet_support_1.cpp:89) [23]  (2.574 ns)
	'and' operation ('and_ln89', lenet_proj/lenet_support_1.cpp:89) [24]  (0.000 ns)
	'select' operation ('select_ln89', lenet_proj/lenet_support_1.cpp:89) [25]  (0.412 ns)
	'store' operation ('store_ln89', lenet_proj/lenet_support_1.cpp:89) of variable 'select_ln89', lenet_proj/lenet_support_1.cpp:89 on array 'input_r' [26]  (1.099 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
