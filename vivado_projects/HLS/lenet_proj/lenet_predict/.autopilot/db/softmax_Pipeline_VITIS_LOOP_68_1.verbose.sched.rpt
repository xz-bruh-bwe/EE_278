

================================================================
== Vitis HLS Report for 'softmax_Pipeline_VITIS_LOOP_68_1'
================================================================
* Date:           Tue Nov 26 16:15:39 2024

* Version:        2023.1 (Build 3854077 on May  4 2023)
* Project:        lenet_proj
* Solution:       lenet_predict (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu7ev-ffvf1517-3-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  3.644 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       13|       13|  0.130 us|  0.130 us|   13|   13|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_68_1  |       11|       11|         3|          1|          1|    10|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 1 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.12>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%max_val = alloca i32 1"   --->   Operation 6 'alloca' 'max_val' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 7 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.40ns)   --->   "%store_ln0 = store i4 0, i4 %i"   --->   Operation 8 'store' 'store_ln0' <Predicate = true> <Delay = 0.40>
ST_1 : Operation 9 [1/1] (0.40ns)   --->   "%store_ln0 = store i32 -3.40282e+38, i32 %max_val"   --->   Operation 9 'store' 'store_ln0' <Predicate = true> <Delay = 0.40>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body"   --->   Operation 10 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%i_2 = load i4 %i" [lenet_proj/lenet_support_1.cpp:68]   --->   Operation 11 'load' 'i_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 12 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.72ns)   --->   "%icmp_ln68 = icmp_eq  i4 %i_2, i4 10" [lenet_proj/lenet_support_1.cpp:68]   --->   Operation 13 'icmp' 'icmp_ln68' <Predicate = true> <Delay = 0.72> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 14 [1/1] (0.72ns)   --->   "%add_ln68 = add i4 %i_2, i4 1" [lenet_proj/lenet_support_1.cpp:68]   --->   Operation 14 'add' 'add_ln68' <Predicate = true> <Delay = 0.72> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%br_ln68 = br i1 %icmp_ln68, void %for.body.split, void %for.inc15.preheader.exitStub" [lenet_proj/lenet_support_1.cpp:68]   --->   Operation 15 'br' 'br_ln68' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%i_cast = zext i4 %i_2" [lenet_proj/lenet_support_1.cpp:68]   --->   Operation 16 'zext' 'i_cast' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%input_addr = getelementptr i32 %input_r, i64 0, i64 %i_cast" [lenet_proj/lenet_support_1.cpp:69]   --->   Operation 17 'getelementptr' 'input_addr' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_1 : Operation 18 [2/2] (0.61ns)   --->   "%max_val_1 = load i4 %input_addr" [lenet_proj/lenet_support_1.cpp:69]   --->   Operation 18 'load' 'max_val_1' <Predicate = (!icmp_ln68)> <Delay = 0.61> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.61> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_1 : Operation 19 [1/1] (0.40ns)   --->   "%store_ln68 = store i4 %add_ln68, i4 %i" [lenet_proj/lenet_support_1.cpp:68]   --->   Operation 19 'store' 'store_ln68' <Predicate = (!icmp_ln68)> <Delay = 0.40>

State 2 <SV = 1> <Delay = 3.18>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%max_val_load_1 = load i32 %max_val" [lenet_proj/lenet_support_1.cpp:69]   --->   Operation 20 'load' 'max_val_load_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/2] (0.61ns)   --->   "%max_val_1 = load i4 %input_addr" [lenet_proj/lenet_support_1.cpp:69]   --->   Operation 21 'load' 'max_val_1' <Predicate = true> <Delay = 0.61> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.61> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_2 : [1/1] (0.59ns)   --->   Input mux for Operation 22 '%tmp_3 = fcmp_ogt  i32 %max_val_1, i32 %max_val_load_1'
ST_2 : Operation 22 [2/2] (1.98ns)   --->   "%tmp_3 = fcmp_ogt  i32 %max_val_1, i32 %max_val_load_1" [lenet_proj/lenet_support_1.cpp:69]   --->   Operation 22 'fcmp' 'tmp_3' <Predicate = true> <Delay = 1.98> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.57> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%max_val_load = load i32 %max_val"   --->   Operation 43 'load' 'max_val_load' <Predicate = (icmp_ln68)> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.floatP0A, i32 %max_val_out, i32 %max_val_load"   --->   Operation 44 'write' 'write_ln0' <Predicate = (icmp_ln68)> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 45 'ret' 'ret_ln0' <Predicate = (icmp_ln68)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 3.64>
ST_3 : Operation 23 [1/1] (0.00ns)   --->   "%speclooptripcount_ln68 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 10, i64 10, i64 10" [lenet_proj/lenet_support_1.cpp:68]   --->   Operation 23 'speclooptripcount' 'speclooptripcount_ln68' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 24 [1/1] (0.00ns)   --->   "%specloopname_ln68 = specloopname void @_ssdm_op_SpecLoopName, void @empty_16" [lenet_proj/lenet_support_1.cpp:68]   --->   Operation 24 'specloopname' 'specloopname_ln68' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 25 [1/1] (0.00ns)   --->   "%bitcast_ln69 = bitcast i32 %max_val_1" [lenet_proj/lenet_support_1.cpp:69]   --->   Operation 25 'bitcast' 'bitcast_ln69' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 26 [1/1] (0.00ns)   --->   "%tmp_1 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln69, i32 23, i32 30" [lenet_proj/lenet_support_1.cpp:69]   --->   Operation 26 'partselect' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 27 [1/1] (0.00ns)   --->   "%trunc_ln69 = trunc i32 %bitcast_ln69" [lenet_proj/lenet_support_1.cpp:69]   --->   Operation 27 'trunc' 'trunc_ln69' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 28 [1/1] (0.00ns)   --->   "%bitcast_ln69_1 = bitcast i32 %max_val_load_1" [lenet_proj/lenet_support_1.cpp:69]   --->   Operation 28 'bitcast' 'bitcast_ln69_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "%tmp_2 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln69_1, i32 23, i32 30" [lenet_proj/lenet_support_1.cpp:69]   --->   Operation 29 'partselect' 'tmp_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 30 [1/1] (0.00ns)   --->   "%trunc_ln69_1 = trunc i32 %bitcast_ln69_1" [lenet_proj/lenet_support_1.cpp:69]   --->   Operation 30 'trunc' 'trunc_ln69_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 31 [1/1] (0.70ns)   --->   "%icmp_ln69 = icmp_ne  i8 %tmp_1, i8 255" [lenet_proj/lenet_support_1.cpp:69]   --->   Operation 31 'icmp' 'icmp_ln69' <Predicate = true> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 32 [1/1] (0.88ns)   --->   "%icmp_ln69_1 = icmp_eq  i23 %trunc_ln69, i23 0" [lenet_proj/lenet_support_1.cpp:69]   --->   Operation 32 'icmp' 'icmp_ln69_1' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 33 [1/1] (0.00ns) (grouped into LUT with out node and_ln69_1)   --->   "%or_ln69 = or i1 %icmp_ln69_1, i1 %icmp_ln69" [lenet_proj/lenet_support_1.cpp:69]   --->   Operation 33 'or' 'or_ln69' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 34 [1/1] (0.70ns)   --->   "%icmp_ln69_2 = icmp_ne  i8 %tmp_2, i8 255" [lenet_proj/lenet_support_1.cpp:69]   --->   Operation 34 'icmp' 'icmp_ln69_2' <Predicate = true> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 35 [1/1] (0.88ns)   --->   "%icmp_ln69_3 = icmp_eq  i23 %trunc_ln69_1, i23 0" [lenet_proj/lenet_support_1.cpp:69]   --->   Operation 35 'icmp' 'icmp_ln69_3' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 36 [1/1] (0.00ns) (grouped into LUT with out node and_ln69_1)   --->   "%or_ln69_1 = or i1 %icmp_ln69_3, i1 %icmp_ln69_2" [lenet_proj/lenet_support_1.cpp:69]   --->   Operation 36 'or' 'or_ln69_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 37 [1/2] (2.57ns)   --->   "%tmp_3 = fcmp_ogt  i32 %max_val_1, i32 %max_val_load_1" [lenet_proj/lenet_support_1.cpp:69]   --->   Operation 37 'fcmp' 'tmp_3' <Predicate = true> <Delay = 2.57> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.57> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 38 [1/1] (0.00ns) (grouped into LUT with out node and_ln69_1)   --->   "%and_ln69 = and i1 %tmp_3, i1 %or_ln69" [lenet_proj/lenet_support_1.cpp:69]   --->   Operation 38 'and' 'and_ln69' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 39 [1/1] (0.25ns) (out node of the LUT)   --->   "%and_ln69_1 = and i1 %and_ln69, i1 %or_ln69_1" [lenet_proj/lenet_support_1.cpp:69]   --->   Operation 39 'and' 'and_ln69_1' <Predicate = true> <Delay = 0.25> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 40 [1/1] (0.41ns) (out node of the LUT)   --->   "%max_val_2 = select i1 %and_ln69_1, i32 %max_val_1, i32 %max_val_load_1" [lenet_proj/lenet_support_1.cpp:69]   --->   Operation 40 'select' 'max_val_2' <Predicate = true> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 41 [1/1] (0.40ns)   --->   "%store_ln68 = store i32 %max_val_2, i32 %max_val" [lenet_proj/lenet_support_1.cpp:68]   --->   Operation 41 'store' 'store_ln68' <Predicate = true> <Delay = 0.40>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "%br_ln68 = br void %for.body" [lenet_proj/lenet_support_1.cpp:68]   --->   Operation 42 'br' 'br_ln68' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 1.125ns
The critical path consists of the following:
	'alloca' operation ('i') [4]  (0.000 ns)
	'load' operation ('i', lenet_proj/lenet_support_1.cpp:68) on local variable 'i' [9]  (0.000 ns)
	'add' operation ('add_ln68', lenet_proj/lenet_support_1.cpp:68) [12]  (0.723 ns)
	'store' operation ('store_ln68', lenet_proj/lenet_support_1.cpp:68) of variable 'add_ln68', lenet_proj/lenet_support_1.cpp:68 on local variable 'i' [37]  (0.402 ns)

 <State 2>: 3.188ns
The critical path consists of the following:
	'load' operation ('max_val', lenet_proj/lenet_support_1.cpp:69) on array 'input_r' [20]  (0.614 ns)
	multiplexor before operation 'fcmp' with delay (0.591 ns)
'fcmp' operation ('tmp_3', lenet_proj/lenet_support_1.cpp:69) [33]  (1.983 ns)

 <State 3>: 3.644ns
The critical path consists of the following:
	'fcmp' operation ('tmp_3', lenet_proj/lenet_support_1.cpp:69) [33]  (2.574 ns)
	'and' operation ('and_ln69', lenet_proj/lenet_support_1.cpp:69) [34]  (0.000 ns)
	'and' operation ('and_ln69_1', lenet_proj/lenet_support_1.cpp:69) [35]  (0.256 ns)
	'select' operation ('max_val', lenet_proj/lenet_support_1.cpp:69) [36]  (0.412 ns)
	'store' operation ('store_ln68', lenet_proj/lenet_support_1.cpp:68) of variable 'max_val', lenet_proj/lenet_support_1.cpp:69 on local variable 'max_val' [38]  (0.402 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
