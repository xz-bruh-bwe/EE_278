

================================================================
== Vitis HLS Report for 'maxpool2d_2'
================================================================
* Date:           Tue Nov 26 16:15:28 2024

* Version:        2023.1 (Build 3854077 on May  4 2023)
* Project:        lenet_proj
* Solution:       lenet_predict (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu7ev-ffvf1517-3-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  5.816 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      159|      159|  1.590 us|  1.590 us|  159|  159|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                                                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |                     Loop Name                     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_32_1_VITIS_LOOP_33_2_VITIS_LOOP_34_3  |      157|      157|         9|          1|          1|   150|       yes|
        +---------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 9


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 9
* Pipeline : 1
  Pipeline-0 : II = 1, D = 9, States = { 1 2 3 4 5 6 7 8 9 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.84>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%j = alloca i32 1"   --->   Operation 12 'alloca' 'j' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 13 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%indvar_flatten = alloca i32 1"   --->   Operation 14 'alloca' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%f = alloca i32 1"   --->   Operation 15 'alloca' 'f' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%indvar_flatten28 = alloca i32 1"   --->   Operation 16 'alloca' 'indvar_flatten28' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.40ns)   --->   "%store_ln32 = store i8 0, i8 %indvar_flatten28" [lenet_proj/lenet_support_1.cpp:32]   --->   Operation 17 'store' 'store_ln32' <Predicate = true> <Delay = 0.40>
ST_1 : Operation 18 [1/1] (0.40ns)   --->   "%store_ln32 = store i3 0, i3 %f" [lenet_proj/lenet_support_1.cpp:32]   --->   Operation 18 'store' 'store_ln32' <Predicate = true> <Delay = 0.40>
ST_1 : Operation 19 [1/1] (0.40ns)   --->   "%store_ln32 = store i6 0, i6 %indvar_flatten" [lenet_proj/lenet_support_1.cpp:32]   --->   Operation 19 'store' 'store_ln32' <Predicate = true> <Delay = 0.40>
ST_1 : Operation 20 [1/1] (0.40ns)   --->   "%store_ln32 = store i3 0, i3 %i" [lenet_proj/lenet_support_1.cpp:32]   --->   Operation 20 'store' 'store_ln32' <Predicate = true> <Delay = 0.40>
ST_1 : Operation 21 [1/1] (0.40ns)   --->   "%store_ln32 = store i3 0, i3 %j" [lenet_proj/lenet_support_1.cpp:32]   --->   Operation 21 'store' 'store_ln32' <Predicate = true> <Delay = 0.40>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%br_ln32 = br void %VITIS_LOOP_36_4" [lenet_proj/lenet_support_1.cpp:32]   --->   Operation 22 'br' 'br_ln32' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%indvar_flatten28_load = load i8 %indvar_flatten28" [lenet_proj/lenet_support_1.cpp:32]   --->   Operation 23 'load' 'indvar_flatten28_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.70ns)   --->   "%icmp_ln32 = icmp_eq  i8 %indvar_flatten28_load, i8 150" [lenet_proj/lenet_support_1.cpp:32]   --->   Operation 24 'icmp' 'icmp_ln32' <Predicate = true> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (0.70ns)   --->   "%add_ln32 = add i8 %indvar_flatten28_load, i8 1" [lenet_proj/lenet_support_1.cpp:32]   --->   Operation 25 'add' 'add_ln32' <Predicate = true> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%br_ln32 = br i1 %icmp_ln32, void %for.inc41, void %for.end43" [lenet_proj/lenet_support_1.cpp:32]   --->   Operation 26 'br' 'br_ln32' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%indvar_flatten_load = load i6 %indvar_flatten" [lenet_proj/lenet_support_1.cpp:33]   --->   Operation 27 'load' 'indvar_flatten_load' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%f_load = load i3 %f" [lenet_proj/lenet_support_1.cpp:32]   --->   Operation 28 'load' 'f_load' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.71ns)   --->   "%icmp_ln33 = icmp_eq  i6 %indvar_flatten_load, i6 25" [lenet_proj/lenet_support_1.cpp:33]   --->   Operation 29 'icmp' 'icmp_ln33' <Predicate = (!icmp_ln32)> <Delay = 0.71> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 30 [1/1] (0.61ns)   --->   "%add_ln32_1 = add i3 %f_load, i3 1" [lenet_proj/lenet_support_1.cpp:32]   --->   Operation 30 'add' 'add_ln32_1' <Predicate = (!icmp_ln32)> <Delay = 0.61> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 31 [1/1] (0.18ns)   --->   "%select_ln32_1 = select i1 %icmp_ln33, i3 %add_ln32_1, i3 %f_load" [lenet_proj/lenet_support_1.cpp:32]   --->   Operation 31 'select' 'select_ln32_1' <Predicate = (!icmp_ln32)> <Delay = 0.18> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%zext_ln32 = zext i3 %select_ln32_1" [lenet_proj/lenet_support_1.cpp:32]   --->   Operation 32 'zext' 'zext_ln32' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_1 : Operation 33 [3/3] (0.94ns) (grouped into DSP with root node empty)   --->   "%mul_ln32 = mul i9 %zext_ln32, i9 100" [lenet_proj/lenet_support_1.cpp:32]   --->   Operation 33 'mul' 'mul_ln32' <Predicate = (!icmp_ln32)> <Delay = 0.94> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%zext_ln32_1 = zext i3 %select_ln32_1" [lenet_proj/lenet_support_1.cpp:32]   --->   Operation 34 'zext' 'zext_ln32_1' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_1 : Operation 35 [3/3] (0.94ns) (grouped into DSP with root node add_ln44_2)   --->   "%mul_ln32_1 = mul i8 %zext_ln32_1, i8 25" [lenet_proj/lenet_support_1.cpp:32]   --->   Operation 35 'mul' 'mul_ln32_1' <Predicate = (!icmp_ln32)> <Delay = 0.94> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 36 [1/1] (0.71ns)   --->   "%add_ln33_1 = add i6 %indvar_flatten_load, i6 1" [lenet_proj/lenet_support_1.cpp:33]   --->   Operation 36 'add' 'add_ln33_1' <Predicate = (!icmp_ln32)> <Delay = 0.71> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 37 [1/1] (0.20ns)   --->   "%select_ln33_4 = select i1 %icmp_ln33, i6 1, i6 %add_ln33_1" [lenet_proj/lenet_support_1.cpp:33]   --->   Operation 37 'select' 'select_ln33_4' <Predicate = (!icmp_ln32)> <Delay = 0.20> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.20> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 38 [1/1] (0.40ns)   --->   "%store_ln34 = store i8 %add_ln32, i8 %indvar_flatten28" [lenet_proj/lenet_support_1.cpp:34]   --->   Operation 38 'store' 'store_ln34' <Predicate = (!icmp_ln32)> <Delay = 0.40>
ST_1 : Operation 39 [1/1] (0.40ns)   --->   "%store_ln34 = store i3 %select_ln32_1, i3 %f" [lenet_proj/lenet_support_1.cpp:34]   --->   Operation 39 'store' 'store_ln34' <Predicate = (!icmp_ln32)> <Delay = 0.40>
ST_1 : Operation 40 [1/1] (0.40ns)   --->   "%store_ln34 = store i6 %select_ln33_4, i6 %indvar_flatten" [lenet_proj/lenet_support_1.cpp:34]   --->   Operation 40 'store' 'store_ln34' <Predicate = (!icmp_ln32)> <Delay = 0.40>

State 2 <SV = 1> <Delay = 0.94>
ST_2 : Operation 41 [2/3] (0.94ns) (grouped into DSP with root node empty)   --->   "%mul_ln32 = mul i9 %zext_ln32, i9 100" [lenet_proj/lenet_support_1.cpp:32]   --->   Operation 41 'mul' 'mul_ln32' <Predicate = (!icmp_ln32)> <Delay = 0.94> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 42 [2/3] (0.94ns) (grouped into DSP with root node add_ln44_2)   --->   "%mul_ln32_1 = mul i8 %zext_ln32_1, i8 25" [lenet_proj/lenet_support_1.cpp:32]   --->   Operation 42 'mul' 'mul_ln32_1' <Predicate = (!icmp_ln32)> <Delay = 0.94> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 3 <SV = 2> <Delay = 2.14>
ST_3 : Operation 43 [1/1] (0.00ns)   --->   "%j_load = load i3 %j" [lenet_proj/lenet_support_1.cpp:34]   --->   Operation 43 'load' 'j_load' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_3 : Operation 44 [1/3] (0.00ns) (grouped into DSP with root node empty)   --->   "%mul_ln32 = mul i9 %zext_ln32, i9 100" [lenet_proj/lenet_support_1.cpp:32]   --->   Operation 44 'mul' 'mul_ln32' <Predicate = (!icmp_ln32)> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 45 [1/3] (0.00ns) (grouped into DSP with root node add_ln44_2)   --->   "%mul_ln32_1 = mul i8 %zext_ln32_1, i8 25" [lenet_proj/lenet_support_1.cpp:32]   --->   Operation 45 'mul' 'mul_ln32_1' <Predicate = (!icmp_ln32)> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 46 [1/1] (0.00ns) (grouped into LUT with out node and_ln32)   --->   "%xor_ln32 = xor i1 %icmp_ln33, i1 1" [lenet_proj/lenet_support_1.cpp:32]   --->   Operation 46 'xor' 'xor_ln32' <Predicate = (!icmp_ln32)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 47 [1/1] (0.61ns)   --->   "%icmp_ln34 = icmp_eq  i3 %j_load, i3 5" [lenet_proj/lenet_support_1.cpp:34]   --->   Operation 47 'icmp' 'icmp_ln34' <Predicate = (!icmp_ln32)> <Delay = 0.61> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 48 [1/1] (0.25ns) (out node of the LUT)   --->   "%and_ln32 = and i1 %icmp_ln34, i1 %xor_ln32" [lenet_proj/lenet_support_1.cpp:32]   --->   Operation 48 'and' 'and_ln32' <Predicate = (!icmp_ln32)> <Delay = 0.25> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 49 [1/1] (0.00ns) (grouped into LUT with out node select_ln33)   --->   "%or_ln33 = or i1 %and_ln32, i1 %icmp_ln33" [lenet_proj/lenet_support_1.cpp:33]   --->   Operation 49 'or' 'or_ln33' <Predicate = (!icmp_ln32)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 50 [1/1] (0.25ns) (out node of the LUT)   --->   "%select_ln33 = select i1 %or_ln33, i3 0, i3 %j_load" [lenet_proj/lenet_support_1.cpp:33]   --->   Operation 50 'select' 'select_ln33' <Predicate = (!icmp_ln32)> <Delay = 0.25> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "%j_cast11 = zext i3 %select_ln33" [lenet_proj/lenet_support_1.cpp:33]   --->   Operation 51 'zext' 'j_cast11' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_3 : Operation 52 [1/1] (0.00ns)   --->   "%tmp_2 = bitconcatenate i4 @_ssdm_op_BitConcatenate.i4.i3.i1, i3 %select_ln33, i1 0" [lenet_proj/lenet_support_1.cpp:33]   --->   Operation 52 'bitconcatenate' 'tmp_2' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "%p_cast = zext i4 %tmp_2" [lenet_proj/lenet_support_1.cpp:33]   --->   Operation 53 'zext' 'p_cast' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_3 : Operation 54 [2/2] (0.54ns) (root node of the DSP)   --->   "%empty = add i9 %p_cast, i9 %mul_ln32" [lenet_proj/lenet_support_1.cpp:33]   --->   Operation 54 'add' 'empty' <Predicate = (!icmp_ln32)> <Delay = 0.54> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 55 [2/2] (0.54ns) (root node of the DSP)   --->   "%add_ln44_2 = add i8 %mul_ln32_1, i8 %j_cast11" [lenet_proj/lenet_support_1.cpp:44]   --->   Operation 55 'add' 'add_ln44_2' <Predicate = (!icmp_ln32)> <Delay = 0.54> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 56 [1/1] (0.61ns)   --->   "%add_ln34 = add i3 %select_ln33, i3 1" [lenet_proj/lenet_support_1.cpp:34]   --->   Operation 56 'add' 'add_ln34' <Predicate = (!icmp_ln32)> <Delay = 0.61> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 57 [1/1] (0.40ns)   --->   "%store_ln34 = store i3 %add_ln34, i3 %j" [lenet_proj/lenet_support_1.cpp:34]   --->   Operation 57 'store' 'store_ln34' <Predicate = (!icmp_ln32)> <Delay = 0.40>

State 4 <SV = 3> <Delay = 2.97>
ST_4 : Operation 58 [1/1] (0.00ns)   --->   "%i_7 = load i3 %i"   --->   Operation 58 'load' 'i_7' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 59 [1/1] (0.00ns)   --->   "%p_shl = bitconcatenate i5 @_ssdm_op_BitConcatenate.i5.i3.i2, i3 %i_7, i2 0"   --->   Operation 59 'bitconcatenate' 'p_shl' <Predicate = (!icmp_ln33 & !and_ln32)> <Delay = 0.00>
ST_4 : Operation 60 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 60 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 61 [1/1] (0.18ns)   --->   "%select_ln32 = select i1 %icmp_ln33, i3 0, i3 %i_7" [lenet_proj/lenet_support_1.cpp:32]   --->   Operation 61 'select' 'select_ln32' <Predicate = (!icmp_ln32)> <Delay = 0.18> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 62 [1/1] (0.00ns) (grouped into LUT with out node select_ln33_2)   --->   "%tmp_1 = bitconcatenate i4 @_ssdm_op_BitConcatenate.i4.i3.i1, i3 %i_7, i1 0"   --->   Operation 62 'bitconcatenate' 'tmp_1' <Predicate = (!icmp_ln32 & !icmp_ln33 & !and_ln32)> <Delay = 0.00>
ST_4 : Operation 63 [1/1] (0.00ns) (grouped into LUT with out node select_ln33_2)   --->   "%select_ln32_2 = select i1 %icmp_ln33, i4 0, i4 %tmp_1" [lenet_proj/lenet_support_1.cpp:32]   --->   Operation 63 'select' 'select_ln32_2' <Predicate = (!icmp_ln32 & !and_ln32)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 64 [1/1] (0.00ns) (grouped into LUT with out node select_ln33_3)   --->   "%select_ln32_3 = select i1 %icmp_ln33, i5 0, i5 %p_shl" [lenet_proj/lenet_support_1.cpp:32]   --->   Operation 64 'select' 'select_ln32_3' <Predicate = (!icmp_ln32 & !and_ln32)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.19> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 65 [1/1] (0.61ns)   --->   "%add_ln33 = add i3 %select_ln32, i3 1" [lenet_proj/lenet_support_1.cpp:33]   --->   Operation 65 'add' 'add_ln33' <Predicate = (!icmp_ln32)> <Delay = 0.61> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 66 [1/1] (0.18ns)   --->   "%select_ln33_1 = select i1 %and_ln32, i3 %add_ln33, i3 %select_ln32" [lenet_proj/lenet_support_1.cpp:33]   --->   Operation 66 'select' 'select_ln33_1' <Predicate = (!icmp_ln32)> <Delay = 0.18> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 67 [1/1] (0.00ns)   --->   "%select_ln33_1_cast = zext i3 %select_ln33_1" [lenet_proj/lenet_support_1.cpp:33]   --->   Operation 67 'zext' 'select_ln33_1_cast' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_4 : Operation 68 [1/1] (0.00ns) (grouped into LUT with out node select_ln33_2)   --->   "%p_mid1 = bitconcatenate i4 @_ssdm_op_BitConcatenate.i4.i3.i1, i3 %add_ln33, i1 0" [lenet_proj/lenet_support_1.cpp:33]   --->   Operation 68 'bitconcatenate' 'p_mid1' <Predicate = (!icmp_ln32 & and_ln32)> <Delay = 0.00>
ST_4 : Operation 69 [1/1] (0.18ns) (out node of the LUT)   --->   "%select_ln33_2 = select i1 %and_ln32, i4 %p_mid1, i4 %select_ln32_2" [lenet_proj/lenet_support_1.cpp:33]   --->   Operation 69 'select' 'select_ln33_2' <Predicate = (!icmp_ln32)> <Delay = 0.18> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 70 [1/1] (0.00ns) (grouped into LUT with out node select_ln33_3)   --->   "%p_shl_mid1 = bitconcatenate i5 @_ssdm_op_BitConcatenate.i5.i3.i2, i3 %add_ln33, i2 0" [lenet_proj/lenet_support_1.cpp:33]   --->   Operation 70 'bitconcatenate' 'p_shl_mid1' <Predicate = (!icmp_ln32 & and_ln32)> <Delay = 0.00>
ST_4 : Operation 71 [1/1] (0.19ns) (out node of the LUT)   --->   "%select_ln33_3 = select i1 %and_ln32, i5 %p_shl_mid1, i5 %select_ln32_3" [lenet_proj/lenet_support_1.cpp:33]   --->   Operation 71 'select' 'select_ln33_3' <Predicate = (!icmp_ln32)> <Delay = 0.19> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.19> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 72 [1/1] (0.00ns)   --->   "%select_ln33_4_cast = zext i5 %select_ln33_3" [lenet_proj/lenet_support_1.cpp:33]   --->   Operation 72 'zext' 'select_ln33_4_cast' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_4 : Operation 73 [1/1] (0.00ns)   --->   "%p_shl1 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i3.i4, i3 %select_ln33_1, i4 0" [lenet_proj/lenet_support_1.cpp:33]   --->   Operation 73 'bitconcatenate' 'p_shl1' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_4 : Operation 74 [1/1] (0.00ns)   --->   "%p_shl1_0_cast = zext i7 %p_shl1" [lenet_proj/lenet_support_1.cpp:33]   --->   Operation 74 'zext' 'p_shl1_0_cast' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_4 : Operation 75 [1/2] (0.54ns) (root node of the DSP)   --->   "%empty = add i9 %p_cast, i9 %mul_ln32" [lenet_proj/lenet_support_1.cpp:33]   --->   Operation 75 'add' 'empty' <Predicate = (!icmp_ln32)> <Delay = 0.54> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 76 [1/1] (0.00ns)   --->   "%zext_ln38 = zext i9 %empty" [lenet_proj/lenet_support_1.cpp:38]   --->   Operation 76 'zext' 'zext_ln38' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_4 : Operation 77 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln38_2 = add i10 %select_ln33_4_cast, i10 %zext_ln38" [lenet_proj/lenet_support_1.cpp:38]   --->   Operation 77 'add' 'add_ln38_2' <Predicate = (!icmp_ln32)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 78 [1/1] (0.87ns) (root node of TernaryAdder)   --->   "%add_ln38 = add i10 %add_ln38_2, i10 %p_shl1_0_cast" [lenet_proj/lenet_support_1.cpp:38]   --->   Operation 78 'add' 'add_ln38' <Predicate = (!icmp_ln32)> <Delay = 0.87> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 79 [1/1] (0.00ns)   --->   "%zext_ln38_1 = zext i10 %add_ln38" [lenet_proj/lenet_support_1.cpp:38]   --->   Operation 79 'zext' 'zext_ln38_1' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_4 : Operation 80 [1/1] (0.00ns)   --->   "%input_addr = getelementptr i32 %input_r, i64 0, i64 %zext_ln38_1" [lenet_proj/lenet_support_1.cpp:38]   --->   Operation 80 'getelementptr' 'input_addr' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_4 : Operation 81 [2/2] (1.09ns)   --->   "%input_load = load i11 %input_addr" [lenet_proj/lenet_support_1.cpp:38]   --->   Operation 81 'load' 'input_load' <Predicate = (!icmp_ln32)> <Delay = 1.09> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 1600> <RAM>
ST_4 : Operation 82 [1/1] (0.00ns)   --->   "%or_ln38 = or i10 %add_ln38, i10 1" [lenet_proj/lenet_support_1.cpp:38]   --->   Operation 82 'or' 'or_ln38' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_4 : Operation 83 [1/1] (0.00ns)   --->   "%zext_ln38_2 = zext i10 %or_ln38" [lenet_proj/lenet_support_1.cpp:38]   --->   Operation 83 'zext' 'zext_ln38_2' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_4 : Operation 84 [1/1] (0.00ns)   --->   "%input_addr_1 = getelementptr i32 %input_r, i64 0, i64 %zext_ln38_2" [lenet_proj/lenet_support_1.cpp:38]   --->   Operation 84 'getelementptr' 'input_addr_1' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_4 : Operation 85 [2/2] (1.09ns)   --->   "%input_load_1 = load i11 %input_addr_1" [lenet_proj/lenet_support_1.cpp:38]   --->   Operation 85 'load' 'input_load_1' <Predicate = (!icmp_ln32)> <Delay = 1.09> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 1600> <RAM>
ST_4 : Operation 86 [1/1] (0.00ns)   --->   "%empty_36 = or i4 %select_ln33_2, i4 1" [lenet_proj/lenet_support_1.cpp:33]   --->   Operation 86 'or' 'empty_36' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_4 : Operation 87 [1/1] (0.00ns)   --->   "%p_shl1_1 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %empty_36, i3 0" [lenet_proj/lenet_support_1.cpp:33]   --->   Operation 87 'bitconcatenate' 'p_shl1_1' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_4 : Operation 88 [1/1] (0.00ns)   --->   "%p_shl1_1_cast = zext i7 %p_shl1_1" [lenet_proj/lenet_support_1.cpp:33]   --->   Operation 88 'zext' 'p_shl1_1_cast' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_4 : Operation 89 [1/1] (0.00ns)   --->   "%p_shl2_1 = bitconcatenate i5 @_ssdm_op_BitConcatenate.i5.i4.i1, i4 %empty_36, i1 0" [lenet_proj/lenet_support_1.cpp:33]   --->   Operation 89 'bitconcatenate' 'p_shl2_1' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_4 : Operation 90 [1/1] (0.00ns)   --->   "%zext_ln38_3 = zext i5 %p_shl2_1" [lenet_proj/lenet_support_1.cpp:38]   --->   Operation 90 'zext' 'zext_ln38_3' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_4 : Operation 91 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln38_3 = add i10 %zext_ln38_3, i10 %zext_ln38" [lenet_proj/lenet_support_1.cpp:38]   --->   Operation 91 'add' 'add_ln38_3' <Predicate = (!icmp_ln32)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 92 [1/1] (0.87ns) (root node of TernaryAdder)   --->   "%add_ln38_1 = add i10 %add_ln38_3, i10 %p_shl1_1_cast" [lenet_proj/lenet_support_1.cpp:38]   --->   Operation 92 'add' 'add_ln38_1' <Predicate = (!icmp_ln32)> <Delay = 0.87> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 93 [1/1] (0.00ns)   --->   "%zext_ln38_4 = zext i10 %add_ln38_1" [lenet_proj/lenet_support_1.cpp:38]   --->   Operation 93 'zext' 'zext_ln38_4' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_4 : Operation 94 [1/1] (0.00ns)   --->   "%input_addr_2 = getelementptr i32 %input_r, i64 0, i64 %zext_ln38_4" [lenet_proj/lenet_support_1.cpp:38]   --->   Operation 94 'getelementptr' 'input_addr_2' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_4 : Operation 95 [2/2] (1.09ns)   --->   "%input_load_2 = load i11 %input_addr_2" [lenet_proj/lenet_support_1.cpp:38]   --->   Operation 95 'load' 'input_load_2' <Predicate = (!icmp_ln32)> <Delay = 1.09> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 1600> <RAM>
ST_4 : Operation 96 [1/1] (0.00ns)   --->   "%or_ln38_1 = or i10 %add_ln38_1, i10 1" [lenet_proj/lenet_support_1.cpp:38]   --->   Operation 96 'or' 'or_ln38_1' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_4 : Operation 97 [1/1] (0.00ns)   --->   "%zext_ln38_5 = zext i10 %or_ln38_1" [lenet_proj/lenet_support_1.cpp:38]   --->   Operation 97 'zext' 'zext_ln38_5' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_4 : Operation 98 [1/1] (0.00ns)   --->   "%input_addr_3 = getelementptr i32 %input_r, i64 0, i64 %zext_ln38_5" [lenet_proj/lenet_support_1.cpp:38]   --->   Operation 98 'getelementptr' 'input_addr_3' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_4 : Operation 99 [2/2] (1.09ns)   --->   "%input_load_3 = load i11 %input_addr_3" [lenet_proj/lenet_support_1.cpp:38]   --->   Operation 99 'load' 'input_load_3' <Predicate = (!icmp_ln32)> <Delay = 1.09> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 1600> <RAM>
ST_4 : Operation 100 [1/1] (0.71ns)   --->   "%add_ln44_1 = add i5 %select_ln33_3, i5 %select_ln33_1_cast" [lenet_proj/lenet_support_1.cpp:44]   --->   Operation 100 'add' 'add_ln44_1' <Predicate = (!icmp_ln32)> <Delay = 0.71> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 101 [1/1] (0.00ns)   --->   "%zext_ln44 = zext i5 %add_ln44_1" [lenet_proj/lenet_support_1.cpp:44]   --->   Operation 101 'zext' 'zext_ln44' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_4 : Operation 102 [1/2] (0.54ns) (root node of the DSP)   --->   "%add_ln44_2 = add i8 %mul_ln32_1, i8 %j_cast11" [lenet_proj/lenet_support_1.cpp:44]   --->   Operation 102 'add' 'add_ln44_2' <Predicate = (!icmp_ln32)> <Delay = 0.54> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 103 [1/1] (0.70ns)   --->   "%add_ln44 = add i8 %add_ln44_2, i8 %zext_ln44" [lenet_proj/lenet_support_1.cpp:44]   --->   Operation 103 'add' 'add_ln44' <Predicate = (!icmp_ln32)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 104 [1/1] (0.40ns)   --->   "%store_ln34 = store i3 %select_ln33_1, i3 %i" [lenet_proj/lenet_support_1.cpp:34]   --->   Operation 104 'store' 'store_ln34' <Predicate = (!icmp_ln32)> <Delay = 0.40>

State 5 <SV = 4> <Delay = 3.67>
ST_5 : Operation 105 [1/2] (1.09ns)   --->   "%input_load = load i11 %input_addr" [lenet_proj/lenet_support_1.cpp:38]   --->   Operation 105 'load' 'input_load' <Predicate = true> <Delay = 1.09> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 1600> <RAM>
ST_5 : [1/1] (0.59ns)   --->   Input mux for Operation 106 '%tmp_8 = fcmp_ogt  i32 %input_load, i32 -3.40282e+38'
ST_5 : Operation 106 [2/2] (1.98ns)   --->   "%tmp_8 = fcmp_ogt  i32 %input_load, i32 -3.40282e+38" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 106 'fcmp' 'tmp_8' <Predicate = true> <Delay = 1.98> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.57> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 107 [1/2] (1.09ns)   --->   "%input_load_1 = load i11 %input_addr_1" [lenet_proj/lenet_support_1.cpp:38]   --->   Operation 107 'load' 'input_load_1' <Predicate = true> <Delay = 1.09> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 1600> <RAM>
ST_5 : Operation 108 [1/2] (1.09ns)   --->   "%input_load_2 = load i11 %input_addr_2" [lenet_proj/lenet_support_1.cpp:38]   --->   Operation 108 'load' 'input_load_2' <Predicate = true> <Delay = 1.09> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 1600> <RAM>
ST_5 : Operation 109 [1/2] (1.09ns)   --->   "%input_load_3 = load i11 %input_addr_3" [lenet_proj/lenet_support_1.cpp:38]   --->   Operation 109 'load' 'input_load_3' <Predicate = true> <Delay = 1.09> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 1600> <RAM>

State 6 <SV = 5> <Delay = 5.56>
ST_6 : Operation 110 [1/1] (0.00ns)   --->   "%bitcast_ln39 = bitcast i32 %input_load" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 110 'bitcast' 'bitcast_ln39' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 111 [1/1] (0.00ns)   --->   "%tmp = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln39, i32 23, i32 30" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 111 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 112 [1/1] (0.00ns)   --->   "%trunc_ln39 = trunc i32 %bitcast_ln39" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 112 'trunc' 'trunc_ln39' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 113 [1/1] (0.70ns)   --->   "%icmp_ln39 = icmp_ne  i8 %tmp, i8 255" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 113 'icmp' 'icmp_ln39' <Predicate = true> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 114 [1/1] (0.88ns)   --->   "%icmp_ln39_1 = icmp_eq  i23 %trunc_ln39, i23 0" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 114 'icmp' 'icmp_ln39_1' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 115 [1/1] (0.00ns) (grouped into LUT with out node select_ln39)   --->   "%or_ln39 = or i1 %icmp_ln39_1, i1 %icmp_ln39" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 115 'or' 'or_ln39' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 116 [1/2] (2.57ns)   --->   "%tmp_8 = fcmp_ogt  i32 %input_load, i32 -3.40282e+38" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 116 'fcmp' 'tmp_8' <Predicate = true> <Delay = 2.57> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.57> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 117 [1/1] (0.00ns) (grouped into LUT with out node select_ln39)   --->   "%and_ln39 = and i1 %or_ln39, i1 %tmp_8" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 117 'and' 'and_ln39' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 118 [1/1] (0.41ns) (out node of the LUT)   --->   "%select_ln39 = select i1 %and_ln39, i32 %input_load, i32 -3.40282e+38" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 118 'select' 'select_ln39' <Predicate = true> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : [1/1] (0.59ns)   --->   Input mux for Operation 119 '%tmp_3 = fcmp_ogt  i32 %input_load_1, i32 %select_ln39'
ST_6 : Operation 119 [2/2] (1.98ns)   --->   "%tmp_3 = fcmp_ogt  i32 %input_load_1, i32 %select_ln39" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 119 'fcmp' 'tmp_3' <Predicate = true> <Delay = 1.98> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.57> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 5.81>
ST_7 : Operation 120 [1/1] (0.00ns)   --->   "%bitcast_ln39_1 = bitcast i32 %input_load_1" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 120 'bitcast' 'bitcast_ln39_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 121 [1/1] (0.00ns)   --->   "%tmp_9 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln39_1, i32 23, i32 30" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 121 'partselect' 'tmp_9' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 122 [1/1] (0.00ns)   --->   "%trunc_ln39_1 = trunc i32 %bitcast_ln39_1" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 122 'trunc' 'trunc_ln39_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 123 [1/1] (0.00ns)   --->   "%bitcast_ln39_2 = bitcast i32 %select_ln39" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 123 'bitcast' 'bitcast_ln39_2' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 124 [1/1] (0.00ns)   --->   "%tmp_s = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln39_2, i32 23, i32 30" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 124 'partselect' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 125 [1/1] (0.00ns)   --->   "%trunc_ln39_2 = trunc i32 %bitcast_ln39_2" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 125 'trunc' 'trunc_ln39_2' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 126 [1/1] (0.70ns)   --->   "%icmp_ln39_2 = icmp_ne  i8 %tmp_9, i8 255" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 126 'icmp' 'icmp_ln39_2' <Predicate = true> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 127 [1/1] (0.88ns)   --->   "%icmp_ln39_3 = icmp_eq  i23 %trunc_ln39_1, i23 0" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 127 'icmp' 'icmp_ln39_3' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 128 [1/1] (0.00ns) (grouped into LUT with out node and_ln39_2)   --->   "%or_ln39_1 = or i1 %icmp_ln39_3, i1 %icmp_ln39_2" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 128 'or' 'or_ln39_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 129 [1/1] (0.70ns)   --->   "%icmp_ln39_4 = icmp_ne  i8 %tmp_s, i8 255" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 129 'icmp' 'icmp_ln39_4' <Predicate = true> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 130 [1/1] (0.88ns)   --->   "%icmp_ln39_5 = icmp_eq  i23 %trunc_ln39_2, i23 0" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 130 'icmp' 'icmp_ln39_5' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 131 [1/1] (0.00ns) (grouped into LUT with out node and_ln39_2)   --->   "%or_ln39_2 = or i1 %icmp_ln39_5, i1 %icmp_ln39_4" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 131 'or' 'or_ln39_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 132 [1/1] (0.00ns) (grouped into LUT with out node and_ln39_2)   --->   "%and_ln39_1 = and i1 %or_ln39_1, i1 %or_ln39_2" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 132 'and' 'and_ln39_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 133 [1/2] (2.57ns)   --->   "%tmp_3 = fcmp_ogt  i32 %input_load_1, i32 %select_ln39" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 133 'fcmp' 'tmp_3' <Predicate = true> <Delay = 2.57> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.57> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 134 [1/1] (0.25ns) (out node of the LUT)   --->   "%and_ln39_2 = and i1 %and_ln39_1, i1 %tmp_3" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 134 'and' 'and_ln39_2' <Predicate = true> <Delay = 0.25> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 135 [1/1] (0.41ns) (out node of the LUT)   --->   "%select_ln39_1 = select i1 %and_ln39_2, i32 %input_load_1, i32 %select_ln39" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 135 'select' 'select_ln39_1' <Predicate = true> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : [1/1] (0.59ns)   --->   Input mux for Operation 136 '%tmp_6 = fcmp_ogt  i32 %input_load_2, i32 %select_ln39_1'
ST_7 : Operation 136 [2/2] (1.98ns)   --->   "%tmp_6 = fcmp_ogt  i32 %input_load_2, i32 %select_ln39_1" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 136 'fcmp' 'tmp_6' <Predicate = true> <Delay = 1.98> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.57> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 5.81>
ST_8 : Operation 137 [1/1] (0.00ns)   --->   "%bitcast_ln39_3 = bitcast i32 %input_load_2" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 137 'bitcast' 'bitcast_ln39_3' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 138 [1/1] (0.00ns)   --->   "%tmp_4 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln39_3, i32 23, i32 30" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 138 'partselect' 'tmp_4' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 139 [1/1] (0.00ns)   --->   "%trunc_ln39_3 = trunc i32 %bitcast_ln39_3" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 139 'trunc' 'trunc_ln39_3' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 140 [1/1] (0.00ns)   --->   "%bitcast_ln39_4 = bitcast i32 %select_ln39_1" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 140 'bitcast' 'bitcast_ln39_4' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 141 [1/1] (0.00ns)   --->   "%tmp_5 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln39_4, i32 23, i32 30" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 141 'partselect' 'tmp_5' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 142 [1/1] (0.00ns)   --->   "%trunc_ln39_4 = trunc i32 %bitcast_ln39_4" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 142 'trunc' 'trunc_ln39_4' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 143 [1/1] (0.70ns)   --->   "%icmp_ln39_6 = icmp_ne  i8 %tmp_4, i8 255" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 143 'icmp' 'icmp_ln39_6' <Predicate = true> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 144 [1/1] (0.88ns)   --->   "%icmp_ln39_7 = icmp_eq  i23 %trunc_ln39_3, i23 0" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 144 'icmp' 'icmp_ln39_7' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 145 [1/1] (0.00ns) (grouped into LUT with out node and_ln39_4)   --->   "%or_ln39_3 = or i1 %icmp_ln39_7, i1 %icmp_ln39_6" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 145 'or' 'or_ln39_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 146 [1/1] (0.70ns)   --->   "%icmp_ln39_8 = icmp_ne  i8 %tmp_5, i8 255" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 146 'icmp' 'icmp_ln39_8' <Predicate = true> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 147 [1/1] (0.88ns)   --->   "%icmp_ln39_9 = icmp_eq  i23 %trunc_ln39_4, i23 0" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 147 'icmp' 'icmp_ln39_9' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 148 [1/1] (0.00ns) (grouped into LUT with out node and_ln39_4)   --->   "%or_ln39_4 = or i1 %icmp_ln39_9, i1 %icmp_ln39_8" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 148 'or' 'or_ln39_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 149 [1/1] (0.00ns) (grouped into LUT with out node and_ln39_4)   --->   "%and_ln39_3 = and i1 %or_ln39_3, i1 %or_ln39_4" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 149 'and' 'and_ln39_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 150 [1/2] (2.57ns)   --->   "%tmp_6 = fcmp_ogt  i32 %input_load_2, i32 %select_ln39_1" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 150 'fcmp' 'tmp_6' <Predicate = true> <Delay = 2.57> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.57> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 151 [1/1] (0.25ns) (out node of the LUT)   --->   "%and_ln39_4 = and i1 %and_ln39_3, i1 %tmp_6" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 151 'and' 'and_ln39_4' <Predicate = true> <Delay = 0.25> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 152 [1/1] (0.41ns) (out node of the LUT)   --->   "%select_ln39_2 = select i1 %and_ln39_4, i32 %input_load_2, i32 %select_ln39_1" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 152 'select' 'select_ln39_2' <Predicate = true> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : [1/1] (0.59ns)   --->   Input mux for Operation 153 '%tmp_11 = fcmp_ogt  i32 %input_load_3, i32 %select_ln39_2'
ST_8 : Operation 153 [2/2] (1.98ns)   --->   "%tmp_11 = fcmp_ogt  i32 %input_load_3, i32 %select_ln39_2" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 153 'fcmp' 'tmp_11' <Predicate = true> <Delay = 1.98> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.57> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 180 [1/1] (0.00ns)   --->   "%ret_ln48 = ret" [lenet_proj/lenet_support_1.cpp:48]   --->   Operation 180 'ret' 'ret_ln48' <Predicate = (icmp_ln32)> <Delay = 0.00>

State 9 <SV = 8> <Delay = 4.34>
ST_9 : Operation 154 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @VITIS_LOOP_32_1_VITIS_LOOP_33_2_VITIS_LOOP_34_3_str"   --->   Operation 154 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 155 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 150, i64 150, i64 150"   --->   Operation 155 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 156 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 156 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 157 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @VITIS_LOOP_33_2_VITIS_LOOP_34_3_str"   --->   Operation 157 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 158 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 158 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 159 [1/1] (0.00ns)   --->   "%specloopname_ln34 = specloopname void @_ssdm_op_SpecLoopName, void @empty_13" [lenet_proj/lenet_support_1.cpp:34]   --->   Operation 159 'specloopname' 'specloopname_ln34' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 160 [1/1] (0.00ns)   --->   "%bitcast_ln39_5 = bitcast i32 %input_load_3" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 160 'bitcast' 'bitcast_ln39_5' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 161 [1/1] (0.00ns)   --->   "%tmp_7 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln39_5, i32 23, i32 30" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 161 'partselect' 'tmp_7' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 162 [1/1] (0.00ns)   --->   "%trunc_ln39_5 = trunc i32 %bitcast_ln39_5" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 162 'trunc' 'trunc_ln39_5' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 163 [1/1] (0.00ns)   --->   "%bitcast_ln39_6 = bitcast i32 %select_ln39_2" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 163 'bitcast' 'bitcast_ln39_6' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 164 [1/1] (0.00ns)   --->   "%tmp_10 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln39_6, i32 23, i32 30" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 164 'partselect' 'tmp_10' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 165 [1/1] (0.00ns)   --->   "%trunc_ln39_6 = trunc i32 %bitcast_ln39_6" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 165 'trunc' 'trunc_ln39_6' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 166 [1/1] (0.70ns)   --->   "%icmp_ln39_10 = icmp_ne  i8 %tmp_7, i8 255" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 166 'icmp' 'icmp_ln39_10' <Predicate = true> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 167 [1/1] (0.88ns)   --->   "%icmp_ln39_11 = icmp_eq  i23 %trunc_ln39_5, i23 0" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 167 'icmp' 'icmp_ln39_11' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 168 [1/1] (0.00ns) (grouped into LUT with out node and_ln39_6)   --->   "%or_ln39_5 = or i1 %icmp_ln39_11, i1 %icmp_ln39_10" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 168 'or' 'or_ln39_5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 169 [1/1] (0.70ns)   --->   "%icmp_ln39_12 = icmp_ne  i8 %tmp_10, i8 255" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 169 'icmp' 'icmp_ln39_12' <Predicate = true> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 170 [1/1] (0.88ns)   --->   "%icmp_ln39_13 = icmp_eq  i23 %trunc_ln39_6, i23 0" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 170 'icmp' 'icmp_ln39_13' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 171 [1/1] (0.00ns) (grouped into LUT with out node and_ln39_6)   --->   "%or_ln39_6 = or i1 %icmp_ln39_13, i1 %icmp_ln39_12" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 171 'or' 'or_ln39_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 172 [1/1] (0.00ns) (grouped into LUT with out node and_ln39_6)   --->   "%and_ln39_5 = and i1 %or_ln39_5, i1 %or_ln39_6" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 172 'and' 'and_ln39_5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 173 [1/2] (2.57ns)   --->   "%tmp_11 = fcmp_ogt  i32 %input_load_3, i32 %select_ln39_2" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 173 'fcmp' 'tmp_11' <Predicate = true> <Delay = 2.57> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.57> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 174 [1/1] (0.25ns) (out node of the LUT)   --->   "%and_ln39_6 = and i1 %and_ln39_5, i1 %tmp_11" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 174 'and' 'and_ln39_6' <Predicate = true> <Delay = 0.25> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 175 [1/1] (0.41ns) (out node of the LUT)   --->   "%select_ln39_3 = select i1 %and_ln39_6, i32 %input_load_3, i32 %select_ln39_2" [lenet_proj/lenet_support_1.cpp:39]   --->   Operation 175 'select' 'select_ln39_3' <Predicate = true> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 176 [1/1] (0.00ns)   --->   "%zext_ln44_1 = zext i8 %add_ln44" [lenet_proj/lenet_support_1.cpp:44]   --->   Operation 176 'zext' 'zext_ln44_1' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 177 [1/1] (0.00ns)   --->   "%output_addr = getelementptr i32 %output_r, i64 0, i64 %zext_ln44_1" [lenet_proj/lenet_support_1.cpp:44]   --->   Operation 177 'getelementptr' 'output_addr' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 178 [1/1] (1.09ns)   --->   "%store_ln44 = store i32 %select_ln39_3, i9 %output_addr" [lenet_proj/lenet_support_1.cpp:44]   --->   Operation 178 'store' 'store_ln44' <Predicate = true> <Delay = 1.09> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 400> <RAM>
ST_9 : Operation 179 [1/1] (0.00ns)   --->   "%br_ln34 = br void %VITIS_LOOP_36_4" [lenet_proj/lenet_support_1.cpp:34]   --->   Operation 179 'br' 'br_ln34' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 1.840ns
The critical path consists of the following:
	'alloca' operation ('indvar_flatten') [5]  (0.000 ns)
	'load' operation ('indvar_flatten_load', lenet_proj/lenet_support_1.cpp:33) on local variable 'indvar_flatten' [24]  (0.000 ns)
	'icmp' operation ('icmp_ln33', lenet_proj/lenet_support_1.cpp:33) [28]  (0.712 ns)
	'select' operation ('select_ln32_1', lenet_proj/lenet_support_1.cpp:32) [31]  (0.188 ns)
	'mul' operation of DSP[61] ('mul_ln32', lenet_proj/lenet_support_1.cpp:32) [33]  (0.940 ns)

 <State 2>: 0.940ns
The critical path consists of the following:
	'mul' operation of DSP[61] ('mul_ln32', lenet_proj/lenet_support_1.cpp:32) [33]  (0.940 ns)

 <State 3>: 2.144ns
The critical path consists of the following:
	'load' operation ('j_load', lenet_proj/lenet_support_1.cpp:34) on local variable 'j' [23]  (0.000 ns)
	'icmp' operation ('icmp_ln34', lenet_proj/lenet_support_1.cpp:34) [41]  (0.615 ns)
	'and' operation ('and_ln32', lenet_proj/lenet_support_1.cpp:32) [42]  (0.256 ns)
	'or' operation ('or_ln33', lenet_proj/lenet_support_1.cpp:33) [45]  (0.000 ns)
	'select' operation ('select_ln33', lenet_proj/lenet_support_1.cpp:33) [46]  (0.256 ns)
	'add' operation ('add_ln34', lenet_proj/lenet_support_1.cpp:34) [150]  (0.615 ns)
	'store' operation ('store_ln34', lenet_proj/lenet_support_1.cpp:34) of variable 'add_ln34', lenet_proj/lenet_support_1.cpp:34 on local variable 'j' [157]  (0.402 ns)

 <State 4>: 2.970ns
The critical path consists of the following:
	'load' operation ('i') on local variable 'i' [15]  (0.000 ns)
	'select' operation ('select_ln32', lenet_proj/lenet_support_1.cpp:32) [29]  (0.188 ns)
	'add' operation ('add_ln33', lenet_proj/lenet_support_1.cpp:33) [43]  (0.615 ns)
	'select' operation ('select_ln33_3', lenet_proj/lenet_support_1.cpp:33) [52]  (0.194 ns)
	'add' operation ('add_ln38_2', lenet_proj/lenet_support_1.cpp:38) [63]  (0.000 ns)
	'add' operation ('add_ln38', lenet_proj/lenet_support_1.cpp:38) [64]  (0.874 ns)
	'getelementptr' operation ('input_addr', lenet_proj/lenet_support_1.cpp:38) [66]  (0.000 ns)
	'load' operation ('input_load', lenet_proj/lenet_support_1.cpp:38) on array 'input_r' [67]  (1.099 ns)

 <State 5>: 3.673ns
The critical path consists of the following:
	'load' operation ('input_load', lenet_proj/lenet_support_1.cpp:38) on array 'input_r' [67]  (1.099 ns)
	multiplexor before operation 'fcmp' with delay (0.591 ns)
'fcmp' operation ('tmp_8', lenet_proj/lenet_support_1.cpp:39) [74]  (1.983 ns)

 <State 6>: 5.560ns
The critical path consists of the following:
	'fcmp' operation ('tmp_8', lenet_proj/lenet_support_1.cpp:39) [74]  (2.574 ns)
	'and' operation ('and_ln39', lenet_proj/lenet_support_1.cpp:39) [75]  (0.000 ns)
	'select' operation ('select_ln39', lenet_proj/lenet_support_1.cpp:39) [76]  (0.412 ns)
	multiplexor before operation 'fcmp' with delay (0.591 ns)
'fcmp' operation ('tmp_3', lenet_proj/lenet_support_1.cpp:39) [94]  (1.983 ns)

 <State 7>: 5.816ns
The critical path consists of the following:
	'fcmp' operation ('tmp_3', lenet_proj/lenet_support_1.cpp:39) [94]  (2.574 ns)
	'and' operation ('and_ln39_2', lenet_proj/lenet_support_1.cpp:39) [95]  (0.256 ns)
	'select' operation ('select_ln39_1', lenet_proj/lenet_support_1.cpp:39) [96]  (0.412 ns)
	multiplexor before operation 'fcmp' with delay (0.591 ns)
'fcmp' operation ('tmp_6', lenet_proj/lenet_support_1.cpp:39) [120]  (1.983 ns)

 <State 8>: 5.816ns
The critical path consists of the following:
	'fcmp' operation ('tmp_6', lenet_proj/lenet_support_1.cpp:39) [120]  (2.574 ns)
	'and' operation ('and_ln39_4', lenet_proj/lenet_support_1.cpp:39) [121]  (0.256 ns)
	'select' operation ('select_ln39_2', lenet_proj/lenet_support_1.cpp:39) [122]  (0.412 ns)
	multiplexor before operation 'fcmp' with delay (0.591 ns)
'fcmp' operation ('tmp_11', lenet_proj/lenet_support_1.cpp:39) [140]  (1.983 ns)

 <State 9>: 4.341ns
The critical path consists of the following:
	'fcmp' operation ('tmp_11', lenet_proj/lenet_support_1.cpp:39) [140]  (2.574 ns)
	'and' operation ('and_ln39_6', lenet_proj/lenet_support_1.cpp:39) [141]  (0.256 ns)
	'select' operation ('select_ln39_3', lenet_proj/lenet_support_1.cpp:39) [142]  (0.412 ns)
	'store' operation ('store_ln44', lenet_proj/lenet_support_1.cpp:44) of variable 'select_ln39_3', lenet_proj/lenet_support_1.cpp:39 on array 'output_r' [149]  (1.099 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
