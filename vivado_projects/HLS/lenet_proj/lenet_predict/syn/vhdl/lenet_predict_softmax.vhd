-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity lenet_predict_softmax is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_r_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    input_r_ce0 : OUT STD_LOGIC;
    input_r_we0 : OUT STD_LOGIC;
    input_r_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    input_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_r_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    input_r_ce1 : OUT STD_LOGIC;
    input_r_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_413_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_413_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_413_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_413_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_413_p_ce : OUT STD_LOGIC;
    grp_fu_405_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_405_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_405_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_405_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_405_p_ce : OUT STD_LOGIC );
end;


architecture behav of lenet_predict_softmax is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal grp_softmax_Pipeline_VITIS_LOOP_68_1_fu_18_ap_start : STD_LOGIC;
    signal grp_softmax_Pipeline_VITIS_LOOP_68_1_fu_18_ap_done : STD_LOGIC;
    signal grp_softmax_Pipeline_VITIS_LOOP_68_1_fu_18_ap_idle : STD_LOGIC;
    signal grp_softmax_Pipeline_VITIS_LOOP_68_1_fu_18_ap_ready : STD_LOGIC;
    signal grp_softmax_Pipeline_VITIS_LOOP_68_1_fu_18_input_r_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_softmax_Pipeline_VITIS_LOOP_68_1_fu_18_input_r_ce0 : STD_LOGIC;
    signal grp_softmax_Pipeline_VITIS_LOOP_68_1_fu_18_max_val_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_softmax_Pipeline_VITIS_LOOP_68_1_fu_18_max_val_out_ap_vld : STD_LOGIC;
    signal grp_softmax_Pipeline_VITIS_LOOP_68_1_fu_18_grp_fu_66_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_softmax_Pipeline_VITIS_LOOP_68_1_fu_18_grp_fu_66_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_softmax_Pipeline_VITIS_LOOP_68_1_fu_18_grp_fu_66_p_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_softmax_Pipeline_VITIS_LOOP_68_1_fu_18_grp_fu_66_p_ce : STD_LOGIC;
    signal grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_ap_start : STD_LOGIC;
    signal grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_ap_done : STD_LOGIC;
    signal grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_ap_idle : STD_LOGIC;
    signal grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_ap_ready : STD_LOGIC;
    signal grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_input_r_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_input_r_ce0 : STD_LOGIC;
    signal grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_input_r_we0 : STD_LOGIC;
    signal grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_input_r_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_sum_exp_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_sum_exp_out_ap_vld : STD_LOGIC;
    signal grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_grp_fu_70_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_grp_fu_70_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_grp_fu_70_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_grp_fu_70_p_ce : STD_LOGIC;
    signal grp_softmax_Pipeline_VITIS_LOOP_80_3_fu_33_ap_start : STD_LOGIC;
    signal grp_softmax_Pipeline_VITIS_LOOP_80_3_fu_33_ap_done : STD_LOGIC;
    signal grp_softmax_Pipeline_VITIS_LOOP_80_3_fu_33_ap_idle : STD_LOGIC;
    signal grp_softmax_Pipeline_VITIS_LOOP_80_3_fu_33_ap_ready : STD_LOGIC;
    signal grp_softmax_Pipeline_VITIS_LOOP_80_3_fu_33_input_r_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_softmax_Pipeline_VITIS_LOOP_80_3_fu_33_input_r_ce0 : STD_LOGIC;
    signal grp_softmax_Pipeline_VITIS_LOOP_80_3_fu_33_input_r_we0 : STD_LOGIC;
    signal grp_softmax_Pipeline_VITIS_LOOP_80_3_fu_33_input_r_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_softmax_Pipeline_VITIS_LOOP_80_3_fu_33_input_r_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_softmax_Pipeline_VITIS_LOOP_80_3_fu_33_input_r_ce1 : STD_LOGIC;
    signal grp_softmax_Pipeline_VITIS_LOOP_68_1_fu_18_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_softmax_Pipeline_VITIS_LOOP_80_3_fu_33_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_fu_66_ce : STD_LOGIC;
    signal grp_fu_70_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component lenet_predict_softmax_Pipeline_VITIS_LOOP_68_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_r_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        input_r_ce0 : OUT STD_LOGIC;
        input_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        max_val_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        max_val_out_ap_vld : OUT STD_LOGIC;
        grp_fu_66_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_66_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_66_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
        grp_fu_66_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_66_p_ce : OUT STD_LOGIC );
    end component;


    component lenet_predict_softmax_Pipeline_VITIS_LOOP_75_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_r_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        input_r_ce0 : OUT STD_LOGIC;
        input_r_we0 : OUT STD_LOGIC;
        input_r_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        max_val_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        sum_exp_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        sum_exp_out_ap_vld : OUT STD_LOGIC;
        grp_fu_70_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_70_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_70_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_70_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_70_p_ce : OUT STD_LOGIC );
    end component;


    component lenet_predict_softmax_Pipeline_VITIS_LOOP_80_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_r_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        input_r_ce0 : OUT STD_LOGIC;
        input_r_we0 : OUT STD_LOGIC;
        input_r_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_r_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        input_r_ce1 : OUT STD_LOGIC;
        input_r_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        sum_exp_reload : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component lenet_predict_fcmp_32ns_32ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component lenet_predict_faddfsub_32ns_32ns_32_4_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_softmax_Pipeline_VITIS_LOOP_68_1_fu_18 : component lenet_predict_softmax_Pipeline_VITIS_LOOP_68_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_softmax_Pipeline_VITIS_LOOP_68_1_fu_18_ap_start,
        ap_done => grp_softmax_Pipeline_VITIS_LOOP_68_1_fu_18_ap_done,
        ap_idle => grp_softmax_Pipeline_VITIS_LOOP_68_1_fu_18_ap_idle,
        ap_ready => grp_softmax_Pipeline_VITIS_LOOP_68_1_fu_18_ap_ready,
        input_r_address0 => grp_softmax_Pipeline_VITIS_LOOP_68_1_fu_18_input_r_address0,
        input_r_ce0 => grp_softmax_Pipeline_VITIS_LOOP_68_1_fu_18_input_r_ce0,
        input_r_q0 => input_r_q0,
        max_val_out => grp_softmax_Pipeline_VITIS_LOOP_68_1_fu_18_max_val_out,
        max_val_out_ap_vld => grp_softmax_Pipeline_VITIS_LOOP_68_1_fu_18_max_val_out_ap_vld,
        grp_fu_66_p_din0 => grp_softmax_Pipeline_VITIS_LOOP_68_1_fu_18_grp_fu_66_p_din0,
        grp_fu_66_p_din1 => grp_softmax_Pipeline_VITIS_LOOP_68_1_fu_18_grp_fu_66_p_din1,
        grp_fu_66_p_opcode => grp_softmax_Pipeline_VITIS_LOOP_68_1_fu_18_grp_fu_66_p_opcode,
        grp_fu_66_p_dout0 => grp_fu_413_p_dout0,
        grp_fu_66_p_ce => grp_softmax_Pipeline_VITIS_LOOP_68_1_fu_18_grp_fu_66_p_ce);

    grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25 : component lenet_predict_softmax_Pipeline_VITIS_LOOP_75_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_ap_start,
        ap_done => grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_ap_done,
        ap_idle => grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_ap_idle,
        ap_ready => grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_ap_ready,
        input_r_address0 => grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_input_r_address0,
        input_r_ce0 => grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_input_r_ce0,
        input_r_we0 => grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_input_r_we0,
        input_r_d0 => grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_input_r_d0,
        input_r_q0 => input_r_q0,
        max_val_reload => grp_softmax_Pipeline_VITIS_LOOP_68_1_fu_18_max_val_out,
        sum_exp_out => grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_sum_exp_out,
        sum_exp_out_ap_vld => grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_sum_exp_out_ap_vld,
        grp_fu_70_p_din0 => grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_grp_fu_70_p_din0,
        grp_fu_70_p_din1 => grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_grp_fu_70_p_din1,
        grp_fu_70_p_opcode => grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_grp_fu_70_p_opcode,
        grp_fu_70_p_dout0 => grp_fu_405_p_dout0,
        grp_fu_70_p_ce => grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_grp_fu_70_p_ce);

    grp_softmax_Pipeline_VITIS_LOOP_80_3_fu_33 : component lenet_predict_softmax_Pipeline_VITIS_LOOP_80_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_softmax_Pipeline_VITIS_LOOP_80_3_fu_33_ap_start,
        ap_done => grp_softmax_Pipeline_VITIS_LOOP_80_3_fu_33_ap_done,
        ap_idle => grp_softmax_Pipeline_VITIS_LOOP_80_3_fu_33_ap_idle,
        ap_ready => grp_softmax_Pipeline_VITIS_LOOP_80_3_fu_33_ap_ready,
        input_r_address0 => grp_softmax_Pipeline_VITIS_LOOP_80_3_fu_33_input_r_address0,
        input_r_ce0 => grp_softmax_Pipeline_VITIS_LOOP_80_3_fu_33_input_r_ce0,
        input_r_we0 => grp_softmax_Pipeline_VITIS_LOOP_80_3_fu_33_input_r_we0,
        input_r_d0 => grp_softmax_Pipeline_VITIS_LOOP_80_3_fu_33_input_r_d0,
        input_r_address1 => grp_softmax_Pipeline_VITIS_LOOP_80_3_fu_33_input_r_address1,
        input_r_ce1 => grp_softmax_Pipeline_VITIS_LOOP_80_3_fu_33_input_r_ce1,
        input_r_q1 => input_r_q1,
        sum_exp_reload => grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_sum_exp_out);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_softmax_Pipeline_VITIS_LOOP_68_1_fu_18_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_softmax_Pipeline_VITIS_LOOP_68_1_fu_18_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_softmax_Pipeline_VITIS_LOOP_68_1_fu_18_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_softmax_Pipeline_VITIS_LOOP_68_1_fu_18_ap_ready = ap_const_logic_1)) then 
                    grp_softmax_Pipeline_VITIS_LOOP_68_1_fu_18_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_ap_ready = ap_const_logic_1)) then 
                    grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_softmax_Pipeline_VITIS_LOOP_80_3_fu_33_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_softmax_Pipeline_VITIS_LOOP_80_3_fu_33_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    grp_softmax_Pipeline_VITIS_LOOP_80_3_fu_33_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_softmax_Pipeline_VITIS_LOOP_80_3_fu_33_ap_ready = ap_const_logic_1)) then 
                    grp_softmax_Pipeline_VITIS_LOOP_80_3_fu_33_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_softmax_Pipeline_VITIS_LOOP_68_1_fu_18_ap_done, grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_ap_done, grp_softmax_Pipeline_VITIS_LOOP_80_3_fu_33_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_softmax_Pipeline_VITIS_LOOP_68_1_fu_18_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((grp_softmax_Pipeline_VITIS_LOOP_80_3_fu_33_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_softmax_Pipeline_VITIS_LOOP_68_1_fu_18_ap_done)
    begin
        if ((grp_softmax_Pipeline_VITIS_LOOP_68_1_fu_18_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_ap_done)
    begin
        if ((grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(grp_softmax_Pipeline_VITIS_LOOP_80_3_fu_33_ap_done)
    begin
        if ((grp_softmax_Pipeline_VITIS_LOOP_80_3_fu_33_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_softmax_Pipeline_VITIS_LOOP_80_3_fu_33_ap_done, ap_CS_fsm_state6)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)) or ((grp_softmax_Pipeline_VITIS_LOOP_80_3_fu_33_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_softmax_Pipeline_VITIS_LOOP_80_3_fu_33_ap_done, ap_CS_fsm_state6)
    begin
        if (((grp_softmax_Pipeline_VITIS_LOOP_80_3_fu_33_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_405_p_ce <= grp_fu_70_ce;
    grp_fu_405_p_din0 <= grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_grp_fu_70_p_din0;
    grp_fu_405_p_din1 <= grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_grp_fu_70_p_din1;
    grp_fu_405_p_opcode <= grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_grp_fu_70_p_opcode;
    grp_fu_413_p_ce <= grp_fu_66_ce;
    grp_fu_413_p_din0 <= grp_softmax_Pipeline_VITIS_LOOP_68_1_fu_18_grp_fu_66_p_din0;
    grp_fu_413_p_din1 <= grp_softmax_Pipeline_VITIS_LOOP_68_1_fu_18_grp_fu_66_p_din1;
    grp_fu_413_p_opcode <= grp_softmax_Pipeline_VITIS_LOOP_68_1_fu_18_grp_fu_66_p_opcode;

    grp_fu_66_ce_assign_proc : process(grp_softmax_Pipeline_VITIS_LOOP_68_1_fu_18_grp_fu_66_p_ce, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_66_ce <= grp_softmax_Pipeline_VITIS_LOOP_68_1_fu_18_grp_fu_66_p_ce;
        else 
            grp_fu_66_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_70_ce_assign_proc : process(grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_grp_fu_70_p_ce, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_70_ce <= grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_grp_fu_70_p_ce;
        else 
            grp_fu_70_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_softmax_Pipeline_VITIS_LOOP_68_1_fu_18_ap_start <= grp_softmax_Pipeline_VITIS_LOOP_68_1_fu_18_ap_start_reg;
    grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_ap_start <= grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_ap_start_reg;
    grp_softmax_Pipeline_VITIS_LOOP_80_3_fu_33_ap_start <= grp_softmax_Pipeline_VITIS_LOOP_80_3_fu_33_ap_start_reg;

    input_r_address0_assign_proc : process(grp_softmax_Pipeline_VITIS_LOOP_68_1_fu_18_input_r_address0, grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_input_r_address0, grp_softmax_Pipeline_VITIS_LOOP_80_3_fu_33_input_r_address0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            input_r_address0 <= grp_softmax_Pipeline_VITIS_LOOP_80_3_fu_33_input_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            input_r_address0 <= grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_input_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_r_address0 <= grp_softmax_Pipeline_VITIS_LOOP_68_1_fu_18_input_r_address0;
        else 
            input_r_address0 <= "XXXX";
        end if; 
    end process;

    input_r_address1 <= grp_softmax_Pipeline_VITIS_LOOP_80_3_fu_33_input_r_address1;

    input_r_ce0_assign_proc : process(grp_softmax_Pipeline_VITIS_LOOP_68_1_fu_18_input_r_ce0, grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_input_r_ce0, grp_softmax_Pipeline_VITIS_LOOP_80_3_fu_33_input_r_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            input_r_ce0 <= grp_softmax_Pipeline_VITIS_LOOP_80_3_fu_33_input_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            input_r_ce0 <= grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_input_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_r_ce0 <= grp_softmax_Pipeline_VITIS_LOOP_68_1_fu_18_input_r_ce0;
        else 
            input_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_r_ce1_assign_proc : process(grp_softmax_Pipeline_VITIS_LOOP_80_3_fu_33_input_r_ce1, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            input_r_ce1 <= grp_softmax_Pipeline_VITIS_LOOP_80_3_fu_33_input_r_ce1;
        else 
            input_r_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_r_d0_assign_proc : process(grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_input_r_d0, grp_softmax_Pipeline_VITIS_LOOP_80_3_fu_33_input_r_d0, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            input_r_d0 <= grp_softmax_Pipeline_VITIS_LOOP_80_3_fu_33_input_r_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            input_r_d0 <= grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_input_r_d0;
        else 
            input_r_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    input_r_we0_assign_proc : process(grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_input_r_we0, grp_softmax_Pipeline_VITIS_LOOP_80_3_fu_33_input_r_we0, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            input_r_we0 <= grp_softmax_Pipeline_VITIS_LOOP_80_3_fu_33_input_r_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            input_r_we0 <= grp_softmax_Pipeline_VITIS_LOOP_75_2_fu_25_input_r_we0;
        else 
            input_r_we0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
