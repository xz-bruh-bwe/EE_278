// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="adap_fir_adap_fir,hls_ip_2023_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z010-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.256000,HLS_SYN_LAT=181,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1669,HLS_SYN_LUT=2264,HLS_VERSION=2023_1}" *)

module adap_fir (
        ap_clk,
        ap_rst_n,
        s_axi_fir_io_AWVALID,
        s_axi_fir_io_AWREADY,
        s_axi_fir_io_AWADDR,
        s_axi_fir_io_WVALID,
        s_axi_fir_io_WREADY,
        s_axi_fir_io_WDATA,
        s_axi_fir_io_WSTRB,
        s_axi_fir_io_ARVALID,
        s_axi_fir_io_ARREADY,
        s_axi_fir_io_ARADDR,
        s_axi_fir_io_RVALID,
        s_axi_fir_io_RREADY,
        s_axi_fir_io_RDATA,
        s_axi_fir_io_RRESP,
        s_axi_fir_io_BVALID,
        s_axi_fir_io_BREADY,
        s_axi_fir_io_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_state2 = 14'd2;
parameter    ap_ST_fsm_state3 = 14'd4;
parameter    ap_ST_fsm_state4 = 14'd8;
parameter    ap_ST_fsm_state5 = 14'd16;
parameter    ap_ST_fsm_state6 = 14'd32;
parameter    ap_ST_fsm_state7 = 14'd64;
parameter    ap_ST_fsm_state8 = 14'd128;
parameter    ap_ST_fsm_state9 = 14'd256;
parameter    ap_ST_fsm_state10 = 14'd512;
parameter    ap_ST_fsm_state11 = 14'd1024;
parameter    ap_ST_fsm_state12 = 14'd2048;
parameter    ap_ST_fsm_state13 = 14'd4096;
parameter    ap_ST_fsm_state14 = 14'd8192;
parameter    C_S_AXI_FIR_IO_DATA_WIDTH = 32;
parameter    C_S_AXI_FIR_IO_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_FIR_IO_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   s_axi_fir_io_AWVALID;
output   s_axi_fir_io_AWREADY;
input  [C_S_AXI_FIR_IO_ADDR_WIDTH - 1:0] s_axi_fir_io_AWADDR;
input   s_axi_fir_io_WVALID;
output   s_axi_fir_io_WREADY;
input  [C_S_AXI_FIR_IO_DATA_WIDTH - 1:0] s_axi_fir_io_WDATA;
input  [C_S_AXI_FIR_IO_WSTRB_WIDTH - 1:0] s_axi_fir_io_WSTRB;
input   s_axi_fir_io_ARVALID;
output   s_axi_fir_io_ARREADY;
input  [C_S_AXI_FIR_IO_ADDR_WIDTH - 1:0] s_axi_fir_io_ARADDR;
output   s_axi_fir_io_RVALID;
input   s_axi_fir_io_RREADY;
output  [C_S_AXI_FIR_IO_DATA_WIDTH - 1:0] s_axi_fir_io_RDATA;
output  [1:0] s_axi_fir_io_RRESP;
output   s_axi_fir_io_BVALID;
input   s_axi_fir_io_BREADY;
output  [1:0] s_axi_fir_io_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] y;
reg    y_ap_vld;
wire   [31:0] x;
wire   [31:0] d;
reg   [4:0] shift_reg_address0;
reg    shift_reg_ce0;
reg    shift_reg_we0;
wire   [31:0] shift_reg_q0;
reg   [4:0] coeffs_1_address0;
reg    coeffs_1_ce0;
reg    coeffs_1_we0;
wire   [31:0] coeffs_1_q0;
reg    coeffs_1_ce1;
wire   [31:0] coeffs_1_q1;
reg   [31:0] coeffs_1_load_reg_122;
wire    ap_CS_fsm_state2;
reg   [31:0] d_read_reg_127;
wire    ap_CS_fsm_state3;
reg   [31:0] x_read_reg_132;
wire   [31:0] grp_fu_102_p2;
reg   [31:0] mul_reg_138;
wire    ap_CS_fsm_state6;
wire   [31:0] grp_fu_97_p2;
reg   [31:0] error_reg_146;
wire    ap_CS_fsm_state13;
wire    grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_ap_start;
wire    grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_ap_done;
wire    grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_ap_idle;
wire    grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_ap_ready;
wire   [31:0] grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_acc_out;
wire    grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_acc_out_ap_vld;
wire   [4:0] grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_shift_reg_address0;
wire    grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_shift_reg_ce0;
wire    grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_shift_reg_we0;
wire   [31:0] grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_shift_reg_d0;
wire   [4:0] grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_coeffs_1_address0;
wire    grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_coeffs_1_ce0;
wire   [31:0] grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_grp_fu_151_p_din0;
wire   [31:0] grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_grp_fu_151_p_din1;
wire   [1:0] grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_grp_fu_151_p_opcode;
wire    grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_grp_fu_151_p_ce;
wire   [31:0] grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_grp_fu_102_p_din0;
wire   [31:0] grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_grp_fu_102_p_din1;
wire    grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_grp_fu_102_p_ce;
wire    grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_ap_start;
wire    grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_ap_done;
wire    grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_ap_idle;
wire    grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_ap_ready;
wire   [4:0] grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_shift_reg_address0;
wire    grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_shift_reg_ce0;
wire   [4:0] grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_coeffs_1_address0;
wire    grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_coeffs_1_ce0;
wire    grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_coeffs_1_we0;
wire   [31:0] grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_coeffs_1_d0;
wire   [4:0] grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_coeffs_1_address1;
wire    grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_coeffs_1_ce1;
wire   [31:0] grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_grp_fu_151_p_din0;
wire   [31:0] grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_grp_fu_151_p_din1;
wire   [1:0] grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_grp_fu_151_p_opcode;
wire    grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_grp_fu_151_p_ce;
wire   [31:0] grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_grp_fu_102_p_din0;
wire   [31:0] grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_grp_fu_102_p_din1;
wire    grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_grp_fu_102_p_ce;
reg    grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_ap_start_reg;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
reg    grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_ap_start_reg;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state9;
reg   [31:0] grp_fu_102_p0;
reg   [31:0] grp_fu_102_p1;
reg    grp_fu_102_ce;
wire   [31:0] grp_fu_151_p2;
reg   [31:0] grp_fu_151_p0;
reg   [31:0] grp_fu_151_p1;
reg    grp_fu_151_ce;
reg   [13:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
reg    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
reg    ap_ST_fsm_state14_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'd1;
#0 grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_ap_start_reg = 1'b0;
#0 grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_ap_start_reg = 1'b0;
end

adap_fir_shift_reg_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
shift_reg_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(shift_reg_address0),
    .ce0(shift_reg_ce0),
    .we0(shift_reg_we0),
    .d0(grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_shift_reg_d0),
    .q0(shift_reg_q0)
);

adap_fir_coeffs_1_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
coeffs_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(coeffs_1_address0),
    .ce0(coeffs_1_ce0),
    .we0(coeffs_1_we0),
    .d0(grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_coeffs_1_d0),
    .q0(coeffs_1_q0),
    .address1(grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_coeffs_1_address1),
    .ce1(coeffs_1_ce1),
    .q1(coeffs_1_q1)
);

adap_fir_adap_fir_Pipeline_Shift_Accum_Loop grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_ap_start),
    .ap_done(grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_ap_done),
    .ap_idle(grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_ap_idle),
    .ap_ready(grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_ap_ready),
    .mul(mul_reg_138),
    .x(x_read_reg_132),
    .acc_out(grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_acc_out),
    .acc_out_ap_vld(grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_acc_out_ap_vld),
    .shift_reg_address0(grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_shift_reg_address0),
    .shift_reg_ce0(grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_shift_reg_ce0),
    .shift_reg_we0(grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_shift_reg_we0),
    .shift_reg_d0(grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_shift_reg_d0),
    .shift_reg_q0(shift_reg_q0),
    .coeffs_1_address0(grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_coeffs_1_address0),
    .coeffs_1_ce0(grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_coeffs_1_ce0),
    .coeffs_1_q0(coeffs_1_q0),
    .grp_fu_151_p_din0(grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_grp_fu_151_p_din0),
    .grp_fu_151_p_din1(grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_grp_fu_151_p_din1),
    .grp_fu_151_p_opcode(grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_grp_fu_151_p_opcode),
    .grp_fu_151_p_dout0(grp_fu_151_p2),
    .grp_fu_151_p_ce(grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_grp_fu_151_p_ce),
    .grp_fu_102_p_din0(grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_grp_fu_102_p_din0),
    .grp_fu_102_p_din1(grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_grp_fu_102_p_din1),
    .grp_fu_102_p_dout0(grp_fu_102_p2),
    .grp_fu_102_p_ce(grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_grp_fu_102_p_ce)
);

adap_fir_adap_fir_Pipeline_Coeff_Update_Loop grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_ap_start),
    .ap_done(grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_ap_done),
    .ap_idle(grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_ap_idle),
    .ap_ready(grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_ap_ready),
    .error(error_reg_146),
    .shift_reg_address0(grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_shift_reg_address0),
    .shift_reg_ce0(grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_shift_reg_ce0),
    .shift_reg_q0(shift_reg_q0),
    .coeffs_1_address0(grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_coeffs_1_address0),
    .coeffs_1_ce0(grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_coeffs_1_ce0),
    .coeffs_1_we0(grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_coeffs_1_we0),
    .coeffs_1_d0(grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_coeffs_1_d0),
    .coeffs_1_address1(grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_coeffs_1_address1),
    .coeffs_1_ce1(grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_coeffs_1_ce1),
    .coeffs_1_q1(coeffs_1_q1),
    .grp_fu_151_p_din0(grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_grp_fu_151_p_din0),
    .grp_fu_151_p_din1(grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_grp_fu_151_p_din1),
    .grp_fu_151_p_opcode(grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_grp_fu_151_p_opcode),
    .grp_fu_151_p_dout0(grp_fu_151_p2),
    .grp_fu_151_p_ce(grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_grp_fu_151_p_ce),
    .grp_fu_102_p_din0(grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_grp_fu_102_p_din0),
    .grp_fu_102_p_din1(grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_grp_fu_102_p_din1),
    .grp_fu_102_p_dout0(grp_fu_102_p2),
    .grp_fu_102_p_ce(grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_grp_fu_102_p_ce)
);

adap_fir_fir_io_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_FIR_IO_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_FIR_IO_DATA_WIDTH ))
fir_io_s_axi_U(
    .AWVALID(s_axi_fir_io_AWVALID),
    .AWREADY(s_axi_fir_io_AWREADY),
    .AWADDR(s_axi_fir_io_AWADDR),
    .WVALID(s_axi_fir_io_WVALID),
    .WREADY(s_axi_fir_io_WREADY),
    .WDATA(s_axi_fir_io_WDATA),
    .WSTRB(s_axi_fir_io_WSTRB),
    .ARVALID(s_axi_fir_io_ARVALID),
    .ARREADY(s_axi_fir_io_ARREADY),
    .ARADDR(s_axi_fir_io_ARADDR),
    .RVALID(s_axi_fir_io_RVALID),
    .RREADY(s_axi_fir_io_RREADY),
    .RDATA(s_axi_fir_io_RDATA),
    .RRESP(s_axi_fir_io_RRESP),
    .BVALID(s_axi_fir_io_BVALID),
    .BREADY(s_axi_fir_io_BREADY),
    .BRESP(s_axi_fir_io_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .y(y),
    .y_ap_vld(y_ap_vld),
    .x(x),
    .d(d),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

adap_fir_fsub_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_5_full_dsp_1_U14(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(d_read_reg_127),
    .din1(grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_acc_out),
    .ce(1'b1),
    .dout(grp_fu_97_p2)
);

adap_fir_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U15(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_102_p0),
    .din1(grp_fu_102_p1),
    .ce(grp_fu_102_ce),
    .dout(grp_fu_102_p2)
);

adap_fir_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U16(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_151_p0),
    .din1(grp_fu_151_p1),
    .ce(grp_fu_151_ce),
    .dout(grp_fu_151_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state13)) begin
            grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_ap_start_reg <= 1'b1;
        end else if ((grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_ap_ready == 1'b1)) begin
            grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_ap_start_reg <= 1'b1;
        end else if ((grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_ap_ready == 1'b1)) begin
            grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        coeffs_1_load_reg_122 <= coeffs_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        d_read_reg_127 <= d;
        x_read_reg_132 <= x;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        error_reg_146 <= grp_fu_97_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        mul_reg_138 <= grp_fu_102_p2;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

always @ (*) begin
    if ((grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_ap_done == 1'b0)) begin
        ap_ST_fsm_state14_blk = 1'b1;
    end else begin
        ap_ST_fsm_state14_blk = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

always @ (*) begin
    if ((grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_ap_done == 1'b0)) begin
        ap_ST_fsm_state8_blk = 1'b1;
    end else begin
        ap_ST_fsm_state8_blk = 1'b0;
    end
end

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) & (grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_ap_done == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) & (grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_ap_done == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        coeffs_1_address0 = 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        coeffs_1_address0 = grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_coeffs_1_address0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        coeffs_1_address0 = grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_coeffs_1_address0;
    end else begin
        coeffs_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        coeffs_1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        coeffs_1_ce0 = grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_coeffs_1_ce0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        coeffs_1_ce0 = grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_coeffs_1_ce0;
    end else begin
        coeffs_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        coeffs_1_ce1 = grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_coeffs_1_ce1;
    end else begin
        coeffs_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        coeffs_1_we0 = grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_coeffs_1_we0;
    end else begin
        coeffs_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_102_ce = grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_grp_fu_102_p_ce;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_102_ce = grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_grp_fu_102_p_ce;
    end else begin
        grp_fu_102_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_102_p0 = grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_grp_fu_102_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_102_p0 = grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_grp_fu_102_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_102_p0 = coeffs_1_load_reg_122;
    end else begin
        grp_fu_102_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_102_p1 = grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_grp_fu_102_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_102_p1 = grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_grp_fu_102_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_102_p1 = x;
    end else begin
        grp_fu_102_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_151_ce = grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_grp_fu_151_p_ce;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_151_ce = grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_grp_fu_151_p_ce;
    end else begin
        grp_fu_151_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_151_p0 = grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_grp_fu_151_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_151_p0 = grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_grp_fu_151_p_din0;
    end else begin
        grp_fu_151_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_151_p1 = grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_grp_fu_151_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_151_p1 = grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_grp_fu_151_p_din1;
    end else begin
        grp_fu_151_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        shift_reg_address0 = grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_shift_reg_address0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        shift_reg_address0 = grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_shift_reg_address0;
    end else begin
        shift_reg_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        shift_reg_ce0 = grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_shift_reg_ce0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        shift_reg_ce0 = grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_shift_reg_ce0;
    end else begin
        shift_reg_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        shift_reg_we0 = grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_shift_reg_we0;
    end else begin
        shift_reg_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        y_ap_vld = 1'b1;
    end else begin
        y_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_ap_start = grp_adap_fir_Pipeline_Coeff_Update_Loop_fu_88_ap_start_reg;

assign grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_ap_start = grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_ap_start_reg;

assign y = grp_adap_fir_Pipeline_Shift_Accum_Loop_fu_77_acc_out;

endmodule //adap_fir
